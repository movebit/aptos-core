
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

type {:datatype} Vec _;

function {:constructor} Vec<T>(v: [int]T, l: int): Vec T;

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := l#Vec(v);
    Vec(v#Vec(v)[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v#Vec(v)[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    l#Vec(v)
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    l#Vec(v) == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := l#Vec(v) - 1;
    Vec(v#Vec(v)[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := l#Vec(v) - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v#Vec(v)[j] else v#Vec(v)[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := l#Vec(v1), v#Vec(v1), l#Vec(v2), v#Vec(v2);
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := l#Vec(v);
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v#Vec(v)[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v#Vec(v);
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v#Vec(v)[i := elem], l#Vec(v))
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v#Vec(v);
    Vec(m[i := m[j]][j := m[i]], l#Vec(v)))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := l#Vec(v);
    (exists i: int :: InRangeVec(v, i) && v#Vec(v)[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

type {:datatype} Multiset _;
function {:constructor} Multiset<T>(v: [T]int, l: int): Multiset T;

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    l#Multiset(s)
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := l#Multiset(s);
    (var cnt := v#Multiset(s)[v];
    Multiset(v#Multiset(s)[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := l#Multiset(s1);
    (var len2 := l#Multiset(s2);
    Multiset((lambda v:T :: v#Multiset(s1)[v]-v#Multiset(s2)[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (l#Multiset(s) == 0) &&
    (forall v: T :: v#Multiset(s)[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (l#Multiset(s1) <= l#Multiset(s2)) &&
    (forall v: T :: v#Multiset(s1)[v] <= v#Multiset(s2)[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    v#Multiset(s)[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

type {:datatype} Table _ _;

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
function {:constructor} Table<K, V>(v: [K]V, e: [K]bool, l: int): Table K V;

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    v#Table(t)[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    l#Table(t)
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    e#Table(t)[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(v#Table(t)[k := v], e#Table(t), l#Table(t))
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(v#Table(t)[k := v], e#Table(t)[k := true], l#Table(t) + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(v#Table(t), e#Table(t)[k := false], l#Table(t) - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

type {:datatype} $1_aggregator_Aggregator;
function {:constructor} $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int): $1_aggregator_Aggregator;
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, $key#$1_aggregator_Aggregator(s), $limit#$1_aggregator_Aggregator(s), $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), x, $limit#$1_aggregator_Aggregator(s), $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), $key#$1_aggregator_Aggregator(s), x, $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), $key#$1_aggregator_Aggregator(s), $limit#$1_aggregator_Aggregator(s), x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'($handle#$1_aggregator_Aggregator(s))
      && $IsValid'address'($key#$1_aggregator_Aggregator(s))
      && $IsValid'u128'($limit#$1_aggregator_Aggregator(s))
      && $IsValid'u128'($val#$1_aggregator_Aggregator(s))
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s1: $1_aggregator_Aggregator): int {
    $limit#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_handle(s1: $1_aggregator_Aggregator): int {
    $handle#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_key(s1: $1_aggregator_Aggregator): int {
    $key#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_val(s1: $1_aggregator_Aggregator): int {
    $val#$1_aggregator_Aggregator(s1)
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

type {:datatype} $Range;
function {:constructor} $Range(lb: int, ub: int): $Range;

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(lb#$Range(r)) &&  $IsValid'u64'(ub#$Range(r))
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   lb#$Range(r) <= i && i < ub#$Range(r)
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

type {:datatype} $Location;

// A global resource location within the statically known resource type's memory,
// where `a` is an address.
function {:constructor} $Global(a: int): $Location;

// A local location. `i` is the unique index of the local.
function {:constructor} $Local(i: int): $Location;

// The location of a reference outside of the verification scope, for example, a `&mut` parameter
// of the function being verified. References with these locations don't need to be written back
// when mutation ends.
function {:constructor} $Param(i: int): $Location;

// The location of an uninitialized mutation. Using this to make sure that the location
// will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
function {:constructor} $Uninitialized(): $Location;

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
type {:datatype} $Mutation _;
function {:constructor} $Mutation<T>(l: $Location, p: Vec int, v: T): $Mutation T;

// Representation of memory for a given type.
type {:datatype} $Memory _;
function {:constructor} $Memory<T>(domain: [int]bool, contents: [int]T): $Memory T;

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    v#$Mutation(ref)
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(l#$Mutation(m), p#$Mutation(m), v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) && p#$Mutation(parent) == p#$Mutation(child)
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) &&
    (var pp := p#$Mutation(parent);
    (var cp := p#$Mutation(child);
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) &&
    (var pp := p#$Mutation(parent);
    (var cp := p#$Mutation(child);
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    l#$Mutation(m1) == l#$Mutation(m2)
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    is#$Global(l#$Mutation(m))
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    l#$Mutation(m) == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    a#$Global(l#$Mutation(m))
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    domain#$Memory(m)[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    contents#$Memory(m)[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(domain#$Memory(m)[a := true], contents#$Memory(m)[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(domain#$Memory(m)[a := false], contents#$Memory(m))
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(domain#$Memory(m)[a := domain#$Memory(s)[a]],
            contents#$Memory(m)[a := contents#$Memory(s)[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}


function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}


function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}


function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}


function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}


function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}


function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}


function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}


function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}


function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}


function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}


function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, lb#$Range(r), ub#$Range(r))
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_Aggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_Aggregator''(v1: Vec ($1_aggregator_Aggregator), v2: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), prefix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), suffix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_Aggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): int;
axiom (forall v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator:: {$IndexOfVec'$1_aggregator_Aggregator'(v, e)}
    (var i := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
     if (!$ContainsVec'$1_aggregator_Aggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_Aggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_Aggregator'() returns (v: Vec ($1_aggregator_Aggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), val: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), val: $1_aggregator_Aggregator): Vec ($1_aggregator_Aggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var mid_left_vec: Vec ($1_aggregator_Aggregator);
    var mid_right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, e: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int) returns (dst: $1_aggregator_Aggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), index: int)
returns (dst: $Mutation ($1_aggregator_Aggregator), m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int, j: int): Vec ($1_aggregator_Aggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var len: int;
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_Aggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_bls12381_PublicKeyWithPoP`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_bls12381_PublicKeyWithPoP''(v1: Vec ($1_bls12381_PublicKeyWithPoP), v2: Vec ($1_bls12381_PublicKeyWithPoP)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_bls12381_PublicKeyWithPoP'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_bls12381_PublicKeyWithPoP''(v: Vec ($1_bls12381_PublicKeyWithPoP), prefix: Vec ($1_bls12381_PublicKeyWithPoP)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_bls12381_PublicKeyWithPoP'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_bls12381_PublicKeyWithPoP''(v: Vec ($1_bls12381_PublicKeyWithPoP), suffix: Vec ($1_bls12381_PublicKeyWithPoP)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_bls12381_PublicKeyWithPoP'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_bls12381_PublicKeyWithPoP''(v: Vec ($1_bls12381_PublicKeyWithPoP)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_bls12381_PublicKeyWithPoP'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), e: $1_bls12381_PublicKeyWithPoP): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_bls12381_PublicKeyWithPoP'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), e: $1_bls12381_PublicKeyWithPoP): int;
axiom (forall v: Vec ($1_bls12381_PublicKeyWithPoP), e: $1_bls12381_PublicKeyWithPoP:: {$IndexOfVec'$1_bls12381_PublicKeyWithPoP'(v, e)}
    (var i := $IndexOfVec'$1_bls12381_PublicKeyWithPoP'(v, e);
     if (!$ContainsVec'$1_bls12381_PublicKeyWithPoP'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_bls12381_PublicKeyWithPoP'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_bls12381_PublicKeyWithPoP'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_bls12381_PublicKeyWithPoP'(): Vec ($1_bls12381_PublicKeyWithPoP) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_bls12381_PublicKeyWithPoP'() returns (v: Vec ($1_bls12381_PublicKeyWithPoP)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_bls12381_PublicKeyWithPoP'(): Vec ($1_bls12381_PublicKeyWithPoP) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), val: $1_bls12381_PublicKeyWithPoP) returns (m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), val: $1_bls12381_PublicKeyWithPoP): Vec ($1_bls12381_PublicKeyWithPoP) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) returns (e: $1_bls12381_PublicKeyWithPoP, m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    var v: Vec ($1_bls12381_PublicKeyWithPoP);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), other: Vec ($1_bls12381_PublicKeyWithPoP)) returns (m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) returns (m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), other: Vec ($1_bls12381_PublicKeyWithPoP)) returns (m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), new_len: int) returns (v: (Vec ($1_bls12381_PublicKeyWithPoP)), m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), new_len: int) returns (v: (Vec ($1_bls12381_PublicKeyWithPoP)), m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), left: int, right: int) returns (m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    var left_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var mid_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var right_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var v: Vec ($1_bls12381_PublicKeyWithPoP);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), rot: int) returns (n: int, m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    var v: Vec ($1_bls12381_PublicKeyWithPoP);
    var len: int;
    var left_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var right_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    var left_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var mid_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var right_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var mid_left_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var mid_right_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var v: Vec ($1_bls12381_PublicKeyWithPoP);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), i: int, e: $1_bls12381_PublicKeyWithPoP) returns (m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP))) {
    var left_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var right_vec: Vec ($1_bls12381_PublicKeyWithPoP);
    var v: Vec ($1_bls12381_PublicKeyWithPoP);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), i: int) returns (dst: $1_bls12381_PublicKeyWithPoP) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), i: int): $1_bls12381_PublicKeyWithPoP {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), index: int)
returns (dst: $Mutation ($1_bls12381_PublicKeyWithPoP), m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)))
{
    var v: Vec ($1_bls12381_PublicKeyWithPoP);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), i: int): $1_bls12381_PublicKeyWithPoP {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), i: int, j: int) returns (m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)))
{
    var v: Vec ($1_bls12381_PublicKeyWithPoP);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), i: int, j: int): Vec ($1_bls12381_PublicKeyWithPoP) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), i: int) returns (e: $1_bls12381_PublicKeyWithPoP, m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)))
{
    var v: Vec ($1_bls12381_PublicKeyWithPoP);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_bls12381_PublicKeyWithPoP'(m: $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)), i: int) returns (e: $1_bls12381_PublicKeyWithPoP, m': $Mutation (Vec ($1_bls12381_PublicKeyWithPoP)))
{
    var len: int;
    var v: Vec ($1_bls12381_PublicKeyWithPoP);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), e: $1_bls12381_PublicKeyWithPoP) returns (res: bool)  {
    res := $ContainsVec'$1_bls12381_PublicKeyWithPoP'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP), e: $1_bls12381_PublicKeyWithPoP) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_bls12381_PublicKeyWithPoP'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_Integer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_Integer''(v1: Vec ($1_optional_aggregator_Integer), v2: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), prefix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), suffix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_Integer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): int;
axiom (forall v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer:: {$IndexOfVec'$1_optional_aggregator_Integer'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_Integer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_Integer'() returns (v: Vec ($1_optional_aggregator_Integer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), val: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), val: $1_optional_aggregator_Integer): Vec ($1_optional_aggregator_Integer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var mid_left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, e: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int) returns (dst: $1_optional_aggregator_Integer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_Integer), m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int, j: int): Vec ($1_optional_aggregator_Integer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_Integer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_OptionalAggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(v1: Vec ($1_optional_aggregator_OptionalAggregator), v2: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), prefix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), suffix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): int;
axiom (forall v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator:: {$IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_OptionalAggregator'() returns (v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), val: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), val: $1_optional_aggregator_OptionalAggregator): Vec ($1_optional_aggregator_OptionalAggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, e: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int) returns (dst: $1_optional_aggregator_OptionalAggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_OptionalAggregator), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int, j: int): Vec ($1_optional_aggregator_OptionalAggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_stake_IndividualValidatorPerformance`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_stake_IndividualValidatorPerformance''(v1: Vec ($1_stake_IndividualValidatorPerformance), v2: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance), prefix: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance), suffix: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance): int;
axiom (forall v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance:: {$IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e)}
    (var i := $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e);
     if (!$ContainsVec'$1_stake_IndividualValidatorPerformance'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_stake_IndividualValidatorPerformance'(): Vec ($1_stake_IndividualValidatorPerformance) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_stake_IndividualValidatorPerformance'() returns (v: Vec ($1_stake_IndividualValidatorPerformance)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_stake_IndividualValidatorPerformance'(): Vec ($1_stake_IndividualValidatorPerformance) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), val: $1_stake_IndividualValidatorPerformance) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), val: $1_stake_IndividualValidatorPerformance): Vec ($1_stake_IndividualValidatorPerformance) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), other: Vec ($1_stake_IndividualValidatorPerformance)) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), other: Vec ($1_stake_IndividualValidatorPerformance)) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), new_len: int) returns (v: (Vec ($1_stake_IndividualValidatorPerformance)), m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), new_len: int) returns (v: (Vec ($1_stake_IndividualValidatorPerformance)), m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), left: int, right: int) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var mid_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), rot: int) returns (n: int, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    var len: int;
    var left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var mid_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var mid_left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var mid_right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int, e: $1_stake_IndividualValidatorPerformance) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int) returns (dst: $1_stake_IndividualValidatorPerformance) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int): $1_stake_IndividualValidatorPerformance {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), index: int)
returns (dst: $Mutation ($1_stake_IndividualValidatorPerformance), m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int): $1_stake_IndividualValidatorPerformance {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int, j: int) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int, j: int): Vec ($1_stake_IndividualValidatorPerformance) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var len: int;
    var v: Vec ($1_stake_IndividualValidatorPerformance);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance) returns (res: bool)  {
    res := $ContainsVec'$1_stake_IndividualValidatorPerformance'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_stake_ValidatorInfo`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_stake_ValidatorInfo''(v1: Vec ($1_stake_ValidatorInfo), v2: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo), prefix: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo), suffix: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_stake_ValidatorInfo'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo): int;
axiom (forall v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo:: {$IndexOfVec'$1_stake_ValidatorInfo'(v, e)}
    (var i := $IndexOfVec'$1_stake_ValidatorInfo'(v, e);
     if (!$ContainsVec'$1_stake_ValidatorInfo'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_stake_ValidatorInfo'(): Vec ($1_stake_ValidatorInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_stake_ValidatorInfo'() returns (v: Vec ($1_stake_ValidatorInfo)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_stake_ValidatorInfo'(): Vec ($1_stake_ValidatorInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), val: $1_stake_ValidatorInfo) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), val: $1_stake_ValidatorInfo): Vec ($1_stake_ValidatorInfo) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo))) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var v: Vec ($1_stake_ValidatorInfo);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), other: Vec ($1_stake_ValidatorInfo)) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo))) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), other: Vec ($1_stake_ValidatorInfo)) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), new_len: int) returns (v: (Vec ($1_stake_ValidatorInfo)), m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), new_len: int) returns (v: (Vec ($1_stake_ValidatorInfo)), m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), left: int, right: int) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var left_vec: Vec ($1_stake_ValidatorInfo);
    var mid_vec: Vec ($1_stake_ValidatorInfo);
    var right_vec: Vec ($1_stake_ValidatorInfo);
    var v: Vec ($1_stake_ValidatorInfo);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), rot: int) returns (n: int, m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var v: Vec ($1_stake_ValidatorInfo);
    var len: int;
    var left_vec: Vec ($1_stake_ValidatorInfo);
    var right_vec: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var left_vec: Vec ($1_stake_ValidatorInfo);
    var mid_vec: Vec ($1_stake_ValidatorInfo);
    var right_vec: Vec ($1_stake_ValidatorInfo);
    var mid_left_vec: Vec ($1_stake_ValidatorInfo);
    var mid_right_vec: Vec ($1_stake_ValidatorInfo);
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int, e: $1_stake_ValidatorInfo) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var left_vec: Vec ($1_stake_ValidatorInfo);
    var right_vec: Vec ($1_stake_ValidatorInfo);
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int) returns (dst: $1_stake_ValidatorInfo) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int): $1_stake_ValidatorInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), index: int)
returns (dst: $Mutation ($1_stake_ValidatorInfo), m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int): $1_stake_ValidatorInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int, j: int) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int, j: int): Vec ($1_stake_ValidatorInfo) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var len: int;
    var v: Vec ($1_stake_ValidatorInfo);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo) returns (res: bool)  {
    res := $ContainsVec'$1_stake_ValidatorInfo'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_stake_ValidatorInfo'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_storage_gas_Point`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_storage_gas_Point''(v1: Vec ($1_storage_gas_Point), v2: Vec ($1_storage_gas_Point)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_storage_gas_Point'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_storage_gas_Point''(v: Vec ($1_storage_gas_Point), prefix: Vec ($1_storage_gas_Point)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_storage_gas_Point'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_storage_gas_Point''(v: Vec ($1_storage_gas_Point), suffix: Vec ($1_storage_gas_Point)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_storage_gas_Point'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_storage_gas_Point''(v: Vec ($1_storage_gas_Point)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_storage_gas_Point'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), e: $1_storage_gas_Point): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_storage_gas_Point'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), e: $1_storage_gas_Point): int;
axiom (forall v: Vec ($1_storage_gas_Point), e: $1_storage_gas_Point:: {$IndexOfVec'$1_storage_gas_Point'(v, e)}
    (var i := $IndexOfVec'$1_storage_gas_Point'(v, e);
     if (!$ContainsVec'$1_storage_gas_Point'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_storage_gas_Point'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_storage_gas_Point'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_storage_gas_Point'(): Vec ($1_storage_gas_Point) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_storage_gas_Point'() returns (v: Vec ($1_storage_gas_Point)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_storage_gas_Point'(): Vec ($1_storage_gas_Point) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), val: $1_storage_gas_Point) returns (m': $Mutation (Vec ($1_storage_gas_Point))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), val: $1_storage_gas_Point): Vec ($1_storage_gas_Point) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point))) returns (e: $1_storage_gas_Point, m': $Mutation (Vec ($1_storage_gas_Point))) {
    var v: Vec ($1_storage_gas_Point);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), other: Vec ($1_storage_gas_Point)) returns (m': $Mutation (Vec ($1_storage_gas_Point))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point))) returns (m': $Mutation (Vec ($1_storage_gas_Point))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), other: Vec ($1_storage_gas_Point)) returns (m': $Mutation (Vec ($1_storage_gas_Point))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), new_len: int) returns (v: (Vec ($1_storage_gas_Point)), m': $Mutation (Vec ($1_storage_gas_Point))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), new_len: int) returns (v: (Vec ($1_storage_gas_Point)), m': $Mutation (Vec ($1_storage_gas_Point))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), left: int, right: int) returns (m': $Mutation (Vec ($1_storage_gas_Point))) {
    var left_vec: Vec ($1_storage_gas_Point);
    var mid_vec: Vec ($1_storage_gas_Point);
    var right_vec: Vec ($1_storage_gas_Point);
    var v: Vec ($1_storage_gas_Point);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), rot: int) returns (n: int, m': $Mutation (Vec ($1_storage_gas_Point))) {
    var v: Vec ($1_storage_gas_Point);
    var len: int;
    var left_vec: Vec ($1_storage_gas_Point);
    var right_vec: Vec ($1_storage_gas_Point);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_storage_gas_Point))) {
    var left_vec: Vec ($1_storage_gas_Point);
    var mid_vec: Vec ($1_storage_gas_Point);
    var right_vec: Vec ($1_storage_gas_Point);
    var mid_left_vec: Vec ($1_storage_gas_Point);
    var mid_right_vec: Vec ($1_storage_gas_Point);
    var v: Vec ($1_storage_gas_Point);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), i: int, e: $1_storage_gas_Point) returns (m': $Mutation (Vec ($1_storage_gas_Point))) {
    var left_vec: Vec ($1_storage_gas_Point);
    var right_vec: Vec ($1_storage_gas_Point);
    var v: Vec ($1_storage_gas_Point);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), i: int) returns (dst: $1_storage_gas_Point) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), i: int): $1_storage_gas_Point {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), index: int)
returns (dst: $Mutation ($1_storage_gas_Point), m': $Mutation (Vec ($1_storage_gas_Point)))
{
    var v: Vec ($1_storage_gas_Point);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), i: int): $1_storage_gas_Point {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), i: int, j: int) returns (m': $Mutation (Vec ($1_storage_gas_Point)))
{
    var v: Vec ($1_storage_gas_Point);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), i: int, j: int): Vec ($1_storage_gas_Point) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), i: int) returns (e: $1_storage_gas_Point, m': $Mutation (Vec ($1_storage_gas_Point)))
{
    var v: Vec ($1_storage_gas_Point);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_storage_gas_Point'(m: $Mutation (Vec ($1_storage_gas_Point)), i: int) returns (e: $1_storage_gas_Point, m': $Mutation (Vec ($1_storage_gas_Point)))
{
    var len: int;
    var v: Vec ($1_storage_gas_Point);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), e: $1_storage_gas_Point) returns (res: bool)  {
    res := $ContainsVec'$1_storage_gas_Point'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_storage_gas_Point'(v: Vec ($1_storage_gas_Point), e: $1_storage_gas_Point) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_storage_gas_Point'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u64'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u64'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u64'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u64'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, right: int) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv64'(m: $Mutation (Vec (bv64)), rot: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var mid_left_vec: Vec (bv64);
    var mid_right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv64'(m: $Mutation (Vec (bv64)), i: int, e: bv64) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `address`

function $EncodeKey'address'(k: int): int;
axiom (
  forall k1, k2: int :: {$EncodeKey'address'(k1), $EncodeKey'address'(k2)}
    $IsEqual'address'(k1, k2) <==> $EncodeKey'address'(k1) == $EncodeKey'address'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,$1_coin_Coin'$1_aptos_coin_AptosCoin')`

function $IsEqual'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(t1: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'), t2: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''() returns (v: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(t: (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_table_add'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(m: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')), k: int, v: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns (m': $Mutation(Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'))) {
    var enc_k: int;
    var t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(m: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')), k: int, v: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns (m': $Mutation(Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'))) {
    var enc_k: int;
    var t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(m: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')), k: int)
returns (v: $1_coin_Coin'$1_aptos_coin_AptosCoin', m': $Mutation(Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'))) {
    var enc_k: int;
    var t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'), k: int) returns (v: $1_coin_Coin'$1_aptos_coin_AptosCoin') {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(m: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')), k: int)
returns (dst: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), m': $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'))) {
    var enc_k: int;
    var t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(m: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')), k: int, default: $1_coin_Coin'$1_aptos_coin_AptosCoin')
returns (dst: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), m': $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'))) {
    var enc_k: int;
    var t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var t': Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(l#$Mutation(m'), ExtendVec(p#$Mutation(m'), enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_spec_contains'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(t: (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_set'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'), k: int, v: $1_coin_Coin'$1_aptos_coin_AptosCoin'): Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin') {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'), k: int): Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin') {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_get'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''(t: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'), k: int): $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    GetTable(t, $EncodeKey'address'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

type {:datatype} $signer;
function {:constructor} $signer($addr: int): $signer;
function {:inline} $IsValid'signer'(s: $signer): bool {
    $IsValid'address'($addr#$signer(s))
}
function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    s1 == s2
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := $addr#$signer(signer);
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    $addr#$signer(signer)
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize


// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

type {:datatype} $TypeParamInfo;

function {:constructor} $TypeParamBool(): $TypeParamInfo;
function {:constructor} $TypeParamU8(): $TypeParamInfo;
function {:constructor} $TypeParamU16(): $TypeParamInfo;
function {:constructor} $TypeParamU32(): $TypeParamInfo;
function {:constructor} $TypeParamU64(): $TypeParamInfo;
function {:constructor} $TypeParamU128(): $TypeParamInfo;
function {:constructor} $TypeParamU256(): $TypeParamInfo;
function {:constructor} $TypeParamAddress(): $TypeParamInfo;
function {:constructor} $TypeParamSigner(): $TypeParamInfo;
function {:constructor} $TypeParamVector(e: $TypeParamInfo): $TypeParamInfo;
function {:constructor} $TypeParamStruct(a: int, m: Vec int, s: Vec int): $TypeParamInfo;



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamBool(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> is#$TypeParamBool(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU8(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> is#$TypeParamU8(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU16(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> is#$TypeParamU16(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU32(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> is#$TypeParamU32(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU64(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> is#$TypeParamU64(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU128(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> is#$TypeParamU128(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU256(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> is#$TypeParamU256(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamAddress(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> is#$TypeParamAddress(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamSigner(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> is#$TypeParamSigner(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamVector(t) ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(e#$TypeParamVector(t))), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> is#$TypeParamVector(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamStruct(t) ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(a#$TypeParamStruct(t))), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), m#$TypeParamStruct(t)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), s#$TypeParamStruct(t))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> is#$TypeParamVector(t));


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<bls12381::PublicKeyWithPoP>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_bls12381_PublicKeyWithPoP''($1_from_bcs_deserialize'vec'$1_bls12381_PublicKeyWithPoP''(b1), $1_from_bcs_deserialize'vec'$1_bls12381_PublicKeyWithPoP''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<stake::IndividualValidatorPerformance>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_stake_IndividualValidatorPerformance''($1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b1), $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<stake::ValidatorInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_stake_ValidatorInfo''($1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b1), $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<storage_gas::Point>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_storage_gas_Point''($1_from_bcs_deserialize'vec'$1_storage_gas_Point''(b1), $1_from_bcs_deserialize'vec'$1_storage_gas_Point''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<bls12381::PublicKeyWithPoP>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_bls12381_PublicKeyWithPoP''($1_from_bcs_deserialize'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_features_Features'($1_from_bcs_deserialize'$1_features_Features'(b1), $1_from_bcs_deserialize'$1_features_Features'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <table::Table<address, coin::Coin<aptos_coin::AptosCoin>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''($1_from_bcs_deserialize'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(b1), $1_from_bcs_deserialize'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_AddStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::DistributeRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::IncreaseLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::JoinValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::LeaveValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::ReactivateStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::RegisterValidatorCandidateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::RotateConsensusKeyEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::SetOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_SetOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::WithdrawStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<block::NewBlockEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_block_NewBlockEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_block_NewBlockEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_block_NewBlockEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<block::UpdateEpochIntervalEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::BurnCapability<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::MintCapability<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <fixed_point64::FixedPoint64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_fixed_point64_FixedPoint64'($1_from_bcs_deserialize'$1_fixed_point64_FixedPoint64'(b1), $1_from_bcs_deserialize'$1_fixed_point64_FixedPoint64'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_config::StakingConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_config_StakingConfig'($1_from_bcs_deserialize'$1_staking_config_StakingConfig'(b1), $1_from_bcs_deserialize'$1_staking_config_StakingConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_config::StakingRewardsConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_config_StakingRewardsConfig'($1_from_bcs_deserialize'$1_staking_config_StakingRewardsConfig'(b1), $1_from_bcs_deserialize'$1_staking_config_StakingRewardsConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <bls12381::ProofOfPossession>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_bls12381_ProofOfPossession'($1_from_bcs_deserialize'$1_bls12381_ProofOfPossession'(b1), $1_from_bcs_deserialize'$1_bls12381_ProofOfPossession'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <bls12381::PublicKeyWithPoP>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_bls12381_PublicKeyWithPoP'($1_from_bcs_deserialize'$1_bls12381_PublicKeyWithPoP'(b1), $1_from_bcs_deserialize'$1_bls12381_PublicKeyWithPoP'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::AddStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_AddStakeEvent'($1_from_bcs_deserialize'$1_stake_AddStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_AddStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::AllowedValidators>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_AllowedValidators'($1_from_bcs_deserialize'$1_stake_AllowedValidators'(b1), $1_from_bcs_deserialize'$1_stake_AllowedValidators'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::AptosCoinCapabilities>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_AptosCoinCapabilities'($1_from_bcs_deserialize'$1_stake_AptosCoinCapabilities'(b1), $1_from_bcs_deserialize'$1_stake_AptosCoinCapabilities'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::DistributeRewardsEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_DistributeRewardsEvent'($1_from_bcs_deserialize'$1_stake_DistributeRewardsEvent'(b1), $1_from_bcs_deserialize'$1_stake_DistributeRewardsEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::IncreaseLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_IncreaseLockupEvent'($1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(b1), $1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::IndividualValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_IndividualValidatorPerformance'($1_from_bcs_deserialize'$1_stake_IndividualValidatorPerformance'(b1), $1_from_bcs_deserialize'$1_stake_IndividualValidatorPerformance'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::JoinValidatorSetEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_JoinValidatorSetEvent'($1_from_bcs_deserialize'$1_stake_JoinValidatorSetEvent'(b1), $1_from_bcs_deserialize'$1_stake_JoinValidatorSetEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::LeaveValidatorSetEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_LeaveValidatorSetEvent'($1_from_bcs_deserialize'$1_stake_LeaveValidatorSetEvent'(b1), $1_from_bcs_deserialize'$1_stake_LeaveValidatorSetEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::OwnerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_OwnerCapability'($1_from_bcs_deserialize'$1_stake_OwnerCapability'(b1), $1_from_bcs_deserialize'$1_stake_OwnerCapability'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ReactivateStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ReactivateStakeEvent'($1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::RotateConsensusKeyEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_RotateConsensusKeyEvent'($1_from_bcs_deserialize'$1_stake_RotateConsensusKeyEvent'(b1), $1_from_bcs_deserialize'$1_stake_RotateConsensusKeyEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::SetOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_SetOperatorEvent'($1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(b1), $1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::StakePool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_StakePool'($1_from_bcs_deserialize'$1_stake_StakePool'(b1), $1_from_bcs_deserialize'$1_stake_StakePool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_UnlockStakeEvent'($1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::UpdateNetworkAndFullnodeAddressesEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($1_from_bcs_deserialize'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(b1), $1_from_bcs_deserialize'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorConfig'($1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorFees>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorFees'($1_from_bcs_deserialize'$1_stake_ValidatorFees'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorFees'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorInfo'($1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorPerformance'($1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorSet>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorSet'($1_from_bcs_deserialize'$1_stake_ValidatorSet'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorSet'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::WithdrawStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_WithdrawStakeEvent'($1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <transaction_fee::AptosCoinCapabilities>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_transaction_fee_AptosCoinCapabilities'($1_from_bcs_deserialize'$1_transaction_fee_AptosCoinCapabilities'(b1), $1_from_bcs_deserialize'$1_transaction_fee_AptosCoinCapabilities'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <state_storage::GasParameter>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_state_storage_GasParameter'($1_from_bcs_deserialize'$1_state_storage_GasParameter'(b1), $1_from_bcs_deserialize'$1_state_storage_GasParameter'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <state_storage::StateStorageUsage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_state_storage_StateStorageUsage'($1_from_bcs_deserialize'$1_state_storage_StateStorageUsage'(b1), $1_from_bcs_deserialize'$1_state_storage_StateStorageUsage'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <state_storage::Usage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_state_storage_Usage'($1_from_bcs_deserialize'$1_state_storage_Usage'(b1), $1_from_bcs_deserialize'$1_state_storage_Usage'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <storage_gas::GasCurve>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_storage_gas_GasCurve'($1_from_bcs_deserialize'$1_storage_gas_GasCurve'(b1), $1_from_bcs_deserialize'$1_storage_gas_GasCurve'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <storage_gas::Point>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_storage_gas_Point'($1_from_bcs_deserialize'$1_storage_gas_Point'(b1), $1_from_bcs_deserialize'$1_storage_gas_Point'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <storage_gas::StorageGas>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_storage_gas_StorageGas'($1_from_bcs_deserialize'$1_storage_gas_StorageGas'(b1), $1_from_bcs_deserialize'$1_storage_gas_StorageGas'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <storage_gas::StorageGasConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_storage_gas_StorageGasConfig'($1_from_bcs_deserialize'$1_storage_gas_StorageGasConfig'(b1), $1_from_bcs_deserialize'$1_storage_gas_StorageGasConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <storage_gas::UsageGasConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_storage_gas_UsageGasConfig'($1_from_bcs_deserialize'$1_storage_gas_UsageGasConfig'(b1), $1_from_bcs_deserialize'$1_storage_gas_UsageGasConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <block::BlockResource>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_block_BlockResource'($1_from_bcs_deserialize'$1_block_BlockResource'(b1), $1_from_bcs_deserialize'$1_block_BlockResource'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u128'(b1), $1_from_bcs_deserializable'u128'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u64''(b1), $1_from_bcs_deserializable'vec'u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<bls12381::PublicKeyWithPoP>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_bls12381_PublicKeyWithPoP''(b1), $1_from_bcs_deserializable'vec'$1_bls12381_PublicKeyWithPoP''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<stake::IndividualValidatorPerformance>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_stake_IndividualValidatorPerformance''(b1), $1_from_bcs_deserializable'vec'$1_stake_IndividualValidatorPerformance''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<stake::ValidatorInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_stake_ValidatorInfo''(b1), $1_from_bcs_deserializable'vec'$1_stake_ValidatorInfo''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<storage_gas::Point>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_storage_gas_Point''(b1), $1_from_bcs_deserializable'vec'$1_storage_gas_Point''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u64''(b1), $1_from_bcs_deserializable'$1_option_Option'u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<bls12381::PublicKeyWithPoP>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_features_Features'(b1), $1_from_bcs_deserializable'$1_features_Features'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <table::Table<address, coin::Coin<aptos_coin::AptosCoin>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(b1), $1_from_bcs_deserializable'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_AddStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_AddStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::DistributeRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::IncreaseLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::JoinValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::LeaveValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::ReactivateStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::RegisterValidatorCandidateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::RotateConsensusKeyEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::SetOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::WithdrawStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<block::NewBlockEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_block_NewBlockEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_block_NewBlockEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<block::UpdateEpochIntervalEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserializable'$1_aggregator_Aggregator'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::BurnCapability<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_DepositEvent'(b1), $1_from_bcs_deserializable'$1_coin_DepositEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::MintCapability<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fixed_point64::FixedPoint64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fixed_point64_FixedPoint64'(b1), $1_from_bcs_deserializable'$1_fixed_point64_FixedPoint64'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_config::StakingConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_config_StakingConfig'(b1), $1_from_bcs_deserializable'$1_staking_config_StakingConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_config::StakingRewardsConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_config_StakingRewardsConfig'(b1), $1_from_bcs_deserializable'$1_staking_config_StakingRewardsConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bls12381::ProofOfPossession>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_bls12381_ProofOfPossession'(b1), $1_from_bcs_deserializable'$1_bls12381_ProofOfPossession'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bls12381::PublicKeyWithPoP>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_bls12381_PublicKeyWithPoP'(b1), $1_from_bcs_deserializable'$1_bls12381_PublicKeyWithPoP'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::AddStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_AddStakeEvent'(b1), $1_from_bcs_deserializable'$1_stake_AddStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::AllowedValidators>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_AllowedValidators'(b1), $1_from_bcs_deserializable'$1_stake_AllowedValidators'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::AptosCoinCapabilities>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_AptosCoinCapabilities'(b1), $1_from_bcs_deserializable'$1_stake_AptosCoinCapabilities'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::DistributeRewardsEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_DistributeRewardsEvent'(b1), $1_from_bcs_deserializable'$1_stake_DistributeRewardsEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::IncreaseLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_IncreaseLockupEvent'(b1), $1_from_bcs_deserializable'$1_stake_IncreaseLockupEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::IndividualValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_IndividualValidatorPerformance'(b1), $1_from_bcs_deserializable'$1_stake_IndividualValidatorPerformance'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::JoinValidatorSetEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_JoinValidatorSetEvent'(b1), $1_from_bcs_deserializable'$1_stake_JoinValidatorSetEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::LeaveValidatorSetEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_LeaveValidatorSetEvent'(b1), $1_from_bcs_deserializable'$1_stake_LeaveValidatorSetEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::OwnerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_OwnerCapability'(b1), $1_from_bcs_deserializable'$1_stake_OwnerCapability'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ReactivateStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ReactivateStakeEvent'(b1), $1_from_bcs_deserializable'$1_stake_ReactivateStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::RotateConsensusKeyEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_RotateConsensusKeyEvent'(b1), $1_from_bcs_deserializable'$1_stake_RotateConsensusKeyEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::SetOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_SetOperatorEvent'(b1), $1_from_bcs_deserializable'$1_stake_SetOperatorEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::StakePool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_StakePool'(b1), $1_from_bcs_deserializable'$1_stake_StakePool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_UnlockStakeEvent'(b1), $1_from_bcs_deserializable'$1_stake_UnlockStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::UpdateNetworkAndFullnodeAddressesEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(b1), $1_from_bcs_deserializable'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorConfig'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorFees>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorFees'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorFees'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorInfo'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorPerformance'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorPerformance'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorSet>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorSet'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorSet'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::WithdrawStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_WithdrawStakeEvent'(b1), $1_from_bcs_deserializable'$1_stake_WithdrawStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <transaction_fee::AptosCoinCapabilities>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_transaction_fee_AptosCoinCapabilities'(b1), $1_from_bcs_deserializable'$1_transaction_fee_AptosCoinCapabilities'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <state_storage::GasParameter>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_state_storage_GasParameter'(b1), $1_from_bcs_deserializable'$1_state_storage_GasParameter'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <state_storage::StateStorageUsage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_state_storage_StateStorageUsage'(b1), $1_from_bcs_deserializable'$1_state_storage_StateStorageUsage'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <state_storage::Usage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_state_storage_Usage'(b1), $1_from_bcs_deserializable'$1_state_storage_Usage'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <storage_gas::GasCurve>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_storage_gas_GasCurve'(b1), $1_from_bcs_deserializable'$1_storage_gas_GasCurve'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <storage_gas::Point>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_storage_gas_Point'(b1), $1_from_bcs_deserializable'$1_storage_gas_Point'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <storage_gas::StorageGas>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_storage_gas_StorageGas'(b1), $1_from_bcs_deserializable'$1_storage_gas_StorageGas'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <storage_gas::StorageGasConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_storage_gas_StorageGasConfig'(b1), $1_from_bcs_deserializable'$1_storage_gas_StorageGasConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <storage_gas::UsageGasConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_storage_gas_UsageGasConfig'(b1), $1_from_bcs_deserializable'$1_storage_gas_UsageGasConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <block::BlockResource>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_block_BlockResource'(b1), $1_from_bcs_deserializable'$1_block_BlockResource'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<bls12381::PublicKeyWithPoP>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_bls12381_PublicKeyWithPoP''($1_from_bcs_deserialize'vec'$1_bls12381_PublicKeyWithPoP''(b1), $1_from_bcs_deserialize'vec'$1_bls12381_PublicKeyWithPoP''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<stake::IndividualValidatorPerformance>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_stake_IndividualValidatorPerformance''($1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b1), $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<stake::ValidatorInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_stake_ValidatorInfo''($1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b1), $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<storage_gas::Point>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_storage_gas_Point''($1_from_bcs_deserialize'vec'$1_storage_gas_Point''(b1), $1_from_bcs_deserialize'vec'$1_storage_gas_Point''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<bls12381::PublicKeyWithPoP>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_bls12381_PublicKeyWithPoP''($1_from_bcs_deserialize'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_features_Features'($1_from_bcs_deserialize'$1_features_Features'(b1), $1_from_bcs_deserialize'$1_features_Features'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <table::Table<address, coin::Coin<aptos_coin::AptosCoin>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''($1_from_bcs_deserialize'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(b1), $1_from_bcs_deserialize'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_AddStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::DistributeRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::IncreaseLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::JoinValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::LeaveValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::ReactivateStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::RegisterValidatorCandidateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::RotateConsensusKeyEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::SetOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_SetOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::WithdrawStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<block::NewBlockEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_block_NewBlockEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_block_NewBlockEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_block_NewBlockEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<block::UpdateEpochIntervalEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::BurnCapability<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::MintCapability<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fixed_point64::FixedPoint64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fixed_point64_FixedPoint64'($1_from_bcs_deserialize'$1_fixed_point64_FixedPoint64'(b1), $1_from_bcs_deserialize'$1_fixed_point64_FixedPoint64'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_config::StakingConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_config_StakingConfig'($1_from_bcs_deserialize'$1_staking_config_StakingConfig'(b1), $1_from_bcs_deserialize'$1_staking_config_StakingConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_config::StakingRewardsConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_config_StakingRewardsConfig'($1_from_bcs_deserialize'$1_staking_config_StakingRewardsConfig'(b1), $1_from_bcs_deserialize'$1_staking_config_StakingRewardsConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bls12381::ProofOfPossession>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_bls12381_ProofOfPossession'($1_from_bcs_deserialize'$1_bls12381_ProofOfPossession'(b1), $1_from_bcs_deserialize'$1_bls12381_ProofOfPossession'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bls12381::PublicKeyWithPoP>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_bls12381_PublicKeyWithPoP'($1_from_bcs_deserialize'$1_bls12381_PublicKeyWithPoP'(b1), $1_from_bcs_deserialize'$1_bls12381_PublicKeyWithPoP'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::AddStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_AddStakeEvent'($1_from_bcs_deserialize'$1_stake_AddStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_AddStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::AllowedValidators>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_AllowedValidators'($1_from_bcs_deserialize'$1_stake_AllowedValidators'(b1), $1_from_bcs_deserialize'$1_stake_AllowedValidators'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::AptosCoinCapabilities>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_AptosCoinCapabilities'($1_from_bcs_deserialize'$1_stake_AptosCoinCapabilities'(b1), $1_from_bcs_deserialize'$1_stake_AptosCoinCapabilities'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::DistributeRewardsEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_DistributeRewardsEvent'($1_from_bcs_deserialize'$1_stake_DistributeRewardsEvent'(b1), $1_from_bcs_deserialize'$1_stake_DistributeRewardsEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::IncreaseLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_IncreaseLockupEvent'($1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(b1), $1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::IndividualValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'($1_from_bcs_deserialize'$1_stake_IndividualValidatorPerformance'(b1), $1_from_bcs_deserialize'$1_stake_IndividualValidatorPerformance'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::JoinValidatorSetEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_JoinValidatorSetEvent'($1_from_bcs_deserialize'$1_stake_JoinValidatorSetEvent'(b1), $1_from_bcs_deserialize'$1_stake_JoinValidatorSetEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::LeaveValidatorSetEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_LeaveValidatorSetEvent'($1_from_bcs_deserialize'$1_stake_LeaveValidatorSetEvent'(b1), $1_from_bcs_deserialize'$1_stake_LeaveValidatorSetEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::OwnerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_OwnerCapability'($1_from_bcs_deserialize'$1_stake_OwnerCapability'(b1), $1_from_bcs_deserialize'$1_stake_OwnerCapability'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ReactivateStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ReactivateStakeEvent'($1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::RotateConsensusKeyEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_RotateConsensusKeyEvent'($1_from_bcs_deserialize'$1_stake_RotateConsensusKeyEvent'(b1), $1_from_bcs_deserialize'$1_stake_RotateConsensusKeyEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::SetOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_SetOperatorEvent'($1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(b1), $1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::StakePool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_StakePool'($1_from_bcs_deserialize'$1_stake_StakePool'(b1), $1_from_bcs_deserialize'$1_stake_StakePool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_UnlockStakeEvent'($1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::UpdateNetworkAndFullnodeAddressesEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($1_from_bcs_deserialize'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(b1), $1_from_bcs_deserialize'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorConfig'($1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorFees>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorFees'($1_from_bcs_deserialize'$1_stake_ValidatorFees'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorFees'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorInfo'($1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorPerformance'($1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorSet>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorSet'($1_from_bcs_deserialize'$1_stake_ValidatorSet'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorSet'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::WithdrawStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_WithdrawStakeEvent'($1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <transaction_fee::AptosCoinCapabilities>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_transaction_fee_AptosCoinCapabilities'($1_from_bcs_deserialize'$1_transaction_fee_AptosCoinCapabilities'(b1), $1_from_bcs_deserialize'$1_transaction_fee_AptosCoinCapabilities'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <state_storage::GasParameter>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_state_storage_GasParameter'($1_from_bcs_deserialize'$1_state_storage_GasParameter'(b1), $1_from_bcs_deserialize'$1_state_storage_GasParameter'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <state_storage::StateStorageUsage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_state_storage_StateStorageUsage'($1_from_bcs_deserialize'$1_state_storage_StateStorageUsage'(b1), $1_from_bcs_deserialize'$1_state_storage_StateStorageUsage'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <state_storage::Usage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_state_storage_Usage'($1_from_bcs_deserialize'$1_state_storage_Usage'(b1), $1_from_bcs_deserialize'$1_state_storage_Usage'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <storage_gas::GasCurve>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_storage_gas_GasCurve'($1_from_bcs_deserialize'$1_storage_gas_GasCurve'(b1), $1_from_bcs_deserialize'$1_storage_gas_GasCurve'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <storage_gas::Point>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_storage_gas_Point'($1_from_bcs_deserialize'$1_storage_gas_Point'(b1), $1_from_bcs_deserialize'$1_storage_gas_Point'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <storage_gas::StorageGas>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_storage_gas_StorageGas'($1_from_bcs_deserialize'$1_storage_gas_StorageGas'(b1), $1_from_bcs_deserialize'$1_storage_gas_StorageGas'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <storage_gas::StorageGasConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_storage_gas_StorageGasConfig'($1_from_bcs_deserialize'$1_storage_gas_StorageGasConfig'(b1), $1_from_bcs_deserialize'$1_storage_gas_StorageGasConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <storage_gas::UsageGasConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_storage_gas_UsageGasConfig'($1_from_bcs_deserialize'$1_storage_gas_UsageGasConfig'(b1), $1_from_bcs_deserialize'$1_storage_gas_UsageGasConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <block::BlockResource>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_block_BlockResource'($1_from_bcs_deserialize'$1_block_BlockResource'(b1), $1_from_bcs_deserialize'$1_block_BlockResource'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:143:5+86
function {:inline} $1_vector_$is_empty'u64'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u64'(v), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:143:5+86
function {:inline} $1_vector_$is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_Aggregator'(v), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:143:5+86
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_Integer'(v), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:143:5+86
function {:inline} $1_vector_$is_empty'$1_bls12381_PublicKeyWithPoP'(v: Vec ($1_bls12381_PublicKeyWithPoP)): bool {
    $IsEqual'u64'($1_vector_$length'$1_bls12381_PublicKeyWithPoP'(v), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'u64'(t: $1_option_Option'u64'): int {
    $1_vector_$borrow'u64'($vec#$1_option_Option'u64'(t), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): $1_aggregator_Aggregator {
    $1_vector_$borrow'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_Integer {
    $1_vector_$borrow'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'u64'(t: $1_option_Option'u64'): bool {
    $1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $1_vector_$is_empty'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $1_vector_$is_empty'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'u64'(): $1_option_Option'u64' {
    $1_option_Option'u64'($EmptyVec'u64'())
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'$1_bls12381_PublicKeyWithPoP'(): $1_option_Option'$1_bls12381_PublicKeyWithPoP' {
    $1_option_Option'$1_bls12381_PublicKeyWithPoP'($EmptyVec'$1_bls12381_PublicKeyWithPoP'())
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'u64'(e: int): $1_option_Option'u64' {
    $1_option_Option'u64'(MakeVec1(e))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_bls12381_PublicKeyWithPoP'(e: $1_bls12381_PublicKeyWithPoP): $1_option_Option'$1_bls12381_PublicKeyWithPoP' {
    $1_option_Option'$1_bls12381_PublicKeyWithPoP'(MakeVec1(e))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+91
function {:inline} $1_option_spec_is_none'u64'(t: $1_option_Option'u64'): bool {
    $1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+92
function {:inline} $1_option_spec_is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+92
function {:inline} $1_option_spec_is_some'$1_bls12381_PublicKeyWithPoP'(t: $1_option_Option'$1_bls12381_PublicKeyWithPoP'): bool {
    !$1_vector_$is_empty'$1_bls12381_PublicKeyWithPoP'($vec#$1_option_Option'$1_bls12381_PublicKeyWithPoP'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+78
function {:inline} $1_option_spec_borrow'u64'(t: $1_option_Option'u64'): int {
    ReadVec($vec#$1_option_Option'u64'(t), 0)
}

// struct option::Option<u64> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'u64';
function {:constructor} $1_option_Option'u64'($vec: Vec (int)): $1_option_Option'u64';
function {:inline} $Update'$1_option_Option'u64''_vec(s: $1_option_Option'u64', x: Vec (int)): $1_option_Option'u64' {
    $1_option_Option'u64'(x)
}
function $IsValid'$1_option_Option'u64''(s: $1_option_Option'u64'): bool {
    $IsValid'vec'u64''($vec#$1_option_Option'u64'(s))
}
function {:inline} $IsEqual'$1_option_Option'u64''(s1: $1_option_Option'u64', s2: $1_option_Option'u64'): bool {
    $IsEqual'vec'u64''($vec#$1_option_Option'u64'(s1), $vec#$1_option_Option'u64'(s2))}

// struct option::Option<address> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'address';
function {:constructor} $1_option_Option'address'($vec: Vec (int)): $1_option_Option'address';
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''($vec#$1_option_Option'address'(s))
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''($vec#$1_option_Option'address'(s1), $vec#$1_option_Option'address'(s2))}

// struct option::Option<aggregator::Aggregator> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_aggregator_Aggregator';
function {:constructor} $1_option_Option'$1_aggregator_Aggregator'($vec: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator';
function {:inline} $Update'$1_option_Option'$1_aggregator_Aggregator''_vec(s: $1_option_Option'$1_aggregator_Aggregator', x: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'(x)
}
function $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsValid'vec'$1_aggregator_Aggregator''($vec#$1_option_Option'$1_aggregator_Aggregator'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1: $1_option_Option'$1_aggregator_Aggregator', s2: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsEqual'vec'$1_aggregator_Aggregator''($vec#$1_option_Option'$1_aggregator_Aggregator'(s1), $vec#$1_option_Option'$1_aggregator_Aggregator'(s2))}

// struct option::Option<optional_aggregator::Integer> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_optional_aggregator_Integer';
function {:constructor} $1_option_Option'$1_optional_aggregator_Integer'($vec: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer';
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec(s: $1_option_Option'$1_optional_aggregator_Integer', x: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsValid'vec'$1_optional_aggregator_Integer''($vec#$1_option_Option'$1_optional_aggregator_Integer'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1: $1_option_Option'$1_optional_aggregator_Integer', s2: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsEqual'vec'$1_optional_aggregator_Integer''($vec#$1_option_Option'$1_optional_aggregator_Integer'(s1), $vec#$1_option_Option'$1_optional_aggregator_Integer'(s2))}

// struct option::Option<optional_aggregator::OptionalAggregator> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_optional_aggregator_OptionalAggregator';
function {:constructor} $1_option_Option'$1_optional_aggregator_OptionalAggregator'($vec: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator', x: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsValid'vec'$1_optional_aggregator_OptionalAggregator''($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1: $1_option_Option'$1_optional_aggregator_OptionalAggregator', s2: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s1), $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s2))}

// struct option::Option<bls12381::PublicKeyWithPoP> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_bls12381_PublicKeyWithPoP';
function {:constructor} $1_option_Option'$1_bls12381_PublicKeyWithPoP'($vec: Vec ($1_bls12381_PublicKeyWithPoP)): $1_option_Option'$1_bls12381_PublicKeyWithPoP';
function {:inline} $Update'$1_option_Option'$1_bls12381_PublicKeyWithPoP''_vec(s: $1_option_Option'$1_bls12381_PublicKeyWithPoP', x: Vec ($1_bls12381_PublicKeyWithPoP)): $1_option_Option'$1_bls12381_PublicKeyWithPoP' {
    $1_option_Option'$1_bls12381_PublicKeyWithPoP'(x)
}
function $IsValid'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(s: $1_option_Option'$1_bls12381_PublicKeyWithPoP'): bool {
    $IsValid'vec'$1_bls12381_PublicKeyWithPoP''($vec#$1_option_Option'$1_bls12381_PublicKeyWithPoP'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(s1: $1_option_Option'$1_bls12381_PublicKeyWithPoP', s2: $1_option_Option'$1_bls12381_PublicKeyWithPoP'): bool {
    $IsEqual'vec'$1_bls12381_PublicKeyWithPoP''($vec#$1_option_Option'$1_bls12381_PublicKeyWithPoP'(s1), $vec#$1_option_Option'$1_bls12381_PublicKeyWithPoP'(s2))}

// struct string::String at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:13:5+70
type {:datatype} $1_string_String;
function {:constructor} $1_string_String($bytes: Vec (int)): $1_string_String;
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''($bytes#$1_string_String(s))
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''($bytes#$1_string_String(s1), $bytes#$1_string_String(s2))}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+1
    assume {:print "$at(14,396,397)"} true;
    assume {:print "$track_local(3,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:10+17
    assume {:print "$at(14,450,467)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(14,450,467)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(3,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:9+18
    assume {:print "$track_return(3,0,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,472,473)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,472,473)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,472,473)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::already_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+1
    assume {:print "$at(10,3585,3586)"} true;
    assume {:print "$track_local(4,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$at(10,3626,3654)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$track_return(4,1,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
    assume {:print "$at(10,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+1
    assume {:print "$at(10,3082,3083)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$at(10,3126,3156)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$track_return(4,4,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
    assume {:print "$at(10,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+1
    assume {:print "$at(10,3232,3233)"} true;
    assume {:print "$track_local(4,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$at(10,3273,3300)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$track_return(4,5,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
    assume {:print "$at(10,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+1
    assume {:print "$at(10,3461,3462)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$at(10,3497,3520)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$track_return(4,6,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
    assume {:print "$at(10,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+1
    assume {:print "$at(10,3161,3162)"} true;
    assume {:print "$track_local(4,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$at(10,3201,3227)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$track_return(4,8,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
    assume {:print "$at(10,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+1
    assume {:print "$at(10,3381,3382)"} true;
    assume {:print "$track_local(4,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$at(10,3425,3456)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$track_return(4,9,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
    assume {:print "$at(10,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// fun error::unauthenticated [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:3+73
procedure {:inline 1} $1_error_unauthenticated(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:3+1
    assume {:print "$at(10,3305,3306)"} true;
    assume {:print "$track_local(4,11,0):", $t0} $t0 == $t0;

    // $t1 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:55+15
    $t1 := 4;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume {:print "$at(10,3347,3376)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume {:print "$track_return(4,11,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:75+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:75+1
    assume {:print "$at(10,3377,3378)"} true;
    $ret0 := $t3;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.spec.move:38:10+40
function  $1_features_spec_is_enabled(feature: int): bool;
axiom (forall feature: int ::
(var $$res := $1_features_spec_is_enabled(feature);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.spec.move:40:10+121
function {:inline} $1_features_spec_periodical_reward_rate_decrease_enabled(): bool {
    $1_features_spec_is_enabled(16)
}

// struct features::Features at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:196:5+61
type {:datatype} $1_features_Features;
function {:constructor} $1_features_Features($features: Vec (bv8)): $1_features_Features;
function {:inline} $Update'$1_features_Features'_features(s: $1_features_Features, x: Vec (bv8)): $1_features_Features {
    $1_features_Features(x)
}
function $IsValid'$1_features_Features'(s: $1_features_Features): bool {
    $IsValid'vec'bv8''($features#$1_features_Features(s))
}
function {:inline} $IsEqual'$1_features_Features'(s1: $1_features_Features, s2: $1_features_Features): bool {
    $IsEqual'vec'bv8''($features#$1_features_Features(s1), $features#$1_features_Features(s2))}
var $1_features_Features_$memory: $Memory $1_features_Features;

// fun features::collect_and_distribute_gas_fees [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:87:5+128
procedure {:inline 1} $1_features_collect_and_distribute_gas_fees() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:88:20+31
    assume {:print "$at(8,3999,4030)"} true;
    $t0 := 6;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:88:9+43

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:88:9+43
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:88:9+43
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:88:9+43

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:88:9+43
    assume {:print "$track_return(5,6,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:89:5+1
    assume {:print "$at(8,4036,4037)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:89:5+1
    assume {:print "$at(8,4036,4037)"} true;
    $ret0 := $t1;
    return;

}

// struct type_info::TypeInfo at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:17:5+145
type {:datatype} $1_type_info_TypeInfo;
function {:constructor} $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int)): $1_type_info_TypeInfo;
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, $module_name#$1_type_info_TypeInfo(s), $struct_name#$1_type_info_TypeInfo(s))
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address#$1_type_info_TypeInfo(s), x, $struct_name#$1_type_info_TypeInfo(s))
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address#$1_type_info_TypeInfo(s), $module_name#$1_type_info_TypeInfo(s), x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'($account_address#$1_type_info_TypeInfo(s))
      && $IsValid'vec'u8''($module_name#$1_type_info_TypeInfo(s))
      && $IsValid'vec'u8''($struct_name#$1_type_info_TypeInfo(s))
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'($account_address#$1_type_info_TypeInfo(s1), $account_address#$1_type_info_TypeInfo(s2))
    && $IsEqual'vec'u8''($module_name#$1_type_info_TypeInfo(s1), $module_name#$1_type_info_TypeInfo(s2))
    && $IsEqual'vec'u8''($struct_name#$1_type_info_TypeInfo(s1), $struct_name#$1_type_info_TypeInfo(s2))}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/system_addresses.move:59:5+99
function {:inline} $1_system_addresses_$is_aptos_framework_address(addr: int): bool {
    $IsEqual'address'(addr, 1)
}

// struct guid::GUID at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:7:5+50
type {:datatype} $1_guid_GUID;
function {:constructor} $1_guid_GUID($id: $1_guid_ID): $1_guid_GUID;
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'($id#$1_guid_GUID(s))
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:12:5+209
type {:datatype} $1_guid_ID;
function {:constructor} $1_guid_ID($creation_num: int, $addr: int): $1_guid_ID;
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, $addr#$1_guid_ID(s))
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID($creation_num#$1_guid_ID(s), x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'($creation_num#$1_guid_ID(s))
      && $IsValid'address'($addr#$1_guid_ID(s))
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    assume {:print "$at(118,836,837)"} true;
    assume {:print "$track_local(13,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$at(118,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:24:13+12
    assume {:print "$track_local(13,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:25:44+1
    assume {:print "$at(118,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:25:42+1
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(118,1000,1001)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(13,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack guid::ID($t3, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:27:17+70
    assume {:print "$at(118,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack guid::GUID($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$at(118,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$track_return(13,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): Vec ($1_aggregator_Aggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'vec'$1_aggregator_Aggregator''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): Vec ($1_optional_aggregator_Integer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'vec'$1_optional_aggregator_Integer''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): Vec ($1_optional_aggregator_OptionalAggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'vec'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_bls12381_PublicKeyWithPoP''(bytes: Vec (int)): Vec ($1_bls12381_PublicKeyWithPoP);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_bls12381_PublicKeyWithPoP''(bytes);
$IsValid'vec'$1_bls12381_PublicKeyWithPoP''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(bytes: Vec (int)): Vec ($1_stake_IndividualValidatorPerformance);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(bytes);
$IsValid'vec'$1_stake_IndividualValidatorPerformance''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(bytes: Vec (int)): Vec ($1_stake_ValidatorInfo);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(bytes);
$IsValid'vec'$1_stake_ValidatorInfo''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_storage_gas_Point''(bytes: Vec (int)): Vec ($1_storage_gas_Point);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_storage_gas_Point''(bytes);
$IsValid'vec'$1_storage_gas_Point''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u64''(bytes: Vec (int)): $1_option_Option'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u64''(bytes);
$IsValid'$1_option_Option'u64''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): $1_option_Option'$1_aggregator_Aggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'$1_option_Option'$1_aggregator_Aggregator''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_Integer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_Integer''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(bytes: Vec (int)): $1_option_Option'$1_bls12381_PublicKeyWithPoP';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(bytes);
$IsValid'$1_option_Option'$1_bls12381_PublicKeyWithPoP''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_features_Features'(bytes: Vec (int)): $1_features_Features;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_features_Features'(bytes);
$IsValid'$1_features_Features'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(bytes: Vec (int)): Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(bytes);
$IsValid'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_DepositEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_WithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_AddStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_SetOperatorEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_UnlockStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_block_NewBlockEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_block_NewBlockEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_block_NewBlockEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_block_NewBlockEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes: Vec (int)): $1_aggregator_Aggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes);
$IsValid'$1_aggregator_Aggregator'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes: Vec (int)): $1_optional_aggregator_Integer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes);
$IsValid'$1_optional_aggregator_Integer'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): $1_optional_aggregator_OptionalAggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'$1_optional_aggregator_OptionalAggregator'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_BurnCapability'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Coin'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes: Vec (int)): $1_coin_DepositEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes);
$IsValid'$1_coin_DepositEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes: Vec (int)): $1_coin_WithdrawEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes);
$IsValid'$1_coin_WithdrawEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): $1_aptos_coin_AptosCoin;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'$1_aptos_coin_AptosCoin'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fixed_point64_FixedPoint64'(bytes: Vec (int)): $1_fixed_point64_FixedPoint64;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fixed_point64_FixedPoint64'(bytes);
$IsValid'$1_fixed_point64_FixedPoint64'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_config_StakingConfig'(bytes: Vec (int)): $1_staking_config_StakingConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_config_StakingConfig'(bytes);
$IsValid'$1_staking_config_StakingConfig'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_config_StakingRewardsConfig'(bytes: Vec (int)): $1_staking_config_StakingRewardsConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_config_StakingRewardsConfig'(bytes);
$IsValid'$1_staking_config_StakingRewardsConfig'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_bls12381_ProofOfPossession'(bytes: Vec (int)): $1_bls12381_ProofOfPossession;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_bls12381_ProofOfPossession'(bytes);
$IsValid'$1_bls12381_ProofOfPossession'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_bls12381_PublicKeyWithPoP'(bytes: Vec (int)): $1_bls12381_PublicKeyWithPoP;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_bls12381_PublicKeyWithPoP'(bytes);
$IsValid'$1_bls12381_PublicKeyWithPoP'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_AddStakeEvent'(bytes: Vec (int)): $1_stake_AddStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_AddStakeEvent'(bytes);
$IsValid'$1_stake_AddStakeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_AllowedValidators'(bytes: Vec (int)): $1_stake_AllowedValidators;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_AllowedValidators'(bytes);
$IsValid'$1_stake_AllowedValidators'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_AptosCoinCapabilities'(bytes: Vec (int)): $1_stake_AptosCoinCapabilities;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_AptosCoinCapabilities'(bytes);
$IsValid'$1_stake_AptosCoinCapabilities'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_DistributeRewardsEvent'(bytes: Vec (int)): $1_stake_DistributeRewardsEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_DistributeRewardsEvent'(bytes);
$IsValid'$1_stake_DistributeRewardsEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(bytes: Vec (int)): $1_stake_IncreaseLockupEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(bytes);
$IsValid'$1_stake_IncreaseLockupEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_IndividualValidatorPerformance'(bytes: Vec (int)): $1_stake_IndividualValidatorPerformance;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_IndividualValidatorPerformance'(bytes);
$IsValid'$1_stake_IndividualValidatorPerformance'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_JoinValidatorSetEvent'(bytes: Vec (int)): $1_stake_JoinValidatorSetEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_JoinValidatorSetEvent'(bytes);
$IsValid'$1_stake_JoinValidatorSetEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_LeaveValidatorSetEvent'(bytes: Vec (int)): $1_stake_LeaveValidatorSetEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_LeaveValidatorSetEvent'(bytes);
$IsValid'$1_stake_LeaveValidatorSetEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_OwnerCapability'(bytes: Vec (int)): $1_stake_OwnerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_OwnerCapability'(bytes);
$IsValid'$1_stake_OwnerCapability'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(bytes: Vec (int)): $1_stake_ReactivateStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(bytes);
$IsValid'$1_stake_ReactivateStakeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_RotateConsensusKeyEvent'(bytes: Vec (int)): $1_stake_RotateConsensusKeyEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_RotateConsensusKeyEvent'(bytes);
$IsValid'$1_stake_RotateConsensusKeyEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(bytes: Vec (int)): $1_stake_SetOperatorEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(bytes);
$IsValid'$1_stake_SetOperatorEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_StakePool'(bytes: Vec (int)): $1_stake_StakePool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_StakePool'(bytes);
$IsValid'$1_stake_StakePool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(bytes: Vec (int)): $1_stake_UnlockStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(bytes);
$IsValid'$1_stake_UnlockStakeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(bytes: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(bytes);
$IsValid'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(bytes: Vec (int)): $1_stake_ValidatorConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(bytes);
$IsValid'$1_stake_ValidatorConfig'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorFees'(bytes: Vec (int)): $1_stake_ValidatorFees;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorFees'(bytes);
$IsValid'$1_stake_ValidatorFees'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(bytes: Vec (int)): $1_stake_ValidatorInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(bytes);
$IsValid'$1_stake_ValidatorInfo'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(bytes: Vec (int)): $1_stake_ValidatorPerformance;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(bytes);
$IsValid'$1_stake_ValidatorPerformance'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorSet'(bytes: Vec (int)): $1_stake_ValidatorSet;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorSet'(bytes);
$IsValid'$1_stake_ValidatorSet'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(bytes: Vec (int)): $1_stake_WithdrawStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(bytes);
$IsValid'$1_stake_WithdrawStakeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_transaction_fee_AptosCoinCapabilities'(bytes: Vec (int)): $1_transaction_fee_AptosCoinCapabilities;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_transaction_fee_AptosCoinCapabilities'(bytes);
$IsValid'$1_transaction_fee_AptosCoinCapabilities'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_state_storage_GasParameter'(bytes: Vec (int)): $1_state_storage_GasParameter;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_state_storage_GasParameter'(bytes);
$IsValid'$1_state_storage_GasParameter'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_state_storage_StateStorageUsage'(bytes: Vec (int)): $1_state_storage_StateStorageUsage;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_state_storage_StateStorageUsage'(bytes);
$IsValid'$1_state_storage_StateStorageUsage'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_state_storage_Usage'(bytes: Vec (int)): $1_state_storage_Usage;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_state_storage_Usage'(bytes);
$IsValid'$1_state_storage_Usage'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_storage_gas_GasCurve'(bytes: Vec (int)): $1_storage_gas_GasCurve;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_storage_gas_GasCurve'(bytes);
$IsValid'$1_storage_gas_GasCurve'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_storage_gas_Point'(bytes: Vec (int)): $1_storage_gas_Point;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_storage_gas_Point'(bytes);
$IsValid'$1_storage_gas_Point'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_storage_gas_StorageGas'(bytes: Vec (int)): $1_storage_gas_StorageGas;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_storage_gas_StorageGas'(bytes);
$IsValid'$1_storage_gas_StorageGas'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_storage_gas_StorageGasConfig'(bytes: Vec (int)): $1_storage_gas_StorageGasConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_storage_gas_StorageGasConfig'(bytes);
$IsValid'$1_storage_gas_StorageGasConfig'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_storage_gas_UsageGasConfig'(bytes: Vec (int)): $1_storage_gas_UsageGasConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_storage_gas_UsageGasConfig'(bytes);
$IsValid'$1_storage_gas_UsageGasConfig'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_block_BlockResource'(bytes: Vec (int)): $1_block_BlockResource;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_block_BlockResource'(bytes);
$IsValid'$1_block_BlockResource'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u128'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u128'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_bls12381_PublicKeyWithPoP''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_bls12381_PublicKeyWithPoP''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_stake_IndividualValidatorPerformance''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_stake_IndividualValidatorPerformance''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_stake_ValidatorInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_stake_ValidatorInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_storage_gas_Point''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_storage_gas_Point''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_bls12381_PublicKeyWithPoP''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_features_Features'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_features_Features'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_block_NewBlockEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_block_NewBlockEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fixed_point64_FixedPoint64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fixed_point64_FixedPoint64'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_config_StakingConfig'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_config_StakingConfig'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_config_StakingRewardsConfig'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_config_StakingRewardsConfig'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_bls12381_ProofOfPossession'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_bls12381_ProofOfPossession'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_bls12381_PublicKeyWithPoP'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_bls12381_PublicKeyWithPoP'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_AddStakeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_AddStakeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_AllowedValidators'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_AllowedValidators'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_AptosCoinCapabilities'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_AptosCoinCapabilities'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_DistributeRewardsEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_DistributeRewardsEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_IncreaseLockupEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_IncreaseLockupEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_IndividualValidatorPerformance'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_IndividualValidatorPerformance'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_JoinValidatorSetEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_JoinValidatorSetEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_LeaveValidatorSetEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_LeaveValidatorSetEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_OwnerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_OwnerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ReactivateStakeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ReactivateStakeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_RotateConsensusKeyEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_RotateConsensusKeyEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_SetOperatorEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_SetOperatorEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_StakePool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_StakePool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_UnlockStakeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_UnlockStakeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorConfig'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorConfig'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorFees'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorFees'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorPerformance'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorPerformance'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorSet'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorSet'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_WithdrawStakeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_WithdrawStakeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_transaction_fee_AptosCoinCapabilities'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_transaction_fee_AptosCoinCapabilities'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_state_storage_GasParameter'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_state_storage_GasParameter'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_state_storage_StateStorageUsage'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_state_storage_StateStorageUsage'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_state_storage_Usage'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_state_storage_Usage'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_storage_gas_GasCurve'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_storage_gas_GasCurve'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_storage_gas_Point'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_storage_gas_Point'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_storage_gas_StorageGas'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_storage_gas_StorageGas'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_storage_gas_StorageGasConfig'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_storage_gas_StorageGasConfig'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_storage_gas_UsageGasConfig'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_storage_gas_UsageGasConfig'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_block_BlockResource'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_block_BlockResource'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// struct event::EventHandle<account::CoinRegisterEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_account_CoinRegisterEvent';
function {:constructor} $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent';
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, $guid#$1_event_EventHandle'$1_account_CoinRegisterEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter#$1_event_EventHandle'$1_account_CoinRegisterEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_account_CoinRegisterEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_account_CoinRegisterEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<account::KeyRotationEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_account_KeyRotationEvent';
function {:constructor} $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent';
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, $guid#$1_event_EventHandle'$1_account_KeyRotationEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter#$1_event_EventHandle'$1_account_KeyRotationEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_account_KeyRotationEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_account_KeyRotationEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::DepositEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_coin_DepositEvent';
function {:constructor} $1_event_EventHandle'$1_coin_DepositEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent';
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_counter(s: $1_event_EventHandle'$1_coin_DepositEvent', x: int): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(x, $guid#$1_event_EventHandle'$1_coin_DepositEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_guid(s: $1_event_EventHandle'$1_coin_DepositEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'($counter#$1_event_EventHandle'$1_coin_DepositEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_coin_DepositEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_coin_DepositEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''(s1: $1_event_EventHandle'$1_coin_DepositEvent', s2: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::WithdrawEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_coin_WithdrawEvent';
function {:constructor} $1_event_EventHandle'$1_coin_WithdrawEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent';
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_counter(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: int): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(x, $guid#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_guid(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'($counter#$1_event_EventHandle'$1_coin_WithdrawEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''(s1: $1_event_EventHandle'$1_coin_WithdrawEvent', s2: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::AddStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_AddStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_AddStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_AddStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_AddStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_AddStakeEvent', x: int): $1_event_EventHandle'$1_stake_AddStakeEvent' {
    $1_event_EventHandle'$1_stake_AddStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_AddStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_AddStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_AddStakeEvent' {
    $1_event_EventHandle'$1_stake_AddStakeEvent'($counter#$1_event_EventHandle'$1_stake_AddStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''(s: $1_event_EventHandle'$1_stake_AddStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_AddStakeEvent''(s1: $1_event_EventHandle'$1_stake_AddStakeEvent', s2: $1_event_EventHandle'$1_stake_AddStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::DistributeRewardsEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
function {:constructor} $1_event_EventHandle'$1_stake_DistributeRewardsEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''_counter(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', x: int): $1_event_EventHandle'$1_stake_DistributeRewardsEvent' {
    $1_event_EventHandle'$1_stake_DistributeRewardsEvent'(x, $guid#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''_guid(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_DistributeRewardsEvent' {
    $1_event_EventHandle'$1_stake_DistributeRewardsEvent'($counter#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(s1: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', s2: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::IncreaseLockupEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
function {:constructor} $1_event_EventHandle'$1_stake_IncreaseLockupEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''_counter(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', x: int): $1_event_EventHandle'$1_stake_IncreaseLockupEvent' {
    $1_event_EventHandle'$1_stake_IncreaseLockupEvent'(x, $guid#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''_guid(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_IncreaseLockupEvent' {
    $1_event_EventHandle'$1_stake_IncreaseLockupEvent'($counter#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(s1: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', s2: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::JoinValidatorSetEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
function {:constructor} $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''_counter(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', x: int): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(x, $guid#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''_guid(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'($counter#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(s1: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', s2: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::LeaveValidatorSetEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
function {:constructor} $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''_counter(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', x: int): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(x, $guid#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''_guid(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'($counter#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(s1: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', s2: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::ReactivateStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_ReactivateStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', x: int): $1_event_EventHandle'$1_stake_ReactivateStakeEvent' {
    $1_event_EventHandle'$1_stake_ReactivateStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_ReactivateStakeEvent' {
    $1_event_EventHandle'$1_stake_ReactivateStakeEvent'($counter#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(s1: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', s2: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::RegisterValidatorCandidateEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
function {:constructor} $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''_counter(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', x: int): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent' {
    $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(x, $guid#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''_guid(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent' {
    $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'($counter#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(s1: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', s2: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::RotateConsensusKeyEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
function {:constructor} $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''_counter(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', x: int): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent' {
    $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(x, $guid#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''_guid(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent' {
    $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'($counter#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(s1: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', s2: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::SetOperatorEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_SetOperatorEvent';
function {:constructor} $1_event_EventHandle'$1_stake_SetOperatorEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_SetOperatorEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_SetOperatorEvent''_counter(s: $1_event_EventHandle'$1_stake_SetOperatorEvent', x: int): $1_event_EventHandle'$1_stake_SetOperatorEvent' {
    $1_event_EventHandle'$1_stake_SetOperatorEvent'(x, $guid#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_SetOperatorEvent''_guid(s: $1_event_EventHandle'$1_stake_SetOperatorEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_SetOperatorEvent' {
    $1_event_EventHandle'$1_stake_SetOperatorEvent'($counter#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''(s: $1_event_EventHandle'$1_stake_SetOperatorEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_SetOperatorEvent''(s1: $1_event_EventHandle'$1_stake_SetOperatorEvent', s2: $1_event_EventHandle'$1_stake_SetOperatorEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::UnlockStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_UnlockStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_UnlockStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_UnlockStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_UnlockStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent', x: int): $1_event_EventHandle'$1_stake_UnlockStakeEvent' {
    $1_event_EventHandle'$1_stake_UnlockStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_UnlockStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_UnlockStakeEvent' {
    $1_event_EventHandle'$1_stake_UnlockStakeEvent'($counter#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(s1: $1_event_EventHandle'$1_stake_UnlockStakeEvent', s2: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
function {:constructor} $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''_counter(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', x: int): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent' {
    $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(x, $guid#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''_guid(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent' {
    $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($counter#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(s1: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', s2: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::WithdrawStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_WithdrawStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', x: int): $1_event_EventHandle'$1_stake_WithdrawStakeEvent' {
    $1_event_EventHandle'$1_stake_WithdrawStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_WithdrawStakeEvent' {
    $1_event_EventHandle'$1_stake_WithdrawStakeEvent'($counter#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(s1: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', s2: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<reconfiguration::NewEpochEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
function {:constructor} $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, $guid#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<block::NewBlockEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_block_NewBlockEvent';
function {:constructor} $1_event_EventHandle'$1_block_NewBlockEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_block_NewBlockEvent';
function {:inline} $Update'$1_event_EventHandle'$1_block_NewBlockEvent''_counter(s: $1_event_EventHandle'$1_block_NewBlockEvent', x: int): $1_event_EventHandle'$1_block_NewBlockEvent' {
    $1_event_EventHandle'$1_block_NewBlockEvent'(x, $guid#$1_event_EventHandle'$1_block_NewBlockEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_block_NewBlockEvent''_guid(s: $1_event_EventHandle'$1_block_NewBlockEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_block_NewBlockEvent' {
    $1_event_EventHandle'$1_block_NewBlockEvent'($counter#$1_event_EventHandle'$1_block_NewBlockEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_block_NewBlockEvent''(s: $1_event_EventHandle'$1_block_NewBlockEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_block_NewBlockEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_block_NewBlockEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_block_NewBlockEvent''(s1: $1_event_EventHandle'$1_block_NewBlockEvent', s2: $1_event_EventHandle'$1_block_NewBlockEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<block::UpdateEpochIntervalEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent';
function {:constructor} $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent';
function {:inline} $Update'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''_counter(s: $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent', x: int): $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent' {
    $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'(x, $guid#$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''_guid(s: $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent' {
    $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'($counter#$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(s: $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''(s1: $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent', s2: $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<stake::AddStakeEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_AddStakeEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_AddStakeEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_AddStakeEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_AddStakeEvent'': $1_event_EventHandle'$1_stake_AddStakeEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_AddStakeEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::DistributeRewardsEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_DistributeRewardsEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_DistributeRewardsEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_DistributeRewardsEvent'': $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_DistributeRewardsEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::IncreaseLockupEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_IncreaseLockupEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_IncreaseLockupEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_IncreaseLockupEvent'': $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_IncreaseLockupEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::JoinValidatorSetEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_JoinValidatorSetEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'': $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::LeaveValidatorSetEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_LeaveValidatorSetEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'': $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::ReactivateStakeEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_ReactivateStakeEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_ReactivateStakeEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_ReactivateStakeEvent'': $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_ReactivateStakeEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::RegisterValidatorCandidateEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_RegisterValidatorCandidateEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'': $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::RotateConsensusKeyEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_RotateConsensusKeyEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'': $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::SetOperatorEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_SetOperatorEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_SetOperatorEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_SetOperatorEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_SetOperatorEvent'': $1_event_EventHandle'$1_stake_SetOperatorEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_SetOperatorEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::UnlockStakeEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_UnlockStakeEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_UnlockStakeEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_UnlockStakeEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_UnlockStakeEvent'': $1_event_EventHandle'$1_stake_UnlockStakeEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_UnlockStakeEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::UpdateNetworkAndFullnodeAddressesEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'': $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<stake::WithdrawStakeEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_stake_WithdrawStakeEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_stake_WithdrawStakeEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_stake_WithdrawStakeEvent'': $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_stake_WithdrawStakeEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// struct account::Account at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:26:5+401
type {:datatype} $1_account_Account;
function {:constructor} $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account;
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), x, $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), x, $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), x, $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), x, $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), x, $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''($authentication_key#$1_account_Account(s))
      && $IsValid'u64'($sequence_number#$1_account_Account(s))
      && $IsValid'u64'($guid_creation_num#$1_account_Account(s))
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($coin_register_events#$1_account_Account(s))
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($key_rotation_events#$1_account_Account(s))
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($rotation_capability_offer#$1_account_Account(s))
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($signer_capability_offer#$1_account_Account(s))
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''($authentication_key#$1_account_Account(s1), $authentication_key#$1_account_Account(s2))
    && $IsEqual'u64'($sequence_number#$1_account_Account(s1), $sequence_number#$1_account_Account(s2))
    && $IsEqual'u64'($guid_creation_num#$1_account_Account(s1), $guid_creation_num#$1_account_Account(s2))
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($coin_register_events#$1_account_Account(s1), $coin_register_events#$1_account_Account(s2))
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($key_rotation_events#$1_account_Account(s1), $key_rotation_events#$1_account_Account(s2))
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($rotation_capability_offer#$1_account_Account(s1), $rotation_capability_offer#$1_account_Account(s2))
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($signer_capability_offer#$1_account_Account(s1), $signer_capability_offer#$1_account_Account(s2))}
var $1_account_Account_$memory: $Memory $1_account_Account;

// struct account::CapabilityOffer<account::RotationCapability> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:45:5+68
type {:datatype} $1_account_CapabilityOffer'$1_account_RotationCapability';
function {:constructor} $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability';
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''($for#$1_account_CapabilityOffer'$1_account_RotationCapability'(s))
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''($for#$1_account_CapabilityOffer'$1_account_RotationCapability'(s1), $for#$1_account_CapabilityOffer'$1_account_RotationCapability'(s2))}

// struct account::CapabilityOffer<account::SignerCapability> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:45:5+68
type {:datatype} $1_account_CapabilityOffer'$1_account_SignerCapability';
function {:constructor} $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability';
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''($for#$1_account_CapabilityOffer'$1_account_SignerCapability'(s))
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''($for#$1_account_CapabilityOffer'$1_account_SignerCapability'(s1), $for#$1_account_CapabilityOffer'$1_account_SignerCapability'(s2))}

// struct account::CoinRegisterEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:41:5+77
type {:datatype} $1_account_CoinRegisterEvent;
function {:constructor} $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent;
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'($type_info#$1_account_CoinRegisterEvent(s))
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'($type_info#$1_account_CoinRegisterEvent(s1), $type_info#$1_account_CoinRegisterEvent(s2))}

// struct account::KeyRotationEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:36:5+135
type {:datatype} $1_account_KeyRotationEvent;
function {:constructor} $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int)): $1_account_KeyRotationEvent;
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, $new_authentication_key#$1_account_KeyRotationEvent(s))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key#$1_account_KeyRotationEvent(s), x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''($old_authentication_key#$1_account_KeyRotationEvent(s))
      && $IsValid'vec'u8''($new_authentication_key#$1_account_KeyRotationEvent(s))
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''($old_authentication_key#$1_account_KeyRotationEvent(s1), $old_authentication_key#$1_account_KeyRotationEvent(s2))
    && $IsEqual'vec'u8''($new_authentication_key#$1_account_KeyRotationEvent(s1), $new_authentication_key#$1_account_KeyRotationEvent(s2))}

// struct account::RotationCapability at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:47:5+62
type {:datatype} $1_account_RotationCapability;
function {:constructor} $1_account_RotationCapability($account: int): $1_account_RotationCapability;
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'($account#$1_account_RotationCapability(s))
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:49:5+60
type {:datatype} $1_account_SignerCapability;
function {:constructor} $1_account_SignerCapability($account: int): $1_account_SignerCapability;
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'($account#$1_account_SignerCapability(s))
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::new_event_handle<stake::AddStakeEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_AddStakeEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_AddStakeEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_AddStakeEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_AddStakeEvent'': $1_event_EventHandle'$1_stake_AddStakeEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_AddStakeEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::DistributeRewardsEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_DistributeRewardsEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_DistributeRewardsEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_DistributeRewardsEvent'': $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_DistributeRewardsEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::IncreaseLockupEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_IncreaseLockupEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_IncreaseLockupEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_IncreaseLockupEvent'': $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_IncreaseLockupEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::JoinValidatorSetEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_JoinValidatorSetEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'': $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_JoinValidatorSetEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::LeaveValidatorSetEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_LeaveValidatorSetEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'': $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_LeaveValidatorSetEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::ReactivateStakeEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_ReactivateStakeEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_ReactivateStakeEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_ReactivateStakeEvent'': $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_ReactivateStakeEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::RegisterValidatorCandidateEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_RegisterValidatorCandidateEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'': $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_RegisterValidatorCandidateEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::RotateConsensusKeyEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_RotateConsensusKeyEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'': $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_RotateConsensusKeyEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::SetOperatorEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_SetOperatorEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_SetOperatorEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_SetOperatorEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_SetOperatorEvent'': $1_event_EventHandle'$1_stake_SetOperatorEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_SetOperatorEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::UnlockStakeEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_UnlockStakeEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_UnlockStakeEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_UnlockStakeEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_UnlockStakeEvent'': $1_event_EventHandle'$1_stake_UnlockStakeEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_UnlockStakeEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::UpdateNetworkAndFullnodeAddressesEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'': $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<stake::WithdrawStakeEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_stake_WithdrawStakeEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_stake_WithdrawStakeEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_stake_WithdrawStakeEvent'': $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_stake_WithdrawStakeEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::create_guid [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:654:5+436
procedure {:inline 1} $1_account_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: $Mutation ($1_account_Account);
    var $t2: int;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: int;
    var $t6: $1_account_Account;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_account_Account);
    var $t10: $Mutation (int);
    var $t11: $1_guid_GUID;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t0: $signer;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21178,21224)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, global<account::Account>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t6 == $ResourceValue($1_account_Account_$memory, $t5));

    // trace_local[account_signer]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:654:5+1
    assume {:print "$at(72,37618,37619)"} true;
    assume {:print "$track_local(18,5,0):", $t0} $t0 == $t0;

    // $t7 := signer::address_of($t0) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:655:20+34
    assume {:print "$at(72,37716,37750)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(72,37716,37750)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,5):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[addr]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:655:13+4
    assume {:print "$track_local(18,5,2):", $t7} $t7 == $t7;

    // $t9 := borrow_global<account::Account>($t7) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:656:23+17
    assume {:print "$at(72,37774,37791)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(72,37774,37791)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,5):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[account]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:656:13+7
    $temp_0'$1_account_Account' := $Dereference($t9);
    assume {:print "$track_local(18,5,1):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t10 := borrow_field<account::Account>.guid_creation_num($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:657:39+30
    assume {:print "$at(72,37846,37876)"} true;
    $t10 := $ChildMutation($t9, 2, $guid_creation_num#$1_account_Account($Dereference($t9)));

    // $t11 := guid::create($t7, $t10) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:657:20+50
    call $t11,$t10 := $1_guid_create($t7, $t10);
    if ($abort_flag) {
        assume {:print "$at(72,37827,37877)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,5):", $t8} $t8 == $t8;
        goto L4;
    }

    // write_back[Reference($t9).guid_creation_num (u64)]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:657:20+50
    $t9 := $UpdateMutation($t9, $Update'$1_account_Account'_guid_creation_num($Dereference($t9), $Dereference($t10)));

    // trace_local[guid]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:657:13+4
    assume {:print "$track_local(18,5,3):", $t11} $t11 == $t11;

    // $t12 := get_field<account::Account>.guid_creation_num($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:13+25
    assume {:print "$at(72,37908,37933)"} true;
    $t12 := $guid_creation_num#$1_account_Account($Dereference($t9));

    // pack_ref_deep($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:13+25

    // write_back[account::Account@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:13+25
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t13 := 1125899906842624 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:41+21
    $t13 := 1125899906842624;
    assume $IsValid'u64'($t13);

    // $t14 := <($t12, $t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:39+1
    call $t14 := $Lt($t12, $t13);

    // if ($t14) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    assume {:print "$at(72,37887,38034)"} true;
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    assume {:print "$at(72,37887,38034)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:660:33+31
    assume {:print "$at(72,37991,38022)"} true;
L0:

    // $t15 := 20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:660:33+31
    assume {:print "$at(72,37991,38022)"} true;
    $t15 := 20;
    assume $IsValid'u64'($t15);

    // $t16 := error::out_of_range($t15) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:660:13+52
    call $t16 := $1_error_out_of_range($t15);
    if ($abort_flag) {
        assume {:print "$at(72,37971,38023)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,5):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    assume {:print "$at(72,37887,38034)"} true;
    assume {:print "$track_abort(18,5):", $t16} $t16 == $t16;

    // $t8 := move($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    $t8 := $t16;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:662:9+4
    assume {:print "$at(72,38044,38048)"} true;
L2:

    // trace_return[0]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:662:9+4
    assume {:print "$at(72,38044,38048)"} true;
    assume {:print "$track_return(18,5,0):", $t11} $t11 == $t11;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:663:5+1
    assume {:print "$at(72,38053,38054)"} true;
L3:

    // return $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:663:5+1
    assume {:print "$at(72,38053,38054)"} true;
    $ret0 := $t11;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:663:5+1
L4:

    // abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:663:5+1
    assume {:print "$at(72,38053,38054)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// struct optional_aggregator::Integer at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:20:5+74
type {:datatype} $1_optional_aggregator_Integer;
function {:constructor} $1_optional_aggregator_Integer($value: int, $limit: int): $1_optional_aggregator_Integer;
function {:inline} $Update'$1_optional_aggregator_Integer'_value(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(x, $limit#$1_optional_aggregator_Integer(s))
}
function {:inline} $Update'$1_optional_aggregator_Integer'_limit(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer($value#$1_optional_aggregator_Integer(s), x)
}
function $IsValid'$1_optional_aggregator_Integer'(s: $1_optional_aggregator_Integer): bool {
    $IsValid'u128'($value#$1_optional_aggregator_Integer(s))
      && $IsValid'u128'($limit#$1_optional_aggregator_Integer(s))
}
function {:inline} $IsEqual'$1_optional_aggregator_Integer'(s1: $1_optional_aggregator_Integer, s2: $1_optional_aggregator_Integer): bool {
    s1 == s2
}

// struct optional_aggregator::OptionalAggregator at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:64:5+175
type {:datatype} $1_optional_aggregator_OptionalAggregator;
function {:constructor} $1_optional_aggregator_OptionalAggregator($aggregator: $1_option_Option'$1_aggregator_Aggregator', $integer: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator;
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_aggregator(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_aggregator_Aggregator'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(x, $integer#$1_optional_aggregator_OptionalAggregator(s))
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_integer(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator($aggregator#$1_optional_aggregator_OptionalAggregator(s), x)
}
function $IsValid'$1_optional_aggregator_OptionalAggregator'(s: $1_optional_aggregator_OptionalAggregator): bool {
    $IsValid'$1_option_Option'$1_aggregator_Aggregator''($aggregator#$1_optional_aggregator_OptionalAggregator(s))
      && $IsValid'$1_option_Option'$1_optional_aggregator_Integer''($integer#$1_optional_aggregator_OptionalAggregator(s))
}
function {:inline} $IsEqual'$1_optional_aggregator_OptionalAggregator'(s1: $1_optional_aggregator_OptionalAggregator, s2: $1_optional_aggregator_OptionalAggregator): bool {
    $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($aggregator#$1_optional_aggregator_OptionalAggregator(s1), $aggregator#$1_optional_aggregator_OptionalAggregator(s2))
    && $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($integer#$1_optional_aggregator_OptionalAggregator(s1), $integer#$1_optional_aggregator_OptionalAggregator(s2))}

// struct coin::BurnCapability<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:139:5+58
type {:datatype} $1_coin_BurnCapability'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_BurnCapability'$1_aptos_coin_AptosCoin'($dummy_field: bool): $1_coin_BurnCapability'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''_dummy_field(s: $1_coin_BurnCapability'$1_aptos_coin_AptosCoin', x: bool): $1_coin_BurnCapability'$1_aptos_coin_AptosCoin' {
    $1_coin_BurnCapability'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(s: $1_coin_BurnCapability'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'bool'($dummy_field#$1_coin_BurnCapability'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''(s1: $1_coin_BurnCapability'$1_aptos_coin_AptosCoin', s2: $1_coin_BurnCapability'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::Coin<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:74:5+112
type {:datatype} $1_coin_Coin'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_Coin'$1_aptos_coin_AptosCoin'($value: int): $1_coin_Coin'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value(s: $1_coin_Coin'$1_aptos_coin_AptosCoin', x: int): $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s1: $1_coin_Coin'$1_aptos_coin_AptosCoin', s2: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::CoinInfo<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:109:5+564
type {:datatype} $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_name(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(x, $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_symbol(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x, $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_decimals(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: int): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x, $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x)
}
function $IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_string_String'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_string_String'($symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'u8'($decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsEqual'$1_string_String'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'$1_string_String'($symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'u8'($decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))}
var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

// struct coin::CoinStore<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:92:5+206
type {:datatype} $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin: $1_coin_Coin'$1_aptos_coin_AptosCoin', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(x, $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_frozen(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: bool): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x, $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x, $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x)
}
function $IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'bool'($frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';

// struct coin::DepositEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:123:5+64
type {:datatype} $1_coin_DepositEvent;
function {:constructor} $1_coin_DepositEvent($amount: int): $1_coin_DepositEvent;
function {:inline} $Update'$1_coin_DepositEvent'_amount(s: $1_coin_DepositEvent, x: int): $1_coin_DepositEvent {
    $1_coin_DepositEvent(x)
}
function $IsValid'$1_coin_DepositEvent'(s: $1_coin_DepositEvent): bool {
    $IsValid'u64'($amount#$1_coin_DepositEvent(s))
}
function {:inline} $IsEqual'$1_coin_DepositEvent'(s1: $1_coin_DepositEvent, s2: $1_coin_DepositEvent): bool {
    s1 == s2
}

// struct coin::MintCapability<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:133:5+58
type {:datatype} $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_MintCapability'$1_aptos_coin_AptosCoin'($dummy_field: bool): $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''_dummy_field(s: $1_coin_MintCapability'$1_aptos_coin_AptosCoin', x: bool): $1_coin_MintCapability'$1_aptos_coin_AptosCoin' {
    $1_coin_MintCapability'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(s: $1_coin_MintCapability'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'bool'($dummy_field#$1_coin_MintCapability'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''(s1: $1_coin_MintCapability'$1_aptos_coin_AptosCoin', s2: $1_coin_MintCapability'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::WithdrawEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:128:5+65
type {:datatype} $1_coin_WithdrawEvent;
function {:constructor} $1_coin_WithdrawEvent($amount: int): $1_coin_WithdrawEvent;
function {:inline} $Update'$1_coin_WithdrawEvent'_amount(s: $1_coin_WithdrawEvent, x: int): $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent(x)
}
function $IsValid'$1_coin_WithdrawEvent'(s: $1_coin_WithdrawEvent): bool {
    $IsValid'u64'($amount#$1_coin_WithdrawEvent(s))
}
function {:inline} $IsEqual'$1_coin_WithdrawEvent'(s1: $1_coin_WithdrawEvent, s2: $1_coin_WithdrawEvent): bool {
    s1 == s2
}

// fun coin::extract<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:349:5+252
procedure {:inline 1} $1_coin_extract'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin', $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation (int);
    var $t10: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:349:5+1
    assume {:print "$at(94,13278,13279)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:349:5+1
    assume {:print "$track_local(23,13,1):", $t1} $t1 == $t1;

    // $t2 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:17+10
    assume {:print "$at(94,13381,13391)"} true;
    $t2 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t3 := >=($t2, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:28+2
    call $t3 := $Ge($t2, $t1);

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    assume {:print "$at(94,13373,13450)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
L0:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    assume {:print "$at(94,13373,13450)"} true;

    // $t4 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:63+21
    $t4 := 6;
    assume $IsValid'u64'($t4);

    // $t5 := error::invalid_argument($t4) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:39+46
    call $t5 := $1_error_invalid_argument($t4);
    if ($abort_flag) {
        assume {:print "$at(94,13403,13449)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,13):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    assume {:print "$at(94,13373,13450)"} true;
    assume {:print "$track_abort(23,13):", $t5} $t5 == $t5;

    // $t6 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    $t6 := $t5;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:22+4
    assume {:print "$at(94,13473,13477)"} true;
L2:

    // $t7 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:22+10
    assume {:print "$at(94,13473,13483)"} true;
    $t7 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t8 := -($t7, $t1) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:33+1
    call $t8 := $Sub($t7, $t1);
    if ($abort_flag) {
        assume {:print "$at(94,13484,13485)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,13):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t9 := borrow_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+10
    $t9 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t9, $t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+32
    $t9 := $UpdateMutation($t9, $t8);

    // write_back[Reference($t0).value (u64)]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+32
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t9)));

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+32
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // $t10 := pack coin::Coin<#0>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:9+22
    assume {:print "$at(94,13502,13524)"} true;
    $t10 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // trace_return[0]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:9+22
    assume {:print "$track_return(23,13,0):", $t10} $t10 == $t10;

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:9+22
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:353:5+1
    assume {:print "$at(94,13529,13530)"} true;
L3:

    // return $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:353:5+1
    assume {:print "$at(94,13529,13530)"} true;
    $ret0 := $t10;
    $ret1 := $t0;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:353:5+1
L4:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:353:5+1
    assume {:print "$at(94,13529,13530)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::value<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:527:5+81
procedure {:inline 1} $1_coin_value'$1_aptos_coin_AptosCoin'(_$t0: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:527:5+1
    assume {:print "$at(94,20291,20292)"} true;
    assume {:print "$track_local(23,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:528:9+10
    assume {:print "$at(94,20356,20366)"} true;
    $t1 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:528:9+10
    assume {:print "$track_return(23,34,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:529:5+1
    assume {:print "$at(94,20371,20372)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:529:5+1
    assume {:print "$at(94,20371,20372)"} true;
    $ret0 := $t1;
    return;

}

// fun coin::deposit<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:320:5+621
procedure {:inline 1} $1_coin_deposit'$1_aptos_coin_AptosCoin'(_$t0: int, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t8: bool;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: $Mutation ($1_event_EventHandle'$1_coin_DepositEvent');
    var $t13: int;
    var $t14: $1_coin_DepositEvent;
    var $t15: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:320:5+1
    assume {:print "$at(94,12110,12111)"} true;
    assume {:print "$track_local(23,7,0):", $t0} $t0 == $t0;

    // trace_local[coin]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:320:5+1
    assume {:print "$track_local(23,7,1):", $t1} $t1 == $t1;

    // $t3 := coin::is_account_registered<#0>($t0) on_abort goto L7 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:322:13+45
    assume {:print "$at(94,12234,12279)"} true;
    call $t3 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(94,12234,12279)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    assume {:print "$at(94,12213,12347)"} true;
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    assume {:print "$at(94,12213,12347)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:323:30+25
    assume {:print "$at(94,12310,12335)"} true;
L0:

    // $t5 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:323:30+25
    assume {:print "$at(94,12310,12335)"} true;
    $t5 := 5;
    assume $IsValid'u64'($t5);

    // $t6 := error::not_found($t5) on_abort goto L7 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:323:13+43
    call $t6 := $1_error_not_found($t5);
    if ($abort_flag) {
        assume {:print "$at(94,12293,12336)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    assume {:print "$at(94,12213,12347)"} true;
    assume {:print "$track_abort(23,7):", $t6} $t6 == $t6;

    // $t4 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    $t4 := $t6;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:326:65+12
    assume {:print "$at(94,12414,12426)"} true;
L2:

    // $t7 := borrow_global<coin::CoinStore<#0>>($t0) on_abort goto L7 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:326:26+17
    assume {:print "$at(94,12375,12392)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(94,12375,12392)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_local[coin_store]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:326:13+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t7);
    assume {:print "$track_local(23,7,2):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t8 := get_field<coin::CoinStore<#0>>.frozen($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:328:14+17
    assume {:print "$at(94,12459,12476)"} true;
    $t8 := $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t7));

    // $t9 := !($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:328:13+1
    call $t9 := $Not($t8);

    // if ($t9) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    assume {:print "$at(94,12437,12534)"} true;
    if ($t9) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    assume {:print "$at(94,12437,12534)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
L3:

    // destroy($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    assume {:print "$at(94,12437,12534)"} true;

    // $t10 := 10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:329:38+7
    assume {:print "$at(94,12515,12522)"} true;
    $t10 := 10;
    assume $IsValid'u64'($t10);

    // $t11 := error::permission_denied($t10) on_abort goto L7 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:329:13+33
    call $t11 := $1_error_permission_denied($t10);
    if ($abort_flag) {
        assume {:print "$at(94,12490,12523)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    assume {:print "$at(94,12437,12534)"} true;
    assume {:print "$track_abort(23,7):", $t11} $t11 == $t11;

    // $t4 := move($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    $t4 := $t11;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:333:18+10
    assume {:print "$at(94,12595,12605)"} true;
L5:

    // $t12 := borrow_field<coin::CoinStore<#0>>.deposit_events($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:333:13+30
    assume {:print "$at(94,12590,12620)"} true;
    $t12 := $ChildMutation($t7, 2, $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t7)));

    // $t13 := get_field<coin::Coin<#0>>.value($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:334:36+10
    assume {:print "$at(94,12657,12667)"} true;
    $t13 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // $t14 := pack coin::DepositEvent($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:334:13+35
    $t14 := $1_coin_DepositEvent($t13);

    // opaque begin: event::emit_event<coin::DepositEvent>($t12, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:332:9+135
    assume {:print "$at(94,12545,12680)"} true;

    // opaque end: event::emit_event<coin::DepositEvent>($t12, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:332:9+135

    // write_back[Reference($t7).deposit_events (event::EventHandle<coin::DepositEvent>)]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:332:9+135
    $t7 := $UpdateMutation($t7, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events($Dereference($t7), $Dereference($t12)));

    // $t15 := borrow_field<coin::CoinStore<#0>>.coin($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:15+20
    assume {:print "$at(94,12697,12717)"} true;
    $t15 := $ChildMutation($t7, 0, $coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t7)));

    // coin::merge<#0>($t15, $t1) on_abort goto L7 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:9+33
    call $t15 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(94,12691,12724)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // write_back[Reference($t7).coin (coin::Coin<#0>)]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:9+33
    $t7 := $UpdateMutation($t7, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t7), $Dereference($t15)));

    // write_back[coin::CoinStore<#0>@]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:9+33
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:338:5+1
    assume {:print "$at(94,12730,12731)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:338:5+1
    assume {:print "$at(94,12730,12731)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:338:5+1
L7:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:338:5+1
    assume {:print "$at(94,12730,12731)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun coin::destroy_zero<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:343:5+192
procedure {:inline 1} $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'(_$t0: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t0: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[zero_coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:343:5+1
    assume {:print "$at(94,12980,12981)"} true;
    assume {:print "$track_local(23,11,0):", $t0} $t0 == $t0;

    // $t1 := unpack coin::Coin<#0>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:344:13+14
    assume {:print "$at(94,13055,13069)"} true;
    $t1 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t0);

    // $t2 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:26+1
    assume {:print "$at(94,13108,13109)"} true;
    $t2 := 0;
    assume $IsValid'u64'($t2);

    // $t3 := ==($t1, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:23+2
    $t3 := $IsEqual'u64'($t1, $t2);

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:9+75
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:9+75
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:9+75
    assume {:print "$at(94,13091,13166)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:53+29
L0:

    // $t4 := 7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:53+29
    assume {:print "$at(94,13135,13164)"} true;
    $t4 := 7;
    assume $IsValid'u64'($t4);

    // $t5 := error::invalid_argument($t4) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:29+54
    call $t5 := $1_error_invalid_argument($t4);
    if ($abort_flag) {
        assume {:print "$at(94,13111,13165)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,11):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:9+75
    assume {:print "$at(94,13091,13166)"} true;
    assume {:print "$track_abort(23,11):", $t5} $t5 == $t5;

    // $t6 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:9+75
    $t6 := $t5;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:9+75
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:345:9+75
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:346:5+1
    assume {:print "$at(94,13171,13172)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:346:5+1
    assume {:print "$at(94,13171,13172)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:346:5+1
L4:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:346:5+1
    assume {:print "$at(94,13171,13172)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::extract_all<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:356:5+181
procedure {:inline 1} $1_coin_extract_all'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin')) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin', $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation (int);
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:356:5+1
    assume {:print "$at(94,13645,13646)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // $t2 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:357:27+10
    assume {:print "$at(94,13749,13759)"} true;
    $t2 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // trace_local[total_value]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:357:13+11
    assume {:print "$track_local(23,14,1):", $t2} $t2 == $t2;

    // $t3 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:22+1
    assume {:print "$at(94,13782,13783)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := borrow_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:9+10
    $t4 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t4, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:9+14
    $t4 := $UpdateMutation($t4, $t3);

    // write_back[Reference($t0).value (u64)]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:9+14
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t4)));

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:9+14
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // $t5 := pack coin::Coin<#0>($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:9+27
    assume {:print "$at(94,13793,13820)"} true;
    $t5 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t2);

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:9+27
    assume {:print "$track_return(23,14,0):", $t5} $t5 == $t5;

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:9+27
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:360:5+1
    assume {:print "$at(94,13825,13826)"} true;
L1:

    // return $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:360:5+1
    assume {:print "$at(94,13825,13826)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

}

// fun coin::is_account_registered<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:5+129
procedure {:inline 1} $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:5+1
    assume {:print "$at(94,8946,8947)"} true;
    assume {:print "$track_local(23,21,0):", $t0} $t0 == $t0;

    // $t1 := exists<coin::CoinStore<#0>>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:245:9+6
    assume {:print "$at(94,9028,9034)"} true;
    $t1 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:245:9+41
    assume {:print "$track_return(23,21,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:246:5+1
    assume {:print "$at(94,9074,9075)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:246:5+1
    assume {:print "$at(94,9074,9075)"} true;
    $ret0 := $t1;
    return;

}

// fun coin::merge<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:471:5+277
procedure {:inline 1} $1_coin_merge'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation (int);
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[dst_coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:471:5+1
    assume {:print "$at(94,18299,18300)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[source_coin]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:471:5+1
    assume {:print "$track_local(23,24,1):", $t1} $t1 == $t1;

    // assume Le(Add(select coin::Coin.value($t0), select coin::Coin.value($t1)), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:473:13+53
    assume {:print "$at(94,18415,18468)"} true;
    assume (($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)) + $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1)) <= 18446744073709551615);

    // $t3 := unpack coin::Coin<#0>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:475:13+14
    assume {:print "$at(94,18492,18506)"} true;
    $t3 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // trace_local[value]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:475:20+5
    assume {:print "$track_local(23,24,2):", $t3} $t3 == $t3;

    // $t4 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:26+14
    assume {:print "$at(94,18547,18561)"} true;
    $t4 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t5 := +($t4, $t3) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:41+1
    call $t5 := $AddU64($t4, $t3);
    if ($abort_flag) {
        assume {:print "$at(94,18562,18563)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,24):", $t6} $t6 == $t6;
        goto L2;
    }

    // $t7 := borrow_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:9+14
    $t7 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t7, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:9+39
    $t7 := $UpdateMutation($t7, $t5);

    // write_back[Reference($t0).value (u64)]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:9+39
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t7)));

    // trace_local[dst_coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:9+39
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[dst_coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:48+1
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:477:5+1
    assume {:print "$at(94,18575,18576)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:477:5+1
    assume {:print "$at(94,18575,18576)"} true;
    $ret0 := $t0;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:477:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:477:5+1
    assume {:print "$at(94,18575,18576)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::withdraw<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:532:5+697
procedure {:inline 1} $1_coin_withdraw'$1_aptos_coin_AptosCoin'(_$t0: $signer, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t4: int;
    var $t5: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t6: int;
    var $t7: int;
    var $t8: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($1_event_EventHandle'$1_coin_WithdrawEvent');
    var $t21: $1_coin_WithdrawEvent;
    var $t22: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t23: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:353:9+47
    assume {:print "$at(95,14753,14800)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<coin::CoinStore<#0>>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:354:9+59
    assume {:print "$at(95,14809,14868)"} true;
    assume ($t5 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t4));

    // assume Identical($t6, select coin::Coin.value(select coin::CoinStore.coin($t5))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:355:9+36
    assume {:print "$at(95,14877,14913)"} true;
    assume ($t6 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t5)));

    // assume Identical($t7, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:363:9+47
    assume {:print "$at(95,15207,15254)"} true;
    assume ($t7 == $1_signer_$address_of($t0));

    // assume Identical($t8, global<coin::CoinStore<#0>>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:364:9+59
    assume {:print "$at(95,15263,15322)"} true;
    assume ($t8 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t7));

    // assume Identical($t9, select coin::Coin.value(select coin::CoinStore.coin($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:365:9+36
    assume {:print "$at(95,15331,15367)"} true;
    assume ($t9 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t8)));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:532:5+1
    assume {:print "$at(94,20458,20459)"} true;
    assume {:print "$track_local(23,35,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:532:5+1
    assume {:print "$track_local(23,35,1):", $t1} $t1 == $t1;

    // $t10 := signer::address_of($t0) on_abort goto L7 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:536:28+27
    assume {:print "$at(94,20606,20633)"} true;
    call $t10 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(94,20606,20633)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // trace_local[account_addr]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:536:13+12
    assume {:print "$track_local(23,35,2):", $t10} $t10 == $t10;

    // $t12 := coin::is_account_registered<#0>($t10) on_abort goto L7 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:538:13+45
    assume {:print "$at(94,20664,20709)"} true;
    call $t12 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t10);
    if ($abort_flag) {
        assume {:print "$at(94,20664,20709)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // if ($t12) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    assume {:print "$at(94,20643,20777)"} true;
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    assume {:print "$at(94,20643,20777)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:539:30+25
    assume {:print "$at(94,20740,20765)"} true;
L0:

    // $t13 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:539:30+25
    assume {:print "$at(94,20740,20765)"} true;
    $t13 := 5;
    assume $IsValid'u64'($t13);

    // $t14 := error::not_found($t13) on_abort goto L7 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:539:13+43
    call $t14 := $1_error_not_found($t13);
    if ($abort_flag) {
        assume {:print "$at(94,20723,20766)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // trace_abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    assume {:print "$at(94,20643,20777)"} true;
    assume {:print "$track_abort(23,35):", $t14} $t14 == $t14;

    // $t11 := move($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    $t11 := $t14;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:542:65+12
    assume {:print "$at(94,20844,20856)"} true;
L2:

    // $t15 := borrow_global<coin::CoinStore<#0>>($t10) on_abort goto L7 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:542:26+17
    assume {:print "$at(94,20805,20822)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(94,20805,20822)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // trace_local[coin_store]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:542:13+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t15);
    assume {:print "$track_local(23,35,3):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t16 := get_field<coin::CoinStore<#0>>.frozen($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:544:14+17
    assume {:print "$at(94,20889,20906)"} true;
    $t16 := $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t15));

    // $t17 := !($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:544:13+1
    call $t17 := $Not($t16);

    // if ($t17) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    assume {:print "$at(94,20867,20964)"} true;
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    assume {:print "$at(94,20867,20964)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
L3:

    // destroy($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    assume {:print "$at(94,20867,20964)"} true;

    // $t18 := 10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:545:38+7
    assume {:print "$at(94,20945,20952)"} true;
    $t18 := 10;
    assume $IsValid'u64'($t18);

    // $t19 := error::permission_denied($t18) on_abort goto L7 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:545:13+33
    call $t19 := $1_error_permission_denied($t18);
    if ($abort_flag) {
        assume {:print "$at(94,20920,20953)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // trace_abort($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    assume {:print "$at(94,20867,20964)"} true;
    assume {:print "$track_abort(23,35):", $t19} $t19 == $t19;

    // $t11 := move($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    $t11 := $t19;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:549:18+10
    assume {:print "$at(94,21026,21036)"} true;
L5:

    // $t20 := borrow_field<coin::CoinStore<#0>>.withdraw_events($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:549:13+31
    assume {:print "$at(94,21021,21052)"} true;
    $t20 := $ChildMutation($t15, 3, $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t15)));

    // $t21 := pack coin::WithdrawEvent($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:550:13+24
    assume {:print "$at(94,21066,21090)"} true;
    $t21 := $1_coin_WithdrawEvent($t1);

    // opaque begin: event::emit_event<coin::WithdrawEvent>($t20, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:548:9+126
    assume {:print "$at(94,20975,21101)"} true;

    // opaque end: event::emit_event<coin::WithdrawEvent>($t20, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:548:9+126

    // write_back[Reference($t15).withdraw_events (event::EventHandle<coin::WithdrawEvent>)]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:548:9+126
    $t15 := $UpdateMutation($t15, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events($Dereference($t15), $Dereference($t20)));

    // $t22 := borrow_field<coin::CoinStore<#0>>.coin($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:17+20
    assume {:print "$at(94,21120,21140)"} true;
    $t22 := $ChildMutation($t15, 0, $coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t15)));

    // $t23 := coin::extract<#0>($t22, $t1) on_abort goto L7 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:9+37
    call $t23,$t22 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t22, $t1);
    if ($abort_flag) {
        assume {:print "$at(94,21112,21149)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // write_back[Reference($t15).coin (coin::Coin<#0>)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:9+37
    $t15 := $UpdateMutation($t15, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t15), $Dereference($t22)));

    // write_back[coin::CoinStore<#0>@]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:9+37
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // trace_return[0]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:9+37
    assume {:print "$track_return(23,35,0):", $t23} $t23 == $t23;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:554:5+1
    assume {:print "$at(94,21154,21155)"} true;
L6:

    // return $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:554:5+1
    assume {:print "$at(94,21154,21155)"} true;
    $ret0 := $t23;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:554:5+1
L7:

    // abort($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:554:5+1
    assume {:print "$at(94,21154,21155)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun coin::zero<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:557:5+107
procedure {:inline 1} $1_coin_zero'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // $t0 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:559:20+1
    assume {:print "$at(94,21310,21311)"} true;
    $t0 := 0;
    assume $IsValid'u64'($t0);

    // $t1 := pack coin::Coin<#0>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:558:9+47
    assume {:print "$at(94,21274,21321)"} true;
    $t1 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:558:9+47
    assume {:print "$track_return(23,36,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:561:5+1
    assume {:print "$at(94,21326,21327)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:561:5+1
    assume {:print "$at(94,21326,21327)"} true;
    $ret0 := $t1;
    return;

}

// struct aptos_coin::AptosCoin at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_coin.move:22:5+27
type {:datatype} $1_aptos_coin_AptosCoin;
function {:constructor} $1_aptos_coin_AptosCoin($dummy_field: bool): $1_aptos_coin_AptosCoin;
function {:inline} $Update'$1_aptos_coin_AptosCoin'_dummy_field(s: $1_aptos_coin_AptosCoin, x: bool): $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin(x)
}
function $IsValid'$1_aptos_coin_AptosCoin'(s: $1_aptos_coin_AptosCoin): bool {
    $IsValid'bool'($dummy_field#$1_aptos_coin_AptosCoin(s))
}
function {:inline} $IsEqual'$1_aptos_coin_AptosCoin'(s1: $1_aptos_coin_AptosCoin, s2: $1_aptos_coin_AptosCoin): bool {
    s1 == s2
}
var $1_aptos_coin_AptosCoin_$memory: $Memory $1_aptos_coin_AptosCoin;

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/chain_status.move:35:5+90
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/chain_status.move:12:5+34
type {:datatype} $1_chain_status_GenesisEndMarker;
function {:constructor} $1_chain_status_GenesisEndMarker($dummy_field: bool): $1_chain_status_GenesisEndMarker;
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'($dummy_field#$1_chain_status_GenesisEndMarker(s))
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:22:10+111
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $microseconds#$1_timestamp_CurrentTimeMicroseconds($ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:26:10+93
function {:inline} $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) div 1000000)
}

// struct timestamp::CurrentTimeMicroseconds at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:12:5+73
type {:datatype} $1_timestamp_CurrentTimeMicroseconds;
function {:constructor} $1_timestamp_CurrentTimeMicroseconds($microseconds: int): $1_timestamp_CurrentTimeMicroseconds;
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'($microseconds#$1_timestamp_CurrentTimeMicroseconds(s))
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:61:5+153
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:48+16
    assume {:print "$at(141,2511,2527)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+13
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(141,2472,2485)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(28,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<timestamp::CurrentTimeMicroseconds>.microseconds($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+69
    $t3 := $microseconds#$1_timestamp_CurrentTimeMicroseconds($t1);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+69
    assume {:print "$track_return(28,0,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(141,2546,2547)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(141,2546,2547)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(141,2546,2547)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun timestamp::now_seconds [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:67:5+123
procedure {:inline 1} $1_timestamp_now_seconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := timestamp::now_microseconds() on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:9+18
    assume {:print "$at(141,2680,2698)"} true;
    call $t0 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(141,2680,2698)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := 1000000 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:30+23
    $t2 := 1000000;
    assume $IsValid'u64'($t2);

    // $t3 := /($t0, $t2) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:28+1
    call $t3 := $Div($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(141,2699,2700)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:9+44
    assume {:print "$track_return(28,1,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(141,2729,2730)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(141,2729,2730)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
L2:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(141,2729,2730)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:84:10+110
function {:inline} $1_fixed_point64_spec_multiply_u128(val: int, multiplier: $1_fixed_point64_FixedPoint64): int {
    $shr((val * $value#$1_fixed_point64_FixedPoint64(multiplier)), 64)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:115:10+102
function {:inline} $1_fixed_point64_spec_divide_u128(val: int, divisor: $1_fixed_point64_FixedPoint64): int {
    ($shl(val, 64) div $value#$1_fixed_point64_FixedPoint64(divisor))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:218:10+174
function {:inline} $1_fixed_point64_spec_max(num1: $1_fixed_point64_FixedPoint64, num2: $1_fixed_point64_FixedPoint64): $1_fixed_point64_FixedPoint64 {
    (if (($value#$1_fixed_point64_FixedPoint64(num1) > $value#$1_fixed_point64_FixedPoint64(num2))) then (num1) else (num2))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:235:10+109
function {:inline} $1_fixed_point64_spec_less_or_equal(num1: $1_fixed_point64_FixedPoint64, num2: $1_fixed_point64_FixedPoint64): bool {
    ($value#$1_fixed_point64_FixedPoint64(num1) <= $value#$1_fixed_point64_FixedPoint64(num2))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:327:10+97
function {:inline} $1_fixed_point64_spec_create_from_u128(val: int): $1_fixed_point64_FixedPoint64 {
    $1_fixed_point64_FixedPoint64($shl(val, 64))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:365:10+256
function {:inline} $1_fixed_point64_spec_ceil(val: $1_fixed_point64_FixedPoint64): int {
    (var fractional := ($value#$1_fixed_point64_FixedPoint64(val) mod $shlU256(1, 64)); (var one := $shlU256(1, 64); (if ($IsEqual'num'(fractional, 0)) then ($shr($value#$1_fixed_point64_FixedPoint64(val), 64)) else ($shr((($value#$1_fixed_point64_FixedPoint64(val) - fractional) + one), 64)))))
}

// struct fixed_point64::FixedPoint64 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:15:5+57
type {:datatype} $1_fixed_point64_FixedPoint64;
function {:constructor} $1_fixed_point64_FixedPoint64($value: int): $1_fixed_point64_FixedPoint64;
function {:inline} $Update'$1_fixed_point64_FixedPoint64'_value(s: $1_fixed_point64_FixedPoint64, x: int): $1_fixed_point64_FixedPoint64 {
    $1_fixed_point64_FixedPoint64(x)
}
function $IsValid'$1_fixed_point64_FixedPoint64'(s: $1_fixed_point64_FixedPoint64): bool {
    $IsValid'u128'($value#$1_fixed_point64_FixedPoint64(s))
}
function {:inline} $IsEqual'$1_fixed_point64_FixedPoint64'(s1: $1_fixed_point64_FixedPoint64, s2: $1_fixed_point64_FixedPoint64): bool {
    s1 == s2
}

// fun fixed_point64::get_raw_value [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:175:5+75
procedure {:inline 1} $1_fixed_point64_get_raw_value(_$t0: $1_fixed_point64_FixedPoint64) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_fixed_point64_FixedPoint64;
    var $temp_0'$1_fixed_point64_FixedPoint64': $1_fixed_point64_FixedPoint64;
    var $temp_0'u128': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[num]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:175:5+1
    assume {:print "$at(47,7952,7953)"} true;
    assume {:print "$track_local(31,9,0):", $t0} $t0 == $t0;

    // $t1 := get_field<fixed_point64::FixedPoint64>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:176:9+9
    assume {:print "$at(47,8012,8021)"} true;
    $t1 := $value#$1_fixed_point64_FixedPoint64($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:176:9+9
    assume {:print "$track_return(31,9,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:177:5+1
    assume {:print "$at(47,8026,8027)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:177:5+1
    assume {:print "$at(47,8026,8027)"} true;
    $ret0 := $t1;
    return;

}

// fun fixed_point64::is_zero [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:180:5+74
procedure {:inline 1} $1_fixed_point64_is_zero(_$t0: $1_fixed_point64_FixedPoint64) returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: bool;
    var $t0: $1_fixed_point64_FixedPoint64;
    var $temp_0'$1_fixed_point64_FixedPoint64': $1_fixed_point64_FixedPoint64;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[num]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:180:5+1
    assume {:print "$at(47,8076,8077)"} true;
    assume {:print "$track_local(31,12,0):", $t0} $t0 == $t0;

    // $t1 := get_field<fixed_point64::FixedPoint64>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:181:9+9
    assume {:print "$at(47,8130,8139)"} true;
    $t1 := $value#$1_fixed_point64_FixedPoint64($t0);

    // $t2 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:181:22+1
    $t2 := 0;
    assume $IsValid'u128'($t2);

    // $t3 := ==($t1, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:181:19+2
    $t3 := $IsEqual'u128'($t1, $t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:181:9+14
    assume {:print "$track_return(31,12,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:182:5+1
    assume {:print "$at(47,8149,8150)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:182:5+1
    assume {:print "$at(47,8149,8150)"} true;
    $ret0 := $t3;
    return;

}

// fun math_fixed64::mul_div [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:48:5+311
procedure {:inline 1} $1_math_fixed64_mul_div(_$t0: $1_fixed_point64_FixedPoint64, _$t1: $1_fixed_point64_FixedPoint64, _$t2: $1_fixed_point64_FixedPoint64) returns ($ret0: $1_fixed_point64_FixedPoint64)
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: $1_fixed_point64_FixedPoint64;
    var $t0: $1_fixed_point64_FixedPoint64;
    var $t1: $1_fixed_point64_FixedPoint64;
    var $t2: $1_fixed_point64_FixedPoint64;
    var $temp_0'$1_fixed_point64_FixedPoint64': $1_fixed_point64_FixedPoint64;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[x]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:48:5+1
    assume {:print "$at(57,1888,1889)"} true;
    assume {:print "$track_local(34,5,0):", $t0} $t0 == $t0;

    // trace_local[y]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:48:5+1
    assume {:print "$track_local(34,5,1):", $t1} $t1 == $t1;

    // trace_local[z]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:48:5+1
    assume {:print "$track_local(34,5,2):", $t2} $t2 == $t2;

    // $t8 := fixed_point64::get_raw_value($t0) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:49:17+31
    assume {:print "$at(57,1990,2021)"} true;
    call $t8 := $1_fixed_point64_get_raw_value($t0);
    if ($abort_flag) {
        assume {:print "$at(57,1990,2021)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // trace_local[a]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:49:13+1
    assume {:print "$track_local(34,5,3):", $t8} $t8 == $t8;

    // $t10 := fixed_point64::get_raw_value($t1) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:50:17+31
    assume {:print "$at(57,2039,2070)"} true;
    call $t10 := $1_fixed_point64_get_raw_value($t1);
    if ($abort_flag) {
        assume {:print "$at(57,2039,2070)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // trace_local[b]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:50:13+1
    assume {:print "$track_local(34,5,4):", $t10} $t10 == $t10;

    // $t11 := fixed_point64::get_raw_value($t2) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:51:17+31
    assume {:print "$at(57,2088,2119)"} true;
    call $t11 := $1_fixed_point64_get_raw_value($t2);
    if ($abort_flag) {
        assume {:print "$at(57,2088,2119)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // trace_local[c]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:51:13+1
    assume {:print "$track_local(34,5,6):", $t11} $t11 == $t11;

    // trace_local[c#11]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:52:47+25
    assume {:print "$at(57,2167,2192)"} true;
    assume {:print "$track_local(34,5,7):", $t11} $t11 == $t11;

    // trace_local[b#10]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:52:47+25
    assume {:print "$track_local(34,5,5):", $t10} $t10 == $t10;

    // $t12 := (u256)($t8) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math128.move:34:11+11
    assume {:print "$at(52,965,976)"} true;
    call $t12 := $CastU256($t8);
    if ($abort_flag) {
        assume {:print "$at(52,965,976)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t13 := (u256)($t10) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math128.move:34:25+11
    call $t13 := $CastU256($t10);
    if ($abort_flag) {
        assume {:print "$at(52,979,990)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t14 := *($t12, $t13) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math128.move:34:23+1
    call $t14 := $MulU256($t12, $t13);
    if ($abort_flag) {
        assume {:print "$at(52,977,978)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t15 := (u256)($t11) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math128.move:34:39+11
    call $t15 := $CastU256($t11);
    if ($abort_flag) {
        assume {:print "$at(52,993,1004)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t16 := /($t14, $t15) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math128.move:34:37+1
    call $t16 := $Div($t14, $t15);
    if ($abort_flag) {
        assume {:print "$at(52,991,992)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t17 := (u128)($t16) on_abort goto L2 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math128.move:34:9+51
    call $t17 := $CastU128($t16);
    if ($abort_flag) {
        assume {:print "$at(52,963,1014)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(34,5):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t18 := opaque begin: fixed_point64::create_from_raw_value($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:52:9+64
    assume {:print "$at(57,2129,2193)"} true;

    // assume WellFormed($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:52:9+64
    assume $IsValid'$1_fixed_point64_FixedPoint64'($t18);

    // assume Eq<u128>(select fixed_point64::FixedPoint64.value($t18), $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:52:9+64
    assume $IsEqual'u128'($value#$1_fixed_point64_FixedPoint64($t18), $t17);

    // $t18 := opaque end: fixed_point64::create_from_raw_value($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:52:9+64

    // trace_return[0]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:52:9+64
    assume {:print "$track_return(34,5,0):", $t18} $t18 == $t18;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:53:5+1
    assume {:print "$at(57,2198,2199)"} true;
L1:

    // return $t18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:53:5+1
    assume {:print "$at(57,2198,2199)"} true;
    $ret0 := $t18;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:53:5+1
L2:

    // abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math_fixed64.move:53:5+1
    assume {:print "$at(57,2198,2199)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// struct staking_config::StakingConfig at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:49:5+1753
type {:datatype} $1_staking_config_StakingConfig;
function {:constructor} $1_staking_config_StakingConfig($minimum_stake: int, $maximum_stake: int, $recurring_lockup_duration_secs: int, $allow_validator_set_change: bool, $rewards_rate: int, $rewards_rate_denominator: int, $voting_power_increase_limit: int): $1_staking_config_StakingConfig;
function {:inline} $Update'$1_staking_config_StakingConfig'_minimum_stake(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig(x, $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_maximum_stake(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), x, $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_recurring_lockup_duration_secs(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), x, $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_allow_validator_set_change(s: $1_staking_config_StakingConfig, x: bool): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), x, $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_rewards_rate(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), x, $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_rewards_rate_denominator(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), x, $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_voting_power_increase_limit(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), x)
}
function $IsValid'$1_staking_config_StakingConfig'(s: $1_staking_config_StakingConfig): bool {
    $IsValid'u64'($minimum_stake#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($maximum_stake#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s))
      && $IsValid'bool'($allow_validator_set_change#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($rewards_rate#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($rewards_rate_denominator#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $IsEqual'$1_staking_config_StakingConfig'(s1: $1_staking_config_StakingConfig, s2: $1_staking_config_StakingConfig): bool {
    s1 == s2
}
var $1_staking_config_StakingConfig_$memory: $Memory $1_staking_config_StakingConfig;

// struct staking_config::StakingRewardsConfig at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:75:5+982
type {:datatype} $1_staking_config_StakingRewardsConfig;
function {:constructor} $1_staking_config_StakingRewardsConfig($rewards_rate: $1_fixed_point64_FixedPoint64, $min_rewards_rate: $1_fixed_point64_FixedPoint64, $rewards_rate_period_in_secs: int, $last_rewards_rate_period_start_in_secs: int, $rewards_rate_decrease_rate: $1_fixed_point64_FixedPoint64): $1_staking_config_StakingRewardsConfig;
function {:inline} $Update'$1_staking_config_StakingRewardsConfig'_rewards_rate(s: $1_staking_config_StakingRewardsConfig, x: $1_fixed_point64_FixedPoint64): $1_staking_config_StakingRewardsConfig {
    $1_staking_config_StakingRewardsConfig(x, $min_rewards_rate#$1_staking_config_StakingRewardsConfig(s), $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig(s), $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig(s), $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingRewardsConfig'_min_rewards_rate(s: $1_staking_config_StakingRewardsConfig, x: $1_fixed_point64_FixedPoint64): $1_staking_config_StakingRewardsConfig {
    $1_staking_config_StakingRewardsConfig($rewards_rate#$1_staking_config_StakingRewardsConfig(s), x, $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig(s), $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig(s), $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingRewardsConfig'_rewards_rate_period_in_secs(s: $1_staking_config_StakingRewardsConfig, x: int): $1_staking_config_StakingRewardsConfig {
    $1_staking_config_StakingRewardsConfig($rewards_rate#$1_staking_config_StakingRewardsConfig(s), $min_rewards_rate#$1_staking_config_StakingRewardsConfig(s), x, $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig(s), $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingRewardsConfig'_last_rewards_rate_period_start_in_secs(s: $1_staking_config_StakingRewardsConfig, x: int): $1_staking_config_StakingRewardsConfig {
    $1_staking_config_StakingRewardsConfig($rewards_rate#$1_staking_config_StakingRewardsConfig(s), $min_rewards_rate#$1_staking_config_StakingRewardsConfig(s), $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig(s), x, $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingRewardsConfig'_rewards_rate_decrease_rate(s: $1_staking_config_StakingRewardsConfig, x: $1_fixed_point64_FixedPoint64): $1_staking_config_StakingRewardsConfig {
    $1_staking_config_StakingRewardsConfig($rewards_rate#$1_staking_config_StakingRewardsConfig(s), $min_rewards_rate#$1_staking_config_StakingRewardsConfig(s), $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig(s), $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig(s), x)
}
function $IsValid'$1_staking_config_StakingRewardsConfig'(s: $1_staking_config_StakingRewardsConfig): bool {
    $IsValid'$1_fixed_point64_FixedPoint64'($rewards_rate#$1_staking_config_StakingRewardsConfig(s))
      && $IsValid'$1_fixed_point64_FixedPoint64'($min_rewards_rate#$1_staking_config_StakingRewardsConfig(s))
      && $IsValid'u64'($rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig(s))
      && $IsValid'u64'($last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig(s))
      && $IsValid'$1_fixed_point64_FixedPoint64'($rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig(s))
}
function {:inline} $IsEqual'$1_staking_config_StakingRewardsConfig'(s1: $1_staking_config_StakingRewardsConfig, s2: $1_staking_config_StakingRewardsConfig): bool {
    s1 == s2
}
var $1_staking_config_StakingRewardsConfig_$memory: $Memory $1_staking_config_StakingRewardsConfig;

// fun staking_config::get [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:169:5+118
procedure {:inline 1} $1_staking_config_get() returns ($ret0: $1_staking_config_StakingConfig)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_staking_config_StakingConfig;
    var $t2: int;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;

    // bytecode translation starts here
    // $t0 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:170:39+16
    assume {:print "$at(102,8264,8280)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<staking_config::StakingConfig>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:170:10+13
    if (!$ResourceExists($1_staking_config_StakingConfig_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_staking_config_StakingConfig_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(102,8235,8248)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,2):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:170:9+47
    assume {:print "$track_return(35,2,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:171:5+1
    assume {:print "$at(102,8286,8287)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:171:5+1
    assume {:print "$at(102,8286,8287)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:171:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:171:5+1
    assume {:print "$at(102,8286,8287)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun staking_config::calculate_and_save_latest_epoch_rewards_rate [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:217:5+354
procedure {:inline 1} $1_staking_config_calculate_and_save_latest_epoch_rewards_rate() returns ($ret0: $1_fixed_point64_FixedPoint64)
{
    // declare local variables
    var $t0: $1_staking_config_StakingRewardsConfig;
    var $t1: $1_staking_config_StakingRewardsConfig;
    var $t2: $1_fixed_point64_FixedPoint64;
    var $t3: $1_fixed_point64_FixedPoint64;
    var $t4: int;
    var $t5: int;
    var $t6: $1_fixed_point64_FixedPoint64;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $1_staking_config_StakingRewardsConfig;
    var $t12: $1_fixed_point64_FixedPoint64;
    var $t13: $1_fixed_point64_FixedPoint64;
    var $t14: int;
    var $t15: int;
    var $t16: $1_fixed_point64_FixedPoint64;
    var $t17: $1_staking_config_StakingRewardsConfig;
    var $t18: $1_fixed_point64_FixedPoint64;
    var $temp_0'$1_fixed_point64_FixedPoint64': $1_fixed_point64_FixedPoint64;
    var $temp_0'$1_staking_config_StakingRewardsConfig': $1_staking_config_StakingRewardsConfig;

    // bytecode translation starts here
    // assume Identical($t1, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t1 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t2, select staking_config::StakingRewardsConfig.rewards_rate($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t2 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t1));

    // assume Identical($t3, select staking_config::StakingRewardsConfig.min_rewards_rate($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t3 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t1));

    // assume Identical($t4, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t4 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t1));

    // assume Identical($t5, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t5 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t1));

    // assume Identical($t6, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t6 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t1));

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t2, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t2, $1_fixed_point64_spec_create_from_u128(1)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t3, $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t3, $t2));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t4, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t4, 31536000));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t5, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t5 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t6), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t6) <= 1));

    // $t7 := opaque begin: features::periodical_reward_rate_decrease_enabled() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:17+51
    assume {:print "$at(102,10434,10485)"} true;

    // assume WellFormed($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:17+51
    assume $IsValid'bool'($t7);

    // assume Eq<bool>($t7, features::spec_periodical_reward_rate_decrease_enabled()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:17+51
    assume $IsEqual'bool'($t7, $1_features_spec_periodical_reward_rate_decrease_enabled());

    // $t7 := opaque end: features::periodical_reward_rate_decrease_enabled() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:17+51

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:9+102
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:9+102
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:9+102
    assume {:print "$at(102,10426,10528)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:91+18
L0:

    // $t8 := 11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:91+18
    assume {:print "$at(102,10508,10526)"} true;
    $t8 := 11;
    assume $IsValid'u64'($t8);

    // $t9 := error::invalid_state($t8) on_abort goto L4 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:70+40
    call $t9 := $1_error_invalid_state($t8);
    if ($abort_flag) {
        assume {:print "$at(102,10487,10527)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,0):", $t10} $t10 == $t10;
        goto L4;
    }

    // trace_abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:9+102
    assume {:print "$at(102,10426,10528)"} true;
    assume {:print "$track_abort(35,0):", $t9} $t9 == $t9;

    // $t10 := move($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:9+102
    $t10 := $t9;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:218:9+102
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:219:38+42
    assume {:print "$at(102,10567,10609)"} true;
L2:

    // assume Identical($t11, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t11 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t12, select staking_config::StakingRewardsConfig.rewards_rate($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t12 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t11));

    // assume Identical($t13, select staking_config::StakingRewardsConfig.min_rewards_rate($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t13 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t11));

    // assume Identical($t14, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t14 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t11));

    // assume Identical($t15, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t15 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t11));

    // assume Identical($t16, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t16 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t11));

    // $t17 := staking_config::calculate_and_save_latest_rewards_config() on_abort goto L4 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:219:38+42
    assume {:print "$at(102,10567,10609)"} true;
    call $t17 := $1_staking_config_calculate_and_save_latest_rewards_config();
    if ($abort_flag) {
        assume {:print "$at(102,10567,10609)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,0):", $t10} $t10 == $t10;
        goto L4;
    }

    // trace_local[staking_rewards_config]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:219:13+22
    assume {:print "$track_local(35,0,0):", $t17} $t17 == $t17;

    // $t18 := get_field<staking_config::StakingRewardsConfig>.rewards_rate($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:220:9+35
    assume {:print "$at(102,10619,10654)"} true;
    $t18 := $rewards_rate#$1_staking_config_StakingRewardsConfig($t17);

    // trace_return[0]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:220:9+35
    assume {:print "$track_return(35,0,0):", $t18} $t18 == $t18;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:221:5+1
    assume {:print "$at(102,10659,10660)"} true;
L3:

    // return $t18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:221:5+1
    assume {:print "$at(102,10659,10660)"} true;
    $ret0 := $t18;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:221:5+1
L4:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:221:5+1
    assume {:print "$at(102,10659,10660)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun staking_config::calculate_and_save_latest_rewards_config [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:224:5+1690
procedure {:inline 1} $1_staking_config_calculate_and_save_latest_rewards_config() returns ($ret0: $1_staking_config_StakingRewardsConfig)
{
    // declare local variables
    var $t0: int;
    var $t1: $Mutation ($1_staking_config_StakingRewardsConfig);
    var $t2: $1_staking_config_StakingRewardsConfig;
    var $t3: $1_fixed_point64_FixedPoint64;
    var $t4: $1_fixed_point64_FixedPoint64;
    var $t5: int;
    var $t6: int;
    var $t7: $1_fixed_point64_FixedPoint64;
    var $t8: int;
    var $t9: $Mutation ($1_staking_config_StakingRewardsConfig);
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: $1_staking_config_StakingRewardsConfig;
    var $t21: $1_staking_config_StakingRewardsConfig;
    var $t22: $1_fixed_point64_FixedPoint64;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: $1_fixed_point64_FixedPoint64;
    var $t29: int;
    var $t30: int;
    var $t31: $1_fixed_point64_FixedPoint64;
    var $t32: bool;
    var $t33: $1_fixed_point64_FixedPoint64;
    var $t34: $1_fixed_point64_FixedPoint64;
    var $t35: bool;
    var $t36: int;
    var $t37: int;
    var $t38: $1_fixed_point64_FixedPoint64;
    var $t39: bool;
    var $t40: $1_fixed_point64_FixedPoint64;
    var $t41: $1_fixed_point64_FixedPoint64;
    var $t42: $1_fixed_point64_FixedPoint64;
    var $t43: $Mutation ($1_fixed_point64_FixedPoint64);
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: $Mutation (int);
    var $t48: $1_staking_config_StakingRewardsConfig;
    var $temp_0'$1_staking_config_StakingRewardsConfig': $1_staking_config_StakingRewardsConfig;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // assume Identical($t2, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t2 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t3, select staking_config::StakingRewardsConfig.rewards_rate($t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t3 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t2));

    // assume Identical($t4, select staking_config::StakingRewardsConfig.min_rewards_rate($t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t4 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t2));

    // assume Identical($t5, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t5 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t2));

    // assume Identical($t6, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t6 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t2));

    // assume Identical($t7, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t7 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t2));

    // assume features::spec_periodical_reward_rate_decrease_enabled() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:92:9+66
    assume {:print "$at(103,4224,4290)"} true;
    assume $1_features_spec_periodical_reward_rate_decrease_enabled();

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t3, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t3, $1_fixed_point64_spec_create_from_u128(1)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t4, $t3)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t4, $t3));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t5, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t5, 31536000));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t6, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t6 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t7), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t7) <= 1));

    // $t8 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:225:78+16
    assume {:print "$at(102,10910,10926)"} true;
    $t8 := 1;
    assume $IsValid'address'($t8);

    // $t9 := borrow_global<staking_config::StakingRewardsConfig>($t8) on_abort goto L9 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:225:38+17
    if (!$ResourceExists($1_staking_config_StakingRewardsConfig_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $t8));
    }
    if ($abort_flag) {
        assume {:print "$at(102,10870,10887)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;
        goto L9;
    }

    // trace_local[staking_rewards_config]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:225:13+22
    $temp_0'$1_staking_config_StakingRewardsConfig' := $Dereference($t9);
    assume {:print "$track_local(35,1,1):", $temp_0'$1_staking_config_StakingRewardsConfig'} $temp_0'$1_staking_config_StakingRewardsConfig' == $temp_0'$1_staking_config_StakingRewardsConfig';

    // $t11 := timestamp::now_seconds() on_abort goto L9 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:226:36+24
    assume {:print "$at(102,10964,10988)"} true;
    call $t11 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(102,10964,10988)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;
        goto L9;
    }

    // trace_local[current_time_in_secs]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:226:13+20
    assume {:print "$track_local(35,1,0):", $t11} $t11 == $t11;

    // $t12 := get_field<staking_config::StakingRewardsConfig>.last_rewards_rate_period_start_in_secs($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:228:37+61
    assume {:print "$at(102,11043,11104)"} true;
    $t12 := $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t13 := >=($t11, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:228:34+2
    call $t13 := $Ge($t11, $t12);

    // if ($t13) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194
    assume {:print "$at(102,10998,11192)"} true;
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194
    assume {:print "$at(102,10998,11192)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194
L0:

    // pack_ref_deep($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194
    assume {:print "$at(102,10998,11192)"} true;

    // destroy($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194

    // $t14 := 7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:229:37+39
    assume {:print "$at(102,11142,11181)"} true;
    $t14 := 7;
    assume $IsValid'u64'($t14);

    // $t15 := error::invalid_argument($t14) on_abort goto L9 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:229:13+64
    call $t15 := $1_error_invalid_argument($t14);
    if ($abort_flag) {
        assume {:print "$at(102,11118,11182)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;
        goto L9;
    }

    // trace_abort($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194
    assume {:print "$at(102,10998,11192)"} true;
    assume {:print "$track_abort(35,1):", $t15} $t15 == $t15;

    // $t10 := move($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194
    $t10 := $t15;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:227:9+194
    goto L9;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:231:13+20
    assume {:print "$at(102,11206,11226)"} true;
L2:

    // $t16 := get_field<staking_config::StakingRewardsConfig>.last_rewards_rate_period_start_in_secs($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:231:36+61
    assume {:print "$at(102,11229,11290)"} true;
    $t16 := $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t17 := -($t11, $t16) on_abort goto L9 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:231:34+1
    call $t17 := $Sub($t11, $t16);
    if ($abort_flag) {
        assume {:print "$at(102,11227,11228)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;
        goto L9;
    }

    // $t18 := get_field<staking_config::StakingRewardsConfig>.rewards_rate_period_in_secs($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:231:100+50
    $t18 := $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t19 := <($t17, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:231:98+1
    call $t19 := $Lt($t17, $t18);

    // if ($t19) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:231:9+197
    if ($t19) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:232:21+22
    assume {:print "$at(102,11367,11389)"} true;
L4:

    // $t20 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:232:20+23
    assume {:print "$at(102,11366,11389)"} true;
    $t20 := $Dereference($t9);

    // pack_ref_deep($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:232:20+23

    // trace_return[0]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:232:13+30
    assume {:print "$track_return(35,1,0):", $t20} $t20 == $t20;

    // $t21 := move($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:232:13+30
    $t21 := $t20;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:232:13+30
    goto L8;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:236:33+22
    assume {:print "$at(102,11558,11580)"} true;
L3:

    // $t22 := get_field<staking_config::StakingRewardsConfig>.rewards_rate_decrease_rate($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:236:33+49
    assume {:print "$at(102,11558,11607)"} true;
    $t22 := $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t23 := opaque begin: fixed_point64::ceil($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:236:13+70

    // assume WellFormed($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:236:13+70
    assume $IsValid'u128'($t23);

    // assume Eq<u128>($t23, fixed_point64::spec_ceil($t22)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:236:13+70
    assume $IsEqual'u128'($t23, $1_fixed_point64_spec_ceil($t22));

    // $t23 := opaque end: fixed_point64::ceil($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:236:13+70

    // $t24 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:236:87+1
    $t24 := 1;
    assume $IsValid'u128'($t24);

    // $t25 := <=($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:236:84+2
    call $t25 := $Le($t23, $t24);

    // if ($t25) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180
    assume {:print "$at(102,11517,11697)"} true;
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180
L6:

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180
    assume {:print "$at(102,11517,11697)"} true;
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180
L5:

    // pack_ref_deep($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180
    assume {:print "$at(102,11517,11697)"} true;

    // destroy($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180

    // $t26 := 8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:237:37+35
    assume {:print "$at(102,11651,11686)"} true;
    $t26 := 8;
    assume $IsValid'u64'($t26);

    // $t27 := error::invalid_argument($t26) on_abort goto L9 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:237:13+60
    call $t27 := $1_error_invalid_argument($t26);
    if ($abort_flag) {
        assume {:print "$at(102,11627,11687)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;
        goto L9;
    }

    // trace_abort($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180
    assume {:print "$at(102,11517,11697)"} true;
    assume {:print "$track_abort(35,1):", $t27} $t27 == $t27;

    // $t10 := move($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180
    $t10 := $t27;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:235:9+180
    goto L9;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:240:13+22
    assume {:print "$at(102,11757,11779)"} true;
L7:

    // $t28 := get_field<staking_config::StakingRewardsConfig>.rewards_rate($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:240:13+35
    assume {:print "$at(102,11757,11792)"} true;
    $t28 := $rewards_rate#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t29 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:49+1
    assume {:print "$at(102,11874,11875)"} true;
    $t29 := 1;
    assume $IsValid'u128'($t29);

    // assume Identical($t30, Shl(Cast($t29), 64)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:324:9+39
    assume {:print "$at(47,12495,12534)"} true;
    assume ($t30 == $shlU256($t29, 64));

    // $t31 := opaque begin: fixed_point64::create_from_u128($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
    assume {:print "$at(102,11842,11876)"} true;

    // assume Identical($t32, Gt($t30, 340282366920938463463374607431768211455)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
    assume ($t32 == ($t30 > 340282366920938463463374607431768211455));

    // if ($t32) goto L16 else goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
    if ($t32) { goto L16; } else { goto L10; }

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
L11:

    // trace_abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
    assume {:print "$at(102,11842,11876)"} true;
    assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
    goto L9;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
L10:

    // assume WellFormed($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
    assume {:print "$at(102,11842,11876)"} true;
    assume $IsValid'$1_fixed_point64_FixedPoint64'($t31);

    // assume Eq<fixed_point64::FixedPoint64>($t31, fixed_point64::spec_create_from_u128($t29)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34
    assume $IsEqual'$1_fixed_point64_FixedPoint64'($t31, $1_fixed_point64_spec_create_from_u128($t29));

    // $t31 := opaque end: fixed_point64::create_from_u128($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:242:17+34

    // $t33 := get_field<staking_config::StakingRewardsConfig>.rewards_rate_decrease_rate($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:243:17+49
    assume {:print "$at(102,11894,11943)"} true;
    $t33 := $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t34 := opaque begin: fixed_point64::sub($t31, $t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
    assume {:print "$at(102,11806,11958)"} true;

    // assume Identical($t35, Lt(select fixed_point64::FixedPoint64.value($t31), select fixed_point64::FixedPoint64.value($t33))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
    assume ($t35 == ($value#$1_fixed_point64_FixedPoint64($t31) < $value#$1_fixed_point64_FixedPoint64($t33)));

    // if ($t35) goto L17 else goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
    if ($t35) { goto L17; } else { goto L12; }

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
L13:

    // assume And(Lt(select fixed_point64::FixedPoint64.value($t31), select fixed_point64::FixedPoint64.value($t33)), Eq(65542, $t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
    assume {:print "$at(102,11806,11958)"} true;
    assume (($value#$1_fixed_point64_FixedPoint64($t31) < $value#$1_fixed_point64_FixedPoint64($t33)) && $IsEqual'num'(65542, $t10));

    // trace_abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
    assume {:print "$at(102,11806,11958)"} true;
    assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
    goto L9;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
L12:

    // assume WellFormed($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
    assume {:print "$at(102,11806,11958)"} true;
    assume $IsValid'$1_fixed_point64_FixedPoint64'($t34);

    // assume Eq<u128>(select fixed_point64::FixedPoint64.value($t34), Sub(select fixed_point64::FixedPoint64.value($t31), select fixed_point64::FixedPoint64.value($t33))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152
    assume $IsEqual'u128'($value#$1_fixed_point64_FixedPoint64($t34), ($value#$1_fixed_point64_FixedPoint64($t31) - $value#$1_fixed_point64_FixedPoint64($t33)));

    // $t34 := opaque end: fixed_point64::sub($t31, $t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:241:13+152

    // $t36 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:45+1
    assume {:print "$at(102,12004,12005)"} true;
    $t36 := 1;
    assume $IsValid'u128'($t36);

    // assume Identical($t37, Shl(Cast($t36), 64)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/fixed_point64.move:324:9+39
    assume {:print "$at(47,12495,12534)"} true;
    assume ($t37 == $shlU256($t36, 64));

    // $t38 := opaque begin: fixed_point64::create_from_u128($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
    assume {:print "$at(102,11972,12006)"} true;

    // assume Identical($t39, Gt($t37, 340282366920938463463374607431768211455)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
    assume ($t39 == ($t37 > 340282366920938463463374607431768211455));

    // if ($t39) goto L18 else goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
    if ($t39) { goto L18; } else { goto L14; }

    // label L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
L15:

    // trace_abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
    assume {:print "$at(102,11972,12006)"} true;
    assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
    goto L9;

    // label L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
L14:

    // assume WellFormed($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
    assume {:print "$at(102,11972,12006)"} true;
    assume $IsValid'$1_fixed_point64_FixedPoint64'($t38);

    // assume Eq<fixed_point64::FixedPoint64>($t38, fixed_point64::spec_create_from_u128($t36)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34
    assume $IsEqual'$1_fixed_point64_FixedPoint64'($t38, $1_fixed_point64_spec_create_from_u128($t36));

    // $t38 := opaque end: fixed_point64::create_from_u128($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:245:13+34

    // $t40 := math_fixed64::mul_div($t28, $t34, $t38) on_abort goto L9 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:239:24+295
    assume {:print "$at(102,11722,12017)"} true;
    call $t40 := $1_math_fixed64_mul_div($t28, $t34, $t38);
    if ($abort_flag) {
        assume {:print "$at(102,11722,12017)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;
        goto L9;
    }

    // $t41 := get_field<staking_config::StakingRewardsConfig>.min_rewards_rate($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:247:49+39
    assume {:print "$at(102,12067,12106)"} true;
    $t41 := $min_rewards_rate#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t42 := opaque begin: fixed_point64::max($t40, $t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:247:20+69

    // assume WellFormed($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:247:20+69
    assume $IsValid'$1_fixed_point64_FixedPoint64'($t42);

    // assume Eq<fixed_point64::FixedPoint64>($t42, fixed_point64::spec_max($t40, $t41)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:247:20+69
    assume $IsEqual'$1_fixed_point64_FixedPoint64'($t42, $1_fixed_point64_spec_max($t40, $t41));

    // $t42 := opaque end: fixed_point64::max($t40, $t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:247:20+69

    // $t43 := borrow_field<staking_config::StakingRewardsConfig>.rewards_rate($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:249:9+35
    assume {:print "$at(102,12118,12153)"} true;
    $t43 := $ChildMutation($t9, 0, $rewards_rate#$1_staking_config_StakingRewardsConfig($Dereference($t9)));

    // write_ref($t43, $t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:249:9+46
    $t43 := $UpdateMutation($t43, $t42);

    // write_back[Reference($t9).rewards_rate (fixed_point64::FixedPoint64)]($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:249:9+46
    $t9 := $UpdateMutation($t9, $Update'$1_staking_config_StakingRewardsConfig'_rewards_rate($Dereference($t9), $Dereference($t43)));

    // $t44 := get_field<staking_config::StakingRewardsConfig>.last_rewards_rate_period_start_in_secs($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:251:13+61
    assume {:print "$at(102,12250,12311)"} true;
    $t44 := $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t45 := get_field<staking_config::StakingRewardsConfig>.rewards_rate_period_in_secs($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:252:13+50
    assume {:print "$at(102,12326,12376)"} true;
    $t45 := $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($Dereference($t9));

    // $t46 := +($t44, $t45) on_abort goto L9 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:251:75+1
    assume {:print "$at(102,12312,12313)"} true;
    call $t46 := $AddU64($t44, $t45);
    if ($abort_flag) {
        assume {:print "$at(102,12312,12313)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,1):", $t10} $t10 == $t10;
        goto L9;
    }

    // $t47 := borrow_field<staking_config::StakingRewardsConfig>.last_rewards_rate_period_start_in_secs($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:250:9+61
    assume {:print "$at(102,12174,12235)"} true;
    $t47 := $ChildMutation($t9, 3, $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($Dereference($t9)));

    // write_ref($t47, $t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:250:9+202
    $t47 := $UpdateMutation($t47, $t46);

    // write_back[Reference($t9).last_rewards_rate_period_start_in_secs (u64)]($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:250:9+202
    $t9 := $UpdateMutation($t9, $Update'$1_staking_config_StakingRewardsConfig'_last_rewards_rate_period_start_in_secs($Dereference($t9), $Dereference($t47)));

    // $t48 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:253:16+23
    assume {:print "$at(102,12393,12416)"} true;
    $t48 := $Dereference($t9);

    // pack_ref_deep($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:253:16+23

    // write_back[staking_config::StakingRewardsConfig@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:253:16+23
    $1_staking_config_StakingRewardsConfig_$memory := $ResourceUpdate($1_staking_config_StakingRewardsConfig_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // trace_return[0]($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:253:9+30
    assume {:print "$track_return(35,1,0):", $t48} $t48 == $t48;

    // $t21 := move($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:253:9+30
    $t21 := $t48;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:254:5+1
    assume {:print "$at(102,12421,12422)"} true;
L8:

    // return $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:254:5+1
    assume {:print "$at(102,12421,12422)"} true;
    $ret0 := $t21;
    return;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:254:5+1
L9:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:254:5+1
    assume {:print "$at(102,12421,12422)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

    // label L16 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L16:

    // destroy($t9) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L11 at <internal>:1:1+10
    goto L11;

    // label L17 at <internal>:1:1+10
L17:

    // destroy($t9) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L13 at <internal>:1:1+10
    goto L13;

    // label L18 at <internal>:1:1+10
L18:

    // destroy($t9) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L15 at <internal>:1:1+10
    goto L15;

}

// fun staking_config::get_allow_validator_set_change [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:174:5+121
procedure {:inline 1} $1_staking_config_get_allow_validator_set_change(_$t0: $1_staking_config_StakingConfig) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: $1_staking_config_StakingConfig;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[config]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:174:5+1
    assume {:print "$at(102,8350,8351)"} true;
    assume {:print "$track_local(35,3,0):", $t0} $t0 == $t0;

    // $t1 := get_field<staking_config::StakingConfig>.allow_validator_set_change($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:175:9+33
    assume {:print "$at(102,8432,8465)"} true;
    $t1 := $allow_validator_set_change#$1_staking_config_StakingConfig($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:175:9+33
    assume {:print "$track_return(35,3,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:176:5+1
    assume {:print "$at(102,8470,8471)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:176:5+1
    assume {:print "$at(102,8470,8471)"} true;
    $ret0 := $t1;
    return;

}

// fun staking_config::get_recurring_lockup_duration [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:185:5+123
procedure {:inline 1} $1_staking_config_get_recurring_lockup_duration(_$t0: $1_staking_config_StakingConfig) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_staking_config_StakingConfig;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[config]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:185:5+1
    assume {:print "$at(102,8800,8801)"} true;
    assume {:print "$track_local(35,4,0):", $t0} $t0 == $t0;

    // $t1 := get_field<staking_config::StakingConfig>.recurring_lockup_duration_secs($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:186:9+37
    assume {:print "$at(102,8880,8917)"} true;
    $t1 := $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:186:9+37
    assume {:print "$track_return(35,4,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:187:5+1
    assume {:print "$at(102,8922,8923)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:187:5+1
    assume {:print "$at(102,8922,8923)"} true;
    $ret0 := $t1;
    return;

}

// fun staking_config::get_required_stake [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:179:5+126
procedure {:inline 1} $1_staking_config_get_required_stake(_$t0: $1_staking_config_StakingConfig) returns ($ret0: int, $ret1: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $1_staking_config_StakingConfig;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[config]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:179:5+1
    assume {:print "$at(102,8520,8521)"} true;
    assume {:print "$track_local(35,5,0):", $t0} $t0 == $t0;

    // $t1 := get_field<staking_config::StakingConfig>.minimum_stake($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:180:10+20
    assume {:print "$at(102,8597,8617)"} true;
    $t1 := $minimum_stake#$1_staking_config_StakingConfig($t0);

    // $t2 := get_field<staking_config::StakingConfig>.maximum_stake($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:180:32+20
    $t2 := $maximum_stake#$1_staking_config_StakingConfig($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:180:9+44
    assume {:print "$track_return(35,5,0):", $t1} $t1 == $t1;

    // trace_return[1]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:180:9+44
    assume {:print "$track_return(35,5,1):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:181:5+1
    assume {:print "$at(102,8645,8646)"} true;
L1:

    // return ($t1, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:181:5+1
    assume {:print "$at(102,8645,8646)"} true;
    $ret0 := $t1;
    $ret1 := $t2;
    return;

}

// fun staking_config::get_reward_rate [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:190:5+1109
procedure {:inline 1} $1_staking_config_get_reward_rate(_$t0: $1_staking_config_StakingConfig) returns ($ret0: int, $ret1: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_fixed_point64_FixedPoint64;
    var $t7: $1_staking_config_StakingRewardsConfig;
    var $t8: $1_fixed_point64_FixedPoint64;
    var $t9: $1_fixed_point64_FixedPoint64;
    var $t10: int;
    var $t11: int;
    var $t12: $1_fixed_point64_FixedPoint64;
    var $t13: bool;
    var $t14: int;
    var $t15: $1_staking_config_StakingRewardsConfig;
    var $t16: int;
    var $t17: $1_fixed_point64_FixedPoint64;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: bool;
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: int;
    var $t31: int;
    var $t0: $1_staking_config_StakingConfig;
    var $temp_0'$1_fixed_point64_FixedPoint64': $1_fixed_point64_FixedPoint64;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t7, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t7 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t8, select staking_config::StakingRewardsConfig.rewards_rate($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t8 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t7));

    // assume Identical($t9, select staking_config::StakingRewardsConfig.min_rewards_rate($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t9 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t7));

    // assume Identical($t10, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t10 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t7));

    // assume Identical($t11, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t11 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t7));

    // assume Identical($t12, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t12 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t7));

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t8, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t8, $1_fixed_point64_spec_create_from_u128(1)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t9, $t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t9, $t8));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t10, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t10, 31536000));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t11, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t11 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t12), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t12) <= 1));

    // trace_local[config]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:190:5+1
    assume {:print "$at(102,8975,8976)"} true;
    assume {:print "$track_local(35,6,0):", $t0} $t0 == $t0;

    // $t13 := opaque begin: features::periodical_reward_rate_decrease_enabled() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:60+51
    assume {:print "$at(102,9129,9180)"} true;

    // assume WellFormed($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:60+51
    assume $IsValid'bool'($t13);

    // assume Eq<bool>($t13, features::spec_periodical_reward_rate_decrease_enabled()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:60+51
    assume $IsEqual'bool'($t13, $1_features_spec_periodical_reward_rate_decrease_enabled());

    // $t13 := opaque end: features::periodical_reward_rate_decrease_enabled() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:60+51

    // if ($t13) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:56+903
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:192:13+91
    assume {:print "$at(102,9196,9287)"} true;
L1:

    // $t14 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:192:74+16
    assume {:print "$at(102,9257,9273)"} true;
    $t14 := 1;
    assume $IsValid'address'($t14);

    // $t15 := get_global<staking_config::StakingRewardsConfig>($t14) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:192:38+13
    if (!$ResourceExists($1_staking_config_StakingRewardsConfig_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $t14);
    }
    if ($abort_flag) {
        assume {:print "$at(102,9221,9234)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(35,6):", $t16} $t16 == $t16;
        goto L9;
    }

    // $t17 := get_field<staking_config::StakingRewardsConfig>.rewards_rate($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:192:38+66
    $t17 := $rewards_rate#$1_staking_config_StakingRewardsConfig($t15);

    // trace_local[epoch_rewards_rate]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:192:17+18
    assume {:print "$track_local(35,6,6):", $t17} $t17 == $t17;

    // $t18 := fixed_point64::is_zero($t17) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:193:17+42
    assume {:print "$at(102,9305,9347)"} true;
    call $t18 := $1_fixed_point64_is_zero($t17);
    if ($abort_flag) {
        assume {:print "$at(102,9305,9347)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(35,6):", $t16} $t16 == $t16;
        goto L9;
    }

    // if ($t18) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:193:13+633
    if ($t18) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:194:18+4
    assume {:print "$at(102,9368,9372)"} true;
L3:

    // $t19 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:194:18+4
    assume {:print "$at(102,9368,9372)"} true;
    $t19 := 0;
    assume $IsValid'u64'($t19);

    // $t20 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:194:24+4
    $t20 := 1;
    assume $IsValid'u64'($t20);

    // $t2 := $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:193:13+633
    assume {:print "$at(102,9301,9934)"} true;
    $t2 := $t20;

    // $t1 := $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:193:13+633
    $t1 := $t19;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:193:13+633
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:63+16
    assume {:print "$at(102,9613,9629)"} true;
L2:

    // $t21 := 1000000 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:63+16
    assume {:print "$at(102,9613,9629)"} true;
    $t21 := 1000000;
    assume $IsValid'u64'($t21);

    // $t22 := (u128)($t21) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:62+26
    call $t22 := $CastU128($t21);
    if ($abort_flag) {
        assume {:print "$at(102,9612,9638)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(35,6):", $t16} $t16 == $t16;
        goto L9;
    }

    // $t23 := opaque begin: fixed_point64::divide_u128($t22, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74

    // assume Identical($t24, Or(Eq<u128>(select fixed_point64::FixedPoint64.value($t17), 0), Gt(fixed_point64::spec_divide_u128($t22, $t17), 340282366920938463463374607431768211455))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
    assume ($t24 == ($IsEqual'u128'($value#$1_fixed_point64_FixedPoint64($t17), 0) || ($1_fixed_point64_spec_divide_u128($t22, $t17) > 340282366920938463463374607431768211455)));

    // if ($t24) goto L11 else goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
    if ($t24) { goto L11; } else { goto L10; }

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
L11:

    // assume Or(And(Eq<u128>(select fixed_point64::FixedPoint64.value($t17), 0), Eq(65540, $t16)), And(Gt(fixed_point64::spec_divide_u128($t22, $t17), 340282366920938463463374607431768211455), Eq(131074, $t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
    assume {:print "$at(102,9585,9659)"} true;
    assume (($IsEqual'u128'($value#$1_fixed_point64_FixedPoint64($t17), 0) && $IsEqual'num'(65540, $t16)) || (($1_fixed_point64_spec_divide_u128($t22, $t17) > 340282366920938463463374607431768211455) && $IsEqual'num'(131074, $t16)));

    // trace_abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
    assume {:print "$at(102,9585,9659)"} true;
    assume {:print "$track_abort(35,6):", $t16} $t16 == $t16;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
    goto L9;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
L10:

    // assume WellFormed($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
    assume {:print "$at(102,9585,9659)"} true;
    assume $IsValid'u128'($t23);

    // assume Eq<u128>($t23, fixed_point64::spec_divide_u128($t22, $t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74
    assume $IsEqual'u128'($t23, $1_fixed_point64_spec_divide_u128($t22, $t17));

    // $t23 := opaque end: fixed_point64::divide_u128($t22, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:35+74

    // $t5 := $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:21+11
    $t5 := $t23;

    // trace_local[denominator]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:198:21+11
    assume {:print "$track_local(35,6,5):", $t23} $t23 == $t23;

    // $t25 := 18446744073709551615 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:199:35+7
    assume {:print "$at(102,9695,9702)"} true;
    $t25 := 18446744073709551615;
    assume $IsValid'u128'($t25);

    // $t26 := >($t23, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:199:33+1
    call $t26 := $Gt($t23, $t25);

    // if ($t26) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:199:17+88
    if ($t26) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:200:35+7
    assume {:print "$at(102,9740,9747)"} true;
L6:

    // $t27 := 18446744073709551615 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:200:35+7
    assume {:print "$at(102,9740,9747)"} true;
    $t27 := 18446744073709551615;
    assume $IsValid'u128'($t27);

    // $t5 := $t27 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:200:21+11
    $t5 := $t27;

    // trace_local[denominator]($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:200:21+11
    assume {:print "$track_local(35,6,5):", $t27} $t27 == $t27;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:63+11
    assume {:print "$at(102,9829,9840)"} true;
L5:

    // $t28 := opaque begin: fixed_point64::multiply_u128($t5, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
    assume {:print "$at(102,9800,9861)"} true;

    // assume Identical($t29, Gt(fixed_point64::spec_multiply_u128($t5, $t17), 340282366920938463463374607431768211455)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
    assume ($t29 == ($1_fixed_point64_spec_multiply_u128($t5, $t17) > 340282366920938463463374607431768211455));

    // if ($t29) goto L13 else goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
    if ($t29) { goto L13; } else { goto L12; }

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
L13:

    // assume And(Gt(fixed_point64::spec_multiply_u128($t5, $t17), 340282366920938463463374607431768211455), Eq(131075, $t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
    assume {:print "$at(102,9800,9861)"} true;
    assume (($1_fixed_point64_spec_multiply_u128($t5, $t17) > 340282366920938463463374607431768211455) && $IsEqual'num'(131075, $t16));

    // trace_abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
    assume {:print "$at(102,9800,9861)"} true;
    assume {:print "$track_abort(35,6):", $t16} $t16 == $t16;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
    goto L9;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
L12:

    // assume WellFormed($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
    assume {:print "$at(102,9800,9861)"} true;
    assume $IsValid'u128'($t28);

    // assume Eq<u128>($t28, fixed_point64::spec_multiply_u128($t5, $t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61
    assume $IsEqual'u128'($t28, $1_fixed_point64_spec_multiply_u128($t5, $t17));

    // $t28 := opaque end: fixed_point64::multiply_u128($t5, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:34+61

    // $t30 := (u64)($t28) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:202:33+70
    call $t30 := $CastU64($t28);
    if ($abort_flag) {
        assume {:print "$at(102,9799,9869)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(35,6):", $t16} $t16 == $t16;
        goto L9;
    }

    // $t2 := (u64)($t5) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:203:29+20
    assume {:print "$at(102,9899,9919)"} true;
    call $t2 := $CastU64($t5);
    if ($abort_flag) {
        assume {:print "$at(102,9899,9919)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(35,6):", $t16} $t16 == $t16;
        goto L9;
    }

    // $t1 := $t30 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:193:13+633
    assume {:print "$at(102,9301,9934)"} true;
    $t1 := $t30;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:193:13+633
L4:

    // $t4 := $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:56+903
    assume {:print "$at(102,9125,10028)"} true;
    $t4 := $t2;

    // $t3 := $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:56+903
    $t3 := $t1;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:56+903
    goto L7;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:206:14+6
    assume {:print "$at(102,9965,9971)"} true;
L0:

    // $t31 := get_field<staking_config::StakingConfig>.rewards_rate($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:206:14+19
    assume {:print "$at(102,9965,9984)"} true;
    $t31 := $rewards_rate#$1_staking_config_StakingConfig($t0);

    // $t4 := get_field<staking_config::StakingConfig>.rewards_rate_denominator($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:206:35+31
    $t4 := $rewards_rate_denominator#$1_staking_config_StakingConfig($t0);

    // $t3 := $t31 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:56+903
    assume {:print "$at(102,9125,10028)"} true;
    $t3 := $t31;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:191:56+903
L7:

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:208:9+40
    assume {:print "$at(102,10038,10078)"} true;
    assume {:print "$track_return(35,6,0):", $t3} $t3 == $t3;

    // trace_return[1]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:208:9+40
    assume {:print "$track_return(35,6,1):", $t4} $t4 == $t4;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:209:5+1
    assume {:print "$at(102,10083,10084)"} true;
L8:

    // return ($t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:209:5+1
    assume {:print "$at(102,10083,10084)"} true;
    $ret0 := $t3;
    $ret1 := $t4;
    return;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:209:5+1
L9:

    // abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:209:5+1
    assume {:print "$at(102,10083,10084)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun staking_config::get_voting_power_increase_limit [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:212:5+122
procedure {:inline 1} $1_staking_config_get_voting_power_increase_limit(_$t0: $1_staking_config_StakingConfig) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_staking_config_StakingConfig;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[config]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:212:5+1
    assume {:print "$at(102,10126,10127)"} true;
    assume {:print "$track_local(35,7,0):", $t0} $t0 == $t0;

    // $t1 := get_field<staking_config::StakingConfig>.voting_power_increase_limit($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:213:9+34
    assume {:print "$at(102,10208,10242)"} true;
    $t1 := $voting_power_increase_limit#$1_staking_config_StakingConfig($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:213:9+34
    assume {:print "$track_return(35,7,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:214:5+1
    assume {:print "$at(102,10247,10248)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:214:5+1
    assume {:print "$at(102,10247,10248)"} true;
    $ret0 := $t1;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+71
function {:inline} $1_math64_$min(a: int, b: int): int {
    (if ((a < b)) then (a) else (b))
}

// fun math64::min [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+71
procedure {:inline 1} $1_math64_min(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t0: int;
    var $t1: int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[a]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+1
    assume {:print "$at(54,467,468)"} true;
    assume {:print "$track_local(36,6,0):", $t0} $t0 == $t0;

    // trace_local[b]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+1
    assume {:print "$track_local(36,6,1):", $t1} $t1 == $t1;

    // $t3 := <($t0, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:15+1
    assume {:print "$at(54,519,520)"} true;
    call $t3 := $Lt($t0, $t1);

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:20+1
L1:

    // $t2 := $t0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(54,513,532)"} true;
    $t2 := $t0;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:27+1
L0:

    // $t2 := $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(54,513,532)"} true;
    $t2 := $t1;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
L2:

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(54,513,532)"} true;
    assume {:print "$track_return(36,6,0):", $t2} $t2 == $t2;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:19:5+1
    assume {:print "$at(54,537,538)"} true;
L3:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:19:5+1
    assume {:print "$at(54,537,538)"} true;
    $ret0 := $t2;
    return;

}

// struct bls12381::ProofOfPossession at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:49:5+80
type {:datatype} $1_bls12381_ProofOfPossession;
function {:constructor} $1_bls12381_ProofOfPossession($bytes: Vec (int)): $1_bls12381_ProofOfPossession;
function {:inline} $Update'$1_bls12381_ProofOfPossession'_bytes(s: $1_bls12381_ProofOfPossession, x: Vec (int)): $1_bls12381_ProofOfPossession {
    $1_bls12381_ProofOfPossession(x)
}
function $IsValid'$1_bls12381_ProofOfPossession'(s: $1_bls12381_ProofOfPossession): bool {
    $IsValid'vec'u8''($bytes#$1_bls12381_ProofOfPossession(s))
}
function {:inline} $IsEqual'$1_bls12381_ProofOfPossession'(s1: $1_bls12381_ProofOfPossession, s2: $1_bls12381_ProofOfPossession): bool {
    $IsEqual'vec'u8''($bytes#$1_bls12381_ProofOfPossession(s1), $bytes#$1_bls12381_ProofOfPossession(s2))}

// struct bls12381::PublicKeyWithPoP at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:59:5+79
type {:datatype} $1_bls12381_PublicKeyWithPoP;
function {:constructor} $1_bls12381_PublicKeyWithPoP($bytes: Vec (int)): $1_bls12381_PublicKeyWithPoP;
function {:inline} $Update'$1_bls12381_PublicKeyWithPoP'_bytes(s: $1_bls12381_PublicKeyWithPoP, x: Vec (int)): $1_bls12381_PublicKeyWithPoP {
    $1_bls12381_PublicKeyWithPoP(x)
}
function $IsValid'$1_bls12381_PublicKeyWithPoP'(s: $1_bls12381_PublicKeyWithPoP): bool {
    $IsValid'vec'u8''($bytes#$1_bls12381_PublicKeyWithPoP(s))
}
function {:inline} $IsEqual'$1_bls12381_PublicKeyWithPoP'(s1: $1_bls12381_PublicKeyWithPoP, s2: $1_bls12381_PublicKeyWithPoP): bool {
    $IsEqual'vec'u8''($bytes#$1_bls12381_PublicKeyWithPoP(s1), $bytes#$1_bls12381_PublicKeyWithPoP(s2))}

// fun bls12381::proof_of_possession_from_bytes [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:103:5+143
procedure {:inline 1} $1_bls12381_proof_of_possession_from_bytes(_$t0: Vec (int)) returns ($ret0: $1_bls12381_ProofOfPossession)
{
    // declare local variables
    var $t1: $1_bls12381_ProofOfPossession;
    var $t0: Vec (int);
    var $temp_0'$1_bls12381_ProofOfPossession': $1_bls12381_ProofOfPossession;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:103:5+1
    assume {:print "$at(26,4209,4210)"} true;
    assume {:print "$track_local(37,8,0):", $t0} $t0 == $t0;

    // $t1 := pack bls12381::ProofOfPossession($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:104:9+47
    assume {:print "$at(26,4299,4346)"} true;
    $t1 := $1_bls12381_ProofOfPossession($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:104:9+47
    assume {:print "$track_return(37,8,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:107:5+1
    assume {:print "$at(26,4351,4352)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:107:5+1
    assume {:print "$at(26,4351,4352)"} true;
    $ret0 := $t1;
    return;

}

// fun bls12381::public_key_from_bytes_with_pop [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:115:5+357
procedure {:inline 1} $1_bls12381_public_key_from_bytes_with_pop(_$t0: Vec (int), _$t1: $1_bls12381_ProofOfPossession) returns ($ret0: $1_option_Option'$1_bls12381_PublicKeyWithPoP')
{
    // declare local variables
    var $t2: $1_option_Option'$1_bls12381_PublicKeyWithPoP';
    var $t3: Vec (int);
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: $1_bls12381_PublicKeyWithPoP;
    var $t0: Vec (int);
    var $t1: $1_bls12381_ProofOfPossession;
    var $temp_0'$1_bls12381_ProofOfPossession': $1_bls12381_ProofOfPossession;
    var $temp_0'$1_option_Option'$1_bls12381_PublicKeyWithPoP'': $1_option_Option'$1_bls12381_PublicKeyWithPoP';
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pk_bytes]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:115:5+1
    assume {:print "$at(26,4615,4616)"} true;
    assume {:print "$track_local(37,11,0):", $t0} $t0 == $t0;

    // trace_local[pop]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:115:5+1
    assume {:print "$track_local(37,11,1):", $t1} $t1 == $t1;

    // $t3 := get_field<bls12381::ProofOfPossession>.bytes($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:59+9
    assume {:print "$at(26,4790,4799)"} true;
    $t3 := $bytes#$1_bls12381_ProofOfPossession($t1);

    // $t4 := opaque begin: bls12381::verify_proof_of_possession_internal($t0, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56

    // $t5 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56
    havoc $t5;

    // if ($t5) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56
    if ($t5) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56
L6:

    // trace_abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56
    assume {:print "$at(26,4744,4800)"} true;
    assume {:print "$track_abort(37,11):", $t6} $t6 == $t6;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56
    goto L4;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56
L5:

    // assume WellFormed($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56
    assume {:print "$at(26,4744,4800)"} true;
    assume $IsValid'bool'($t4);

    // $t4 := opaque end: bls12381::verify_proof_of_possession_internal($t0, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:13+56

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:9+226
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:118:24+8
    assume {:print "$at(26,4871,4879)"} true;
L1:

    // $t7 := pack bls12381::PublicKeyWithPoP($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:117:26+64
    assume {:print "$at(26,4829,4893)"} true;
    $t7 := $1_bls12381_PublicKeyWithPoP($t0);

    // $t2 := opaque begin: option::some<bls12381::PublicKeyWithPoP>($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:117:13+78

    // assume And(WellFormed($t2), Le(Len<bls12381::PublicKeyWithPoP>(select option::Option.vec($t2)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:117:13+78
    assume ($IsValid'$1_option_Option'$1_bls12381_PublicKeyWithPoP''($t2) && (LenVec($vec#$1_option_Option'$1_bls12381_PublicKeyWithPoP'($t2)) <= 1));

    // assume Eq<option::Option<bls12381::PublicKeyWithPoP>>($t2, option::spec_some<bls12381::PublicKeyWithPoP>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:117:13+78
    assume $IsEqual'$1_option_Option'$1_bls12381_PublicKeyWithPoP''($t2, $1_option_spec_some'$1_bls12381_PublicKeyWithPoP'($t7));

    // $t2 := opaque end: option::some<bls12381::PublicKeyWithPoP>($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:117:13+78

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:9+226
    assume {:print "$at(26,4740,4966)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:121:13+32
    assume {:print "$at(26,4924,4956)"} true;
L0:

    // $t2 := opaque begin: option::none<bls12381::PublicKeyWithPoP>() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:121:13+32
    assume {:print "$at(26,4924,4956)"} true;

    // assume And(WellFormed($t2), Le(Len<bls12381::PublicKeyWithPoP>(select option::Option.vec($t2)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:121:13+32
    assume ($IsValid'$1_option_Option'$1_bls12381_PublicKeyWithPoP''($t2) && (LenVec($vec#$1_option_Option'$1_bls12381_PublicKeyWithPoP'($t2)) <= 1));

    // assume Eq<option::Option<bls12381::PublicKeyWithPoP>>($t2, option::spec_none<bls12381::PublicKeyWithPoP>()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:121:13+32
    assume $IsEqual'$1_option_Option'$1_bls12381_PublicKeyWithPoP''($t2, $1_option_spec_none'$1_bls12381_PublicKeyWithPoP'());

    // $t2 := opaque end: option::none<bls12381::PublicKeyWithPoP>() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:121:13+32

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:9+226
    assume {:print "$at(26,4740,4966)"} true;
L2:

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:116:9+226
    assume {:print "$at(26,4740,4966)"} true;
    assume {:print "$track_return(37,11,0):", $t2} $t2 == $t2;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:123:5+1
    assume {:print "$at(26,4971,4972)"} true;
L3:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:123:5+1
    assume {:print "$at(26,4971,4972)"} true;
    $ret0 := $t2;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:123:5+1
L4:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/cryptography/bls12381.move:123:5+1
    assume {:print "$at(26,4971,4972)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+89
function {:inline} $1_stake_$stake_pool_exists($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, addr: int): bool {
    $ResourceExists($1_stake_StakePool_$memory, addr)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:17:10+500
function {:inline} $1_stake_validator_set_is_valid($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance, $1_stake_ValidatorSet_$memory: $Memory $1_stake_ValidatorSet): bool {
    (var validator_set := $ResourceValue($1_stake_ValidatorSet_$memory, 1); (((($1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $active_validators#$1_stake_ValidatorSet(validator_set)) && $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $pending_inactive#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $pending_active#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $active_validators#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $pending_inactive#$1_stake_ValidatorSet(validator_set))))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:336:10+241
function {:inline} $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, validators: Vec ($1_stake_ValidatorInfo)): bool {
    (var $range_0 := $Range(0, LenVec(validators)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($1_stake_spec_has_stake_pool($1_stake_StakePool_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i))) && $1_stake_spec_has_validator_config($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i))))))))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:343:10+234
function {:inline} $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance, validators: Vec ($1_stake_ValidatorInfo)): bool {
    (var $range_2 := $Range(0, LenVec(validators)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    (($validator_index#$1_stake_ValidatorConfig($ResourceValue($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i)))) < $1_stake_spec_validator_index_upper_bound($1_stake_ValidatorPerformance_$memory))))))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:349:10+122
function {:inline} $1_stake_spec_validator_index_upper_bound($1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance): int {
    LenVec($validators#$1_stake_ValidatorPerformance($ResourceValue($1_stake_ValidatorPerformance_$memory, 1)))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:353:10+78
function {:inline} $1_stake_spec_has_stake_pool($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, a: int): bool {
    $ResourceExists($1_stake_StakePool_$memory, a)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:357:10+90
function {:inline} $1_stake_spec_has_validator_config($1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, a: int): bool {
    $ResourceExists($1_stake_ValidatorConfig_$memory, a)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:362:10+202
function  $1_stake_spec_rewards_amount(stake_amount: int, num_successful_proposals: int, num_total_proposals: int, rewards_rate: int, rewards_rate_denominator: int): int;
axiom (forall stake_amount: int, num_successful_proposals: int, num_total_proposals: int, rewards_rate: int, rewards_rate_denominator: int ::
(var $$res := $1_stake_spec_rewards_amount(stake_amount, num_successful_proposals, num_total_proposals, rewards_rate, rewards_rate_denominator);
$IsValid'u64'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:370:10+148
function {:inline} $1_stake_spec_contains(validators: Vec ($1_stake_ValidatorInfo), addr: int): bool {
    (var $range_4 := $Range(0, LenVec(validators)); (exists $i_5: int :: $InRange($range_4, $i_5) && (var i := $i_5;
    ($IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec(validators, i)), addr)))))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:374:10+360
function {:inline} $1_stake_spec_is_current_epoch_validator($1_stake_ValidatorSet_$memory: $Memory $1_stake_ValidatorSet, pool_address: int): bool {
    (var validator_set := $ResourceValue($1_stake_ValidatorSet_$memory, 1); (!$1_stake_spec_contains($pending_active#$1_stake_ValidatorSet(validator_set), pool_address) && ($1_stake_spec_contains($active_validators#$1_stake_ValidatorSet(validator_set), pool_address) || $1_stake_spec_contains($pending_inactive#$1_stake_ValidatorSet(validator_set), pool_address))))
}

// struct stake::AddStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:210:5+102
type {:datatype} $1_stake_AddStakeEvent;
function {:constructor} $1_stake_AddStakeEvent($pool_address: int, $amount_added: int): $1_stake_AddStakeEvent;
function {:inline} $Update'$1_stake_AddStakeEvent'_pool_address(s: $1_stake_AddStakeEvent, x: int): $1_stake_AddStakeEvent {
    $1_stake_AddStakeEvent(x, $amount_added#$1_stake_AddStakeEvent(s))
}
function {:inline} $Update'$1_stake_AddStakeEvent'_amount_added(s: $1_stake_AddStakeEvent, x: int): $1_stake_AddStakeEvent {
    $1_stake_AddStakeEvent($pool_address#$1_stake_AddStakeEvent(s), x)
}
function $IsValid'$1_stake_AddStakeEvent'(s: $1_stake_AddStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_AddStakeEvent(s))
      && $IsValid'u64'($amount_added#$1_stake_AddStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_AddStakeEvent'(s1: $1_stake_AddStakeEvent, s2: $1_stake_AddStakeEvent): bool {
    s1 == s2
}

// struct stake::AllowedValidators at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1332:5+75
type {:datatype} $1_stake_AllowedValidators;
function {:constructor} $1_stake_AllowedValidators($accounts: Vec (int)): $1_stake_AllowedValidators;
function {:inline} $Update'$1_stake_AllowedValidators'_accounts(s: $1_stake_AllowedValidators, x: Vec (int)): $1_stake_AllowedValidators {
    $1_stake_AllowedValidators(x)
}
function $IsValid'$1_stake_AllowedValidators'(s: $1_stake_AllowedValidators): bool {
    $IsValid'vec'address''($accounts#$1_stake_AllowedValidators(s))
}
function {:inline} $IsEqual'$1_stake_AllowedValidators'(s1: $1_stake_AllowedValidators, s2: $1_stake_AllowedValidators): bool {
    $IsEqual'vec'address''($accounts#$1_stake_AllowedValidators(s1), $accounts#$1_stake_AllowedValidators(s2))}
var $1_stake_AllowedValidators_$memory: $Memory $1_stake_AllowedValidators;

// struct stake::AptosCoinCapabilities at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:187:5+89
type {:datatype} $1_stake_AptosCoinCapabilities;
function {:constructor} $1_stake_AptosCoinCapabilities($mint_cap: $1_coin_MintCapability'$1_aptos_coin_AptosCoin'): $1_stake_AptosCoinCapabilities;
function {:inline} $Update'$1_stake_AptosCoinCapabilities'_mint_cap(s: $1_stake_AptosCoinCapabilities, x: $1_coin_MintCapability'$1_aptos_coin_AptosCoin'): $1_stake_AptosCoinCapabilities {
    $1_stake_AptosCoinCapabilities(x)
}
function $IsValid'$1_stake_AptosCoinCapabilities'(s: $1_stake_AptosCoinCapabilities): bool {
    $IsValid'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''($mint_cap#$1_stake_AptosCoinCapabilities(s))
}
function {:inline} $IsEqual'$1_stake_AptosCoinCapabilities'(s1: $1_stake_AptosCoinCapabilities, s2: $1_stake_AptosCoinCapabilities): bool {
    s1 == s2
}
var $1_stake_AptosCoinCapabilities_$memory: $Memory $1_stake_AptosCoinCapabilities;

// struct stake::DistributeRewardsEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:244:5+113
type {:datatype} $1_stake_DistributeRewardsEvent;
function {:constructor} $1_stake_DistributeRewardsEvent($pool_address: int, $rewards_amount: int): $1_stake_DistributeRewardsEvent;
function {:inline} $Update'$1_stake_DistributeRewardsEvent'_pool_address(s: $1_stake_DistributeRewardsEvent, x: int): $1_stake_DistributeRewardsEvent {
    $1_stake_DistributeRewardsEvent(x, $rewards_amount#$1_stake_DistributeRewardsEvent(s))
}
function {:inline} $Update'$1_stake_DistributeRewardsEvent'_rewards_amount(s: $1_stake_DistributeRewardsEvent, x: int): $1_stake_DistributeRewardsEvent {
    $1_stake_DistributeRewardsEvent($pool_address#$1_stake_DistributeRewardsEvent(s), x)
}
function $IsValid'$1_stake_DistributeRewardsEvent'(s: $1_stake_DistributeRewardsEvent): bool {
    $IsValid'address'($pool_address#$1_stake_DistributeRewardsEvent(s))
      && $IsValid'u64'($rewards_amount#$1_stake_DistributeRewardsEvent(s))
}
function {:inline} $IsEqual'$1_stake_DistributeRewardsEvent'(s1: $1_stake_DistributeRewardsEvent, s2: $1_stake_DistributeRewardsEvent): bool {
    s1 == s2
}

// struct stake::IncreaseLockupEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:234:5+153
type {:datatype} $1_stake_IncreaseLockupEvent;
function {:constructor} $1_stake_IncreaseLockupEvent($pool_address: int, $old_locked_until_secs: int, $new_locked_until_secs: int): $1_stake_IncreaseLockupEvent;
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_pool_address(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent(x, $old_locked_until_secs#$1_stake_IncreaseLockupEvent(s), $new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_old_locked_until_secs(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent($pool_address#$1_stake_IncreaseLockupEvent(s), x, $new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_new_locked_until_secs(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent($pool_address#$1_stake_IncreaseLockupEvent(s), $old_locked_until_secs#$1_stake_IncreaseLockupEvent(s), x)
}
function $IsValid'$1_stake_IncreaseLockupEvent'(s: $1_stake_IncreaseLockupEvent): bool {
    $IsValid'address'($pool_address#$1_stake_IncreaseLockupEvent(s))
      && $IsValid'u64'($old_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
      && $IsValid'u64'($new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $IsEqual'$1_stake_IncreaseLockupEvent'(s1: $1_stake_IncreaseLockupEvent, s2: $1_stake_IncreaseLockupEvent): bool {
    s1 == s2
}

// struct stake::IndividualValidatorPerformance at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:191:5+127
type {:datatype} $1_stake_IndividualValidatorPerformance;
function {:constructor} $1_stake_IndividualValidatorPerformance($successful_proposals: int, $failed_proposals: int): $1_stake_IndividualValidatorPerformance;
function {:inline} $Update'$1_stake_IndividualValidatorPerformance'_successful_proposals(s: $1_stake_IndividualValidatorPerformance, x: int): $1_stake_IndividualValidatorPerformance {
    $1_stake_IndividualValidatorPerformance(x, $failed_proposals#$1_stake_IndividualValidatorPerformance(s))
}
function {:inline} $Update'$1_stake_IndividualValidatorPerformance'_failed_proposals(s: $1_stake_IndividualValidatorPerformance, x: int): $1_stake_IndividualValidatorPerformance {
    $1_stake_IndividualValidatorPerformance($successful_proposals#$1_stake_IndividualValidatorPerformance(s), x)
}
function $IsValid'$1_stake_IndividualValidatorPerformance'(s: $1_stake_IndividualValidatorPerformance): bool {
    $IsValid'u64'($successful_proposals#$1_stake_IndividualValidatorPerformance(s))
      && $IsValid'u64'($failed_proposals#$1_stake_IndividualValidatorPerformance(s))
}
function {:inline} $IsEqual'$1_stake_IndividualValidatorPerformance'(s1: $1_stake_IndividualValidatorPerformance, s2: $1_stake_IndividualValidatorPerformance): bool {
    s1 == s2
}

// struct stake::JoinValidatorSetEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:240:5+83
type {:datatype} $1_stake_JoinValidatorSetEvent;
function {:constructor} $1_stake_JoinValidatorSetEvent($pool_address: int): $1_stake_JoinValidatorSetEvent;
function {:inline} $Update'$1_stake_JoinValidatorSetEvent'_pool_address(s: $1_stake_JoinValidatorSetEvent, x: int): $1_stake_JoinValidatorSetEvent {
    $1_stake_JoinValidatorSetEvent(x)
}
function $IsValid'$1_stake_JoinValidatorSetEvent'(s: $1_stake_JoinValidatorSetEvent): bool {
    $IsValid'address'($pool_address#$1_stake_JoinValidatorSetEvent(s))
}
function {:inline} $IsEqual'$1_stake_JoinValidatorSetEvent'(s1: $1_stake_JoinValidatorSetEvent, s2: $1_stake_JoinValidatorSetEvent): bool {
    s1 == s2
}

// struct stake::LeaveValidatorSetEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:259:5+84
type {:datatype} $1_stake_LeaveValidatorSetEvent;
function {:constructor} $1_stake_LeaveValidatorSetEvent($pool_address: int): $1_stake_LeaveValidatorSetEvent;
function {:inline} $Update'$1_stake_LeaveValidatorSetEvent'_pool_address(s: $1_stake_LeaveValidatorSetEvent, x: int): $1_stake_LeaveValidatorSetEvent {
    $1_stake_LeaveValidatorSetEvent(x)
}
function $IsValid'$1_stake_LeaveValidatorSetEvent'(s: $1_stake_LeaveValidatorSetEvent): bool {
    $IsValid'address'($pool_address#$1_stake_LeaveValidatorSetEvent(s))
}
function {:inline} $IsEqual'$1_stake_LeaveValidatorSetEvent'(s1: $1_stake_LeaveValidatorSetEvent, s2: $1_stake_LeaveValidatorSetEvent): bool {
    s1 == s2
}

// struct stake::OwnerCapability at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:100:5+76
type {:datatype} $1_stake_OwnerCapability;
function {:constructor} $1_stake_OwnerCapability($pool_address: int): $1_stake_OwnerCapability;
function {:inline} $Update'$1_stake_OwnerCapability'_pool_address(s: $1_stake_OwnerCapability, x: int): $1_stake_OwnerCapability {
    $1_stake_OwnerCapability(x)
}
function $IsValid'$1_stake_OwnerCapability'(s: $1_stake_OwnerCapability): bool {
    $IsValid'address'($pool_address#$1_stake_OwnerCapability(s))
}
function {:inline} $IsEqual'$1_stake_OwnerCapability'(s1: $1_stake_OwnerCapability, s2: $1_stake_OwnerCapability): bool {
    s1 == s2
}
var $1_stake_OwnerCapability_$memory: $Memory $1_stake_OwnerCapability;

// struct stake::ReactivateStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:215:5+103
type {:datatype} $1_stake_ReactivateStakeEvent;
function {:constructor} $1_stake_ReactivateStakeEvent($pool_address: int, $amount: int): $1_stake_ReactivateStakeEvent;
function {:inline} $Update'$1_stake_ReactivateStakeEvent'_pool_address(s: $1_stake_ReactivateStakeEvent, x: int): $1_stake_ReactivateStakeEvent {
    $1_stake_ReactivateStakeEvent(x, $amount#$1_stake_ReactivateStakeEvent(s))
}
function {:inline} $Update'$1_stake_ReactivateStakeEvent'_amount(s: $1_stake_ReactivateStakeEvent, x: int): $1_stake_ReactivateStakeEvent {
    $1_stake_ReactivateStakeEvent($pool_address#$1_stake_ReactivateStakeEvent(s), x)
}
function $IsValid'$1_stake_ReactivateStakeEvent'(s: $1_stake_ReactivateStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_ReactivateStakeEvent(s))
      && $IsValid'u64'($amount#$1_stake_ReactivateStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_ReactivateStakeEvent'(s1: $1_stake_ReactivateStakeEvent, s2: $1_stake_ReactivateStakeEvent): bool {
    s1 == s2
}

// struct stake::RegisterValidatorCandidateEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:200:5+93
type {:datatype} $1_stake_RegisterValidatorCandidateEvent;
function {:constructor} $1_stake_RegisterValidatorCandidateEvent($pool_address: int): $1_stake_RegisterValidatorCandidateEvent;
function {:inline} $Update'$1_stake_RegisterValidatorCandidateEvent'_pool_address(s: $1_stake_RegisterValidatorCandidateEvent, x: int): $1_stake_RegisterValidatorCandidateEvent {
    $1_stake_RegisterValidatorCandidateEvent(x)
}
function $IsValid'$1_stake_RegisterValidatorCandidateEvent'(s: $1_stake_RegisterValidatorCandidateEvent): bool {
    $IsValid'address'($pool_address#$1_stake_RegisterValidatorCandidateEvent(s))
}
function {:inline} $IsEqual'$1_stake_RegisterValidatorCandidateEvent'(s1: $1_stake_RegisterValidatorCandidateEvent, s2: $1_stake_RegisterValidatorCandidateEvent): bool {
    s1 == s2
}

// struct stake::RotateConsensusKeyEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:220:5+169
type {:datatype} $1_stake_RotateConsensusKeyEvent;
function {:constructor} $1_stake_RotateConsensusKeyEvent($pool_address: int, $old_consensus_pubkey: Vec (int), $new_consensus_pubkey: Vec (int)): $1_stake_RotateConsensusKeyEvent;
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_pool_address(s: $1_stake_RotateConsensusKeyEvent, x: int): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent(x, $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s), $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_old_consensus_pubkey(s: $1_stake_RotateConsensusKeyEvent, x: Vec (int)): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent($pool_address#$1_stake_RotateConsensusKeyEvent(s), x, $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_new_consensus_pubkey(s: $1_stake_RotateConsensusKeyEvent, x: Vec (int)): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent($pool_address#$1_stake_RotateConsensusKeyEvent(s), $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s), x)
}
function $IsValid'$1_stake_RotateConsensusKeyEvent'(s: $1_stake_RotateConsensusKeyEvent): bool {
    $IsValid'address'($pool_address#$1_stake_RotateConsensusKeyEvent(s))
      && $IsValid'vec'u8''($old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
      && $IsValid'vec'u8''($new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $IsEqual'$1_stake_RotateConsensusKeyEvent'(s1: $1_stake_RotateConsensusKeyEvent, s2: $1_stake_RotateConsensusKeyEvent): bool {
    $IsEqual'address'($pool_address#$1_stake_RotateConsensusKeyEvent(s1), $pool_address#$1_stake_RotateConsensusKeyEvent(s2))
    && $IsEqual'vec'u8''($old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s1), $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s2))
    && $IsEqual'vec'u8''($new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s1), $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s2))}

// struct stake::SetOperatorEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:204:5+140
type {:datatype} $1_stake_SetOperatorEvent;
function {:constructor} $1_stake_SetOperatorEvent($pool_address: int, $old_operator: int, $new_operator: int): $1_stake_SetOperatorEvent;
function {:inline} $Update'$1_stake_SetOperatorEvent'_pool_address(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent(x, $old_operator#$1_stake_SetOperatorEvent(s), $new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $Update'$1_stake_SetOperatorEvent'_old_operator(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent($pool_address#$1_stake_SetOperatorEvent(s), x, $new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $Update'$1_stake_SetOperatorEvent'_new_operator(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent($pool_address#$1_stake_SetOperatorEvent(s), $old_operator#$1_stake_SetOperatorEvent(s), x)
}
function $IsValid'$1_stake_SetOperatorEvent'(s: $1_stake_SetOperatorEvent): bool {
    $IsValid'address'($pool_address#$1_stake_SetOperatorEvent(s))
      && $IsValid'address'($old_operator#$1_stake_SetOperatorEvent(s))
      && $IsValid'address'($new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $IsEqual'$1_stake_SetOperatorEvent'(s1: $1_stake_SetOperatorEvent, s2: $1_stake_SetOperatorEvent): bool {
    s1 == s2
}

// struct stake::StakePool at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:115:5+1829
type {:datatype} $1_stake_StakePool;
function {:constructor} $1_stake_StakePool($active: $1_coin_Coin'$1_aptos_coin_AptosCoin', $inactive: $1_coin_Coin'$1_aptos_coin_AptosCoin', $pending_active: $1_coin_Coin'$1_aptos_coin_AptosCoin', $pending_inactive: $1_coin_Coin'$1_aptos_coin_AptosCoin', $locked_until_secs: int, $operator_address: int, $delegated_voter: int, $initialize_validator_events: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', $set_operator_events: $1_event_EventHandle'$1_stake_SetOperatorEvent', $add_stake_events: $1_event_EventHandle'$1_stake_AddStakeEvent', $reactivate_stake_events: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', $rotate_consensus_key_events: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', $update_network_and_fullnode_addresses_events: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', $increase_lockup_events: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', $join_validator_set_events: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', $distribute_rewards_events: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', $unlock_stake_events: $1_event_EventHandle'$1_stake_UnlockStakeEvent', $withdraw_stake_events: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', $leave_validator_set_events: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): $1_stake_StakePool;
function {:inline} $Update'$1_stake_StakePool'_active(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool(x, $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_inactive(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), x, $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_pending_active(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), x, $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_pending_inactive(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), x, $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_locked_until_secs(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), x, $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_operator_address(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), x, $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_delegated_voter(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), x, $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_initialize_validator_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), x, $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_set_operator_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_SetOperatorEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), x, $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_add_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_AddStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), x, $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_reactivate_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), x, $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_rotate_consensus_key_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), x, $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_update_network_and_fullnode_addresses_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), x, $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_increase_lockup_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), x, $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_join_validator_set_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), x, $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_distribute_rewards_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), x, $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_unlock_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), x, $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_withdraw_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), x, $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_leave_validator_set_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), x)
}
function $IsValid'$1_stake_StakePool'(s: $1_stake_StakePool): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($active#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($inactive#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($pending_active#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($pending_inactive#$1_stake_StakePool(s))
      && $IsValid'u64'($locked_until_secs#$1_stake_StakePool(s))
      && $IsValid'address'($operator_address#$1_stake_StakePool(s))
      && $IsValid'address'($delegated_voter#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($initialize_validator_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''($set_operator_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''($add_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($reactivate_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($rotate_consensus_key_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($update_network_and_fullnode_addresses_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($increase_lockup_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($join_validator_set_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($distribute_rewards_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($unlock_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($withdraw_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $IsEqual'$1_stake_StakePool'(s1: $1_stake_StakePool, s2: $1_stake_StakePool): bool {
    s1 == s2
}
var $1_stake_StakePool_$memory: $Memory $1_stake_StakePool;

// struct stake::UnlockStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:249:5+108
type {:datatype} $1_stake_UnlockStakeEvent;
function {:constructor} $1_stake_UnlockStakeEvent($pool_address: int, $amount_unlocked: int): $1_stake_UnlockStakeEvent;
function {:inline} $Update'$1_stake_UnlockStakeEvent'_pool_address(s: $1_stake_UnlockStakeEvent, x: int): $1_stake_UnlockStakeEvent {
    $1_stake_UnlockStakeEvent(x, $amount_unlocked#$1_stake_UnlockStakeEvent(s))
}
function {:inline} $Update'$1_stake_UnlockStakeEvent'_amount_unlocked(s: $1_stake_UnlockStakeEvent, x: int): $1_stake_UnlockStakeEvent {
    $1_stake_UnlockStakeEvent($pool_address#$1_stake_UnlockStakeEvent(s), x)
}
function $IsValid'$1_stake_UnlockStakeEvent'(s: $1_stake_UnlockStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_UnlockStakeEvent(s))
      && $IsValid'u64'($amount_unlocked#$1_stake_UnlockStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_UnlockStakeEvent'(s1: $1_stake_UnlockStakeEvent, s2: $1_stake_UnlockStakeEvent): bool {
    s1 == s2
}

// struct stake::UpdateNetworkAndFullnodeAddressesEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:226:5+274
type {:datatype} $1_stake_UpdateNetworkAndFullnodeAddressesEvent;
function {:constructor} $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address: int, $old_network_addresses: Vec (int), $new_network_addresses: Vec (int), $old_fullnode_addresses: Vec (int), $new_fullnode_addresses: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent;
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_pool_address(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: int): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent(x, $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_old_network_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_new_network_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_old_fullnode_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_new_fullnode_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x)
}
function $IsValid'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent): bool {
    $IsValid'address'($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $IsEqual'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s1: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, s2: $1_stake_UpdateNetworkAndFullnodeAddressesEvent): bool {
    $IsEqual'address'($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))}

// struct stake::ValidatorConfig at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:151:5+372
type {:datatype} $1_stake_ValidatorConfig;
function {:constructor} $1_stake_ValidatorConfig($consensus_pubkey: Vec (int), $network_addresses: Vec (int), $fullnode_addresses: Vec (int), $validator_index: int): $1_stake_ValidatorConfig;
function {:inline} $Update'$1_stake_ValidatorConfig'_consensus_pubkey(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig(x, $network_addresses#$1_stake_ValidatorConfig(s), $fullnode_addresses#$1_stake_ValidatorConfig(s), $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_network_addresses(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), x, $fullnode_addresses#$1_stake_ValidatorConfig(s), $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_fullnode_addresses(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), $network_addresses#$1_stake_ValidatorConfig(s), x, $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_validator_index(s: $1_stake_ValidatorConfig, x: int): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), $network_addresses#$1_stake_ValidatorConfig(s), $fullnode_addresses#$1_stake_ValidatorConfig(s), x)
}
function $IsValid'$1_stake_ValidatorConfig'(s: $1_stake_ValidatorConfig): bool {
    $IsValid'vec'u8''($consensus_pubkey#$1_stake_ValidatorConfig(s))
      && $IsValid'vec'u8''($network_addresses#$1_stake_ValidatorConfig(s))
      && $IsValid'vec'u8''($fullnode_addresses#$1_stake_ValidatorConfig(s))
      && $IsValid'u64'($validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorConfig'(s1: $1_stake_ValidatorConfig, s2: $1_stake_ValidatorConfig): bool {
    $IsEqual'vec'u8''($consensus_pubkey#$1_stake_ValidatorConfig(s1), $consensus_pubkey#$1_stake_ValidatorConfig(s2))
    && $IsEqual'vec'u8''($network_addresses#$1_stake_ValidatorConfig(s1), $network_addresses#$1_stake_ValidatorConfig(s2))
    && $IsEqual'vec'u8''($fullnode_addresses#$1_stake_ValidatorConfig(s1), $fullnode_addresses#$1_stake_ValidatorConfig(s2))
    && $IsEqual'u64'($validator_index#$1_stake_ValidatorConfig(s1), $validator_index#$1_stake_ValidatorConfig(s2))}
var $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig;

// struct stake::ValidatorFees at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:265:5+89
type {:datatype} $1_stake_ValidatorFees;
function {:constructor} $1_stake_ValidatorFees($fees_table: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')): $1_stake_ValidatorFees;
function {:inline} $Update'$1_stake_ValidatorFees'_fees_table(s: $1_stake_ValidatorFees, x: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin')): $1_stake_ValidatorFees {
    $1_stake_ValidatorFees(x)
}
function $IsValid'$1_stake_ValidatorFees'(s: $1_stake_ValidatorFees): bool {
    $IsValid'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''($fees_table#$1_stake_ValidatorFees(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorFees'(s1: $1_stake_ValidatorFees, s2: $1_stake_ValidatorFees): bool {
    s1 == s2
}
var $1_stake_ValidatorFees_$memory: $Memory $1_stake_ValidatorFees;

// struct stake::ValidatorInfo at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:161:5+133
type {:datatype} $1_stake_ValidatorInfo;
function {:constructor} $1_stake_ValidatorInfo($addr: int, $voting_power: int, $config: $1_stake_ValidatorConfig): $1_stake_ValidatorInfo;
function {:inline} $Update'$1_stake_ValidatorInfo'_addr(s: $1_stake_ValidatorInfo, x: int): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo(x, $voting_power#$1_stake_ValidatorInfo(s), $config#$1_stake_ValidatorInfo(s))
}
function {:inline} $Update'$1_stake_ValidatorInfo'_voting_power(s: $1_stake_ValidatorInfo, x: int): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo($addr#$1_stake_ValidatorInfo(s), x, $config#$1_stake_ValidatorInfo(s))
}
function {:inline} $Update'$1_stake_ValidatorInfo'_config(s: $1_stake_ValidatorInfo, x: $1_stake_ValidatorConfig): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo($addr#$1_stake_ValidatorInfo(s), $voting_power#$1_stake_ValidatorInfo(s), x)
}
function $IsValid'$1_stake_ValidatorInfo'(s: $1_stake_ValidatorInfo): bool {
    $IsValid'address'($addr#$1_stake_ValidatorInfo(s))
      && $IsValid'u64'($voting_power#$1_stake_ValidatorInfo(s))
      && $IsValid'$1_stake_ValidatorConfig'($config#$1_stake_ValidatorInfo(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorInfo'(s1: $1_stake_ValidatorInfo, s2: $1_stake_ValidatorInfo): bool {
    $IsEqual'address'($addr#$1_stake_ValidatorInfo(s1), $addr#$1_stake_ValidatorInfo(s2))
    && $IsEqual'u64'($voting_power#$1_stake_ValidatorInfo(s1), $voting_power#$1_stake_ValidatorInfo(s2))
    && $IsEqual'$1_stake_ValidatorConfig'($config#$1_stake_ValidatorInfo(s1), $config#$1_stake_ValidatorInfo(s2))}

// struct stake::ValidatorPerformance at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:196:5+103
type {:datatype} $1_stake_ValidatorPerformance;
function {:constructor} $1_stake_ValidatorPerformance($validators: Vec ($1_stake_IndividualValidatorPerformance)): $1_stake_ValidatorPerformance;
function {:inline} $Update'$1_stake_ValidatorPerformance'_validators(s: $1_stake_ValidatorPerformance, x: Vec ($1_stake_IndividualValidatorPerformance)): $1_stake_ValidatorPerformance {
    $1_stake_ValidatorPerformance(x)
}
function $IsValid'$1_stake_ValidatorPerformance'(s: $1_stake_ValidatorPerformance): bool {
    $IsValid'vec'$1_stake_IndividualValidatorPerformance''($validators#$1_stake_ValidatorPerformance(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorPerformance'(s1: $1_stake_ValidatorPerformance, s2: $1_stake_ValidatorPerformance): bool {
    $IsEqual'vec'$1_stake_IndividualValidatorPerformance''($validators#$1_stake_ValidatorPerformance(s1), $validators#$1_stake_ValidatorPerformance(s2))}
var $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance;

// struct stake::ValidatorSet at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:171:5+558
type {:datatype} $1_stake_ValidatorSet;
function {:constructor} $1_stake_ValidatorSet($consensus_scheme: int, $active_validators: Vec ($1_stake_ValidatorInfo), $pending_inactive: Vec ($1_stake_ValidatorInfo), $pending_active: Vec ($1_stake_ValidatorInfo), $total_voting_power: int, $total_joining_power: int): $1_stake_ValidatorSet;
function {:inline} $Update'$1_stake_ValidatorSet'_consensus_scheme(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet(x, $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_active_validators(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), x, $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_pending_inactive(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), x, $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_pending_active(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), x, $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_total_voting_power(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), x, $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_total_joining_power(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), x)
}
function $IsValid'$1_stake_ValidatorSet'(s: $1_stake_ValidatorSet): bool {
    $IsValid'u8'($consensus_scheme#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($active_validators#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($pending_inactive#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($pending_active#$1_stake_ValidatorSet(s))
      && $IsValid'u128'($total_voting_power#$1_stake_ValidatorSet(s))
      && $IsValid'u128'($total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorSet'(s1: $1_stake_ValidatorSet, s2: $1_stake_ValidatorSet): bool {
    $IsEqual'u8'($consensus_scheme#$1_stake_ValidatorSet(s1), $consensus_scheme#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($active_validators#$1_stake_ValidatorSet(s1), $active_validators#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($pending_inactive#$1_stake_ValidatorSet(s1), $pending_inactive#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($pending_active#$1_stake_ValidatorSet(s1), $pending_active#$1_stake_ValidatorSet(s2))
    && $IsEqual'u128'($total_voting_power#$1_stake_ValidatorSet(s1), $total_voting_power#$1_stake_ValidatorSet(s2))
    && $IsEqual'u128'($total_joining_power#$1_stake_ValidatorSet(s1), $total_joining_power#$1_stake_ValidatorSet(s2))}
var $1_stake_ValidatorSet_$memory: $Memory $1_stake_ValidatorSet;

// struct stake::WithdrawStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:254:5+111
type {:datatype} $1_stake_WithdrawStakeEvent;
function {:constructor} $1_stake_WithdrawStakeEvent($pool_address: int, $amount_withdrawn: int): $1_stake_WithdrawStakeEvent;
function {:inline} $Update'$1_stake_WithdrawStakeEvent'_pool_address(s: $1_stake_WithdrawStakeEvent, x: int): $1_stake_WithdrawStakeEvent {
    $1_stake_WithdrawStakeEvent(x, $amount_withdrawn#$1_stake_WithdrawStakeEvent(s))
}
function {:inline} $Update'$1_stake_WithdrawStakeEvent'_amount_withdrawn(s: $1_stake_WithdrawStakeEvent, x: int): $1_stake_WithdrawStakeEvent {
    $1_stake_WithdrawStakeEvent($pool_address#$1_stake_WithdrawStakeEvent(s), x)
}
function $IsValid'$1_stake_WithdrawStakeEvent'(s: $1_stake_WithdrawStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_WithdrawStakeEvent(s))
      && $IsValid'u64'($amount_withdrawn#$1_stake_WithdrawStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_WithdrawStakeEvent'(s1: $1_stake_WithdrawStakeEvent, s2: $1_stake_WithdrawStakeEvent): bool {
    s1 == s2
}

// fun stake::initialize [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+545
procedure {:timeLimit 40} $1_stake_initialize$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: Vec ($1_stake_ValidatorInfo);
    var $t2: Vec ($1_stake_ValidatorInfo);
    var $t3: Vec ($1_stake_ValidatorInfo);
    var $t4: $signer;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: Vec ($1_stake_ValidatorInfo);
    var $t9: Vec ($1_stake_ValidatorInfo);
    var $t10: Vec ($1_stake_ValidatorInfo);
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $1_stake_ValidatorSet;
    var $t15: Vec ($1_stake_IndividualValidatorPerformance);
    var $t16: $1_stake_ValidatorPerformance;
    var $t0: $signer;
    var $temp_0'signer': $signer;
    var $1_stake_ValidatorSet_$memory#37: $Memory $1_stake_ValidatorSet;
    var $1_stake_ValidatorPerformance_$memory#38: $Memory $1_stake_ValidatorPerformance;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    assume {:print "$at(2,18370,18371)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+545
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+545
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+545
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Identical($t5, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:33:9+53
    assume {:print "$at(3,1517,1570)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // @38 := save_mem(stake::ValidatorPerformance) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    assume {:print "$at(2,18370,18371)"} true;
    $1_stake_ValidatorPerformance_$memory#38 := $1_stake_ValidatorPerformance_$memory;

    // @37 := save_mem(stake::ValidatorSet) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    $1_stake_ValidatorSet_$memory#37 := $1_stake_ValidatorSet_$memory;

    // trace_local[aptos_framework]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:405:5+1
    assume {:print "$track_local(38,28,0):", $t0} $t0 == $t0;

    // opaque begin: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
    assume {:print "$at(2,18436,18493)"} true;

    // assume Identical($t6, Neq<address>(signer::$address_of($t0), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
    assume ($t6 == !$IsEqual'address'($1_signer_$address_of($t0), 1));

    // if ($t6) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
L4:

    // assume And(Neq<address>(signer::$address_of($t0), 1), Eq(5, $t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
    assume {:print "$at(2,18436,18493)"} true;
    assume (!$IsEqual'address'($1_signer_$address_of($t0), 1) && $IsEqual'num'(5, $t7));

    // trace_abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
    assume {:print "$at(2,18436,18493)"} true;
    assume {:print "$track_abort(38,28):", $t7} $t7 == $t7;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
    goto L2;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
L3:

    // opaque end: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:406:9+57
    assume {:print "$at(2,18436,18493)"} true;

    // $t8 := vector::empty<stake::ValidatorInfo>() on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:410:32+15
    assume {:print "$at(2,18608,18623)"} true;
    call $t8 := $1_vector_empty'$1_stake_ValidatorInfo'();
    if ($abort_flag) {
        assume {:print "$at(2,18608,18623)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,28):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t9 := vector::empty<stake::ValidatorInfo>() on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:411:29+15
    assume {:print "$at(2,18653,18668)"} true;
    call $t9 := $1_vector_empty'$1_stake_ValidatorInfo'();
    if ($abort_flag) {
        assume {:print "$at(2,18653,18668)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,28):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t10 := vector::empty<stake::ValidatorInfo>() on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:412:31+15
    assume {:print "$at(2,18700,18715)"} true;
    call $t10 := $1_vector_empty'$1_stake_ValidatorInfo'();
    if ($abort_flag) {
        assume {:print "$at(2,18700,18715)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,28):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t11 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:409:31+1
    assume {:print "$at(2,18574,18575)"} true;
    $t11 := 0;
    assume $IsValid'u8'($t11);

    // $t12 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:413:33+1
    assume {:print "$at(2,18749,18750)"} true;
    $t12 := 0;
    assume $IsValid'u128'($t12);

    // $t13 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:414:34+1
    assume {:print "$at(2,18785,18786)"} true;
    $t13 := 0;
    assume $IsValid'u128'($t13);

    // $t14 := pack stake::ValidatorSet($t11, $t8, $t10, $t9, $t12, $t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:408:34+268
    assume {:print "$at(2,18529,18797)"} true;
    $t14 := $1_stake_ValidatorSet($t11, $t8, $t10, $t9, $t12, $t13);

    // move_to<stake::ValidatorSet>($t14, $t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:408:9+7
    if ($ResourceExists($1_stake_ValidatorSet_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $addr#$signer($t0), $t14);
    }
    if ($abort_flag) {
        assume {:print "$at(2,18504,18511)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,28):", $t7} $t7 == $t7;
        goto L2;
    }

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // $t15 := vector::empty<stake::IndividualValidatorPerformance>() on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:418:25+15
    assume {:print "$at(2,18881,18896)"} true;
    call $t15 := $1_vector_empty'$1_stake_IndividualValidatorPerformance'();
    if ($abort_flag) {
        assume {:print "$at(2,18881,18896)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,28):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t16 := pack stake::ValidatorPerformance($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:417:34+73
    assume {:print "$at(2,18834,18907)"} true;
    $t16 := $1_stake_ValidatorPerformance($t15);

    // move_to<stake::ValidatorPerformance>($t16, $t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:417:9+7
    if ($ResourceExists($1_stake_ValidatorPerformance_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_ValidatorPerformance_$memory := $ResourceUpdate($1_stake_ValidatorPerformance_$memory, $addr#$signer($t0), $t16);
    }
    if ($abort_flag) {
        assume {:print "$at(2,18809,18816)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,28):", $t7} $t7 == $t7;
        goto L2;
    }

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume {:print "$at(3,548,652)"} true;
    assert {:msg "assert_failed(3,548,652): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:420:5+1
    assume {:print "$at(2,18914,18915)"} true;
L1:

    // assert Not(Not(system_addresses::$is_aptos_framework_address[]($t5))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:34:9+68
    assume {:print "$at(3,1579,1647)"} true;
    assert {:msg "assert_failed(3,1579,1647): function does not abort under this condition"}
      !!$1_system_addresses_$is_aptos_framework_address($t5);

    // assert Not(exists[@37]<stake::ValidatorSet>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:35:9+43
    assume {:print "$at(3,1656,1699)"} true;
    assert {:msg "assert_failed(3,1656,1699): function does not abort under this condition"}
      !$ResourceExists($1_stake_ValidatorSet_$memory#37, $t5);

    // assert Not(exists[@38]<stake::ValidatorPerformance>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:36:9+51
    assume {:print "$at(3,1708,1759)"} true;
    assert {:msg "assert_failed(3,1708,1759): function does not abort under this condition"}
      !$ResourceExists($1_stake_ValidatorPerformance_$memory#38, $t5);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:36:9+51
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:420:5+1
    assume {:print "$at(2,18914,18915)"} true;
L2:

    // assert Or(Or(Not(system_addresses::$is_aptos_framework_address[]($t5)), exists[@37]<stake::ValidatorSet>($t5)), exists[@38]<stake::ValidatorPerformance>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:32:5+300
    assume {:print "$at(3,1465,1765)"} true;
    assert {:msg "assert_failed(3,1465,1765): abort not covered by any of the `aborts_if` clauses"}
      ((!$1_system_addresses_$is_aptos_framework_address($t5) || $ResourceExists($1_stake_ValidatorSet_$memory#37, $t5)) || $ResourceExists($1_stake_ValidatorPerformance_$memory#38, $t5));

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:32:5+300
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun stake::withdraw [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+448
procedure {:timeLimit 40} $1_stake_withdraw$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_stake_OwnerCapability;
    var $t7: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume {:print "$at(2,40860,40861)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume $IsValid'u64'($t1);

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+448
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+448
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+448
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+448
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume {:print "$track_local(38,55,0):", $t0} $t0 == $t0;

    // trace_local[withdraw_amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:875:5+1
    assume {:print "$track_local(38,55,1):", $t1} $t1 == $t1;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:879:29+25
    assume {:print "$at(2,41026,41051)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,41026,41051)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,55):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[owner_address]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:879:13+13
    assume {:print "$track_local(38,55,3):", $t4} $t4 == $t4;

    // stake::assert_owner_cap_exists($t4) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:880:9+38
    assume {:print "$at(2,41061,41099)"} true;
    call $1_stake_assert_owner_cap_exists($t4);
    if ($abort_flag) {
        assume {:print "$at(2,41061,41099)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,55):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := get_global<stake::OwnerCapability>($t4) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:881:29+13
    assume {:print "$at(2,41129,41142)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($1_stake_OwnerCapability_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(2,41129,41142)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,55):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t7 := stake::withdraw_with_cap($t6, $t1) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:882:21+49
    assume {:print "$at(2,41196,41245)"} true;
    call $t7 := $1_stake_withdraw_with_cap($t6, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,41196,41245)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,55):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[coins]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:882:13+5
    assume {:print "$track_local(38,55,2):", $t7} $t7 == $t7;

    // coin::deposit<aptos_coin::AptosCoin>($t4, $t7) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:883:9+46
    assume {:print "$at(2,41255,41301)"} true;
    call $1_coin_deposit'$1_aptos_coin_AptosCoin'($t4, $t7);
    if ($abort_flag) {
        assume {:print "$at(2,41255,41301)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,55):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:884:5+1
    assume {:print "$at(2,41307,41308)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:884:5+1
    assume {:print "$at(2,41307,41308)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:884:5+1
L2:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:884:5+1
    assume {:print "$at(2,41307,41308)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun stake::add_stake [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
procedure {:inline 1} $1_stake_add_stake(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t6: int;
    var $t7: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t8: int;
    var $t9: int;
    var $t10: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t11: int;
    var $t12: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t13: int;
    var $t14: int;
    var $t15: $1_stake_ValidatorSet;
    var $t16: $1_staking_config_StakingConfig;
    var $t17: int;
    var $t18: bool;
    var $t19: $1_stake_StakePool;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume {:print "$at(2,27709,27710)"} true;
    assume {:print "$track_local(38,0,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume {:print "$track_local(38,0,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:610:29+25
    assume {:print "$at(2,27845,27870)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,27845,27870)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:610:13+13
    assume {:print "$track_local(38,0,2):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:611:9+38
    assume {:print "$at(2,27880,27918)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(2,27880,27918)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_global<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:612:29+13
    assume {:print "$at(2,27948,27961)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,27948,27961)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t6, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:353:9+47
    assume {:print "$at(95,14753,14800)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // assume Identical($t7, global<coin::CoinStore<aptos_coin::AptosCoin>>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:354:9+59
    assume {:print "$at(95,14809,14868)"} true;
    assume ($t7 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t6));

    // assume Identical($t8, select coin::Coin.value(select coin::CoinStore.coin($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:355:9+36
    assume {:print "$at(95,14877,14913)"} true;
    assume ($t8 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t7)));

    // assume Identical($t9, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:363:9+47
    assume {:print "$at(95,15207,15254)"} true;
    assume ($t9 == $1_signer_$address_of($t0));

    // assume Identical($t10, global<coin::CoinStore<aptos_coin::AptosCoin>>($t9)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:364:9+59
    assume {:print "$at(95,15263,15322)"} true;
    assume ($t10 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t9));

    // assume Identical($t11, select coin::Coin.value(select coin::CoinStore.coin($t10))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:365:9+36
    assume {:print "$at(95,15331,15367)"} true;
    assume ($t11 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t10)));

    // $t12 := coin::withdraw<aptos_coin::AptosCoin>($t0, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:613:43+40
    assume {:print "$at(2,28037,28077)"} true;
    call $t12 := $1_coin_withdraw'$1_aptos_coin_AptosCoin'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,28037,28077)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t13, select stake::OwnerCapability.pool_address($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:257:9+42
    assume {:print "$at(3,11196,11238)"} true;
    assume ($t13 == $pool_address#$1_stake_OwnerCapability($t5));

    // assume Identical($t14, select coin::Coin.value($t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:260:9+25
    assume {:print "$at(3,11300,11325)"} true;
    assume ($t14 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t12));

    // assume Identical($t15, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:261:9+59
    assume {:print "$at(3,11334,11393)"} true;
    assume ($t15 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // assume Identical($t16, global<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:262:9+69
    assume {:print "$at(3,11402,11471)"} true;
    assume ($t16 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t17, select staking_config::StakingConfig.voting_power_increase_limit($t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:263:9+69
    assume {:print "$at(3,11480,11549)"} true;
    assume ($t17 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t16));

    // assume Identical($t18, And(Neq<u64>($t14, 0), Or(stake::spec_contains(select stake::ValidatorSet.active_validators($t15), $t13), stake::spec_contains(select stake::ValidatorSet.pending_active($t15), $t13)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:265:9+232
    assume {:print "$at(3,11636,11868)"} true;
    assume ($t18 == (!$IsEqual'u64'($t14, 0) && ($1_stake_spec_contains($active_validators#$1_stake_ValidatorSet($t15), $t13) || $1_stake_spec_contains($pending_active#$1_stake_ValidatorSet($t15), $t13))));

    // assume Identical($t19, global<stake::StakePool>($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:274:9+49
    assume {:print "$at(3,12520,12569)"} true;
    assume ($t19 == $ResourceValue($1_stake_StakePool_$memory, $t13));

    // assume Identical($t20, select coin::Coin.value(select stake::StakePool.pending_active($t19))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:276:9+59
    assume {:print "$at(3,12646,12705)"} true;
    assume ($t20 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t19)));

    // assume Identical($t21, select coin::Coin.value(select stake::StakePool.active($t19))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:277:9+43
    assume {:print "$at(3,12714,12757)"} true;
    assume ($t21 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t19)));

    // assume Identical($t22, select staking_config::StakingConfig.maximum_stake($t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:283:9+41
    assume {:print "$at(3,13295,13336)"} true;
    assume ($t22 == $maximum_stake#$1_staking_config_StakingConfig($t16));

    // assume Identical($t23, select coin::Coin.value(select stake::StakePool.pending_inactive($t19))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:284:9+63
    assume {:print "$at(3,13345,13408)"} true;
    assume ($t23 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t19)));

    // assume Identical($t24, Add(Add($t20, $t21), $t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:285:9+91
    assume {:print "$at(3,13417,13508)"} true;
    assume ($t24 == (($t20 + $t21) + $t23));

    // assume Identical($t25, Add($t24, $t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:286:9+52
    assume {:print "$at(3,13517,13569)"} true;
    assume ($t25 == ($t24 + $t14));

    // stake::add_stake_with_cap($t5, $t12) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:613:9+75
    assume {:print "$at(2,28003,28078)"} true;
    call $1_stake_add_stake_with_cap($t5, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,28003,28078)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:614:5+1
    assume {:print "$at(2,28084,28085)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:614:5+1
    assume {:print "$at(2,28084,28085)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:614:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:614:5+1
    assume {:print "$at(2,28084,28085)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::add_stake [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
procedure {:timeLimit 40} $1_stake_add_stake$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t6: int;
    var $t7: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t8: int;
    var $t9: int;
    var $t10: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t11: int;
    var $t12: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t13: int;
    var $t14: int;
    var $t15: $1_stake_ValidatorSet;
    var $t16: $1_staking_config_StakingConfig;
    var $t17: int;
    var $t18: bool;
    var $t19: $1_stake_StakePool;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume {:print "$at(2,27709,27710)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume $IsValid'u64'($t1);

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingRewardsConfig>(): And(WellFormed($rsc), And(And(And(fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.rewards_rate($rsc), fixed_point64::spec_create_from_u128(1)), fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.min_rewards_rate($rsc), select staking_config::StakingRewardsConfig.rewards_rate($rsc))), Eq<u64>(select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($rsc), 31536000)), Le(fixed_point64::spec_ceil(select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($rsc)), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingRewardsConfig'($rsc) && ((($1_fixed_point64_spec_less_or_equal($rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $1_fixed_point64_spec_create_from_u128(1)) && $1_fixed_point64_spec_less_or_equal($min_rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $rewards_rate#$1_staking_config_StakingRewardsConfig($rsc))) && $IsEqual'u64'($rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($rsc), 31536000)) && ($1_fixed_point64_spec_ceil($rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($rsc)) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+376
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume {:print "$at(2,27709,27710)"} true;
    assume {:print "$track_local(38,0,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:609:5+1
    assume {:print "$track_local(38,0,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:610:29+25
    assume {:print "$at(2,27845,27870)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,27845,27870)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:610:13+13
    assume {:print "$track_local(38,0,2):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:611:9+38
    assume {:print "$at(2,27880,27918)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(2,27880,27918)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_global<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:612:29+13
    assume {:print "$at(2,27948,27961)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,27948,27961)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t6, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:353:9+47
    assume {:print "$at(95,14753,14800)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // assume Identical($t7, global<coin::CoinStore<aptos_coin::AptosCoin>>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:354:9+59
    assume {:print "$at(95,14809,14868)"} true;
    assume ($t7 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t6));

    // assume Identical($t8, select coin::Coin.value(select coin::CoinStore.coin($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:355:9+36
    assume {:print "$at(95,14877,14913)"} true;
    assume ($t8 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t7)));

    // assume Identical($t9, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:363:9+47
    assume {:print "$at(95,15207,15254)"} true;
    assume ($t9 == $1_signer_$address_of($t0));

    // assume Identical($t10, global<coin::CoinStore<aptos_coin::AptosCoin>>($t9)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:364:9+59
    assume {:print "$at(95,15263,15322)"} true;
    assume ($t10 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t9));

    // assume Identical($t11, select coin::Coin.value(select coin::CoinStore.coin($t10))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:365:9+36
    assume {:print "$at(95,15331,15367)"} true;
    assume ($t11 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t10)));

    // $t12 := coin::withdraw<aptos_coin::AptosCoin>($t0, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:613:43+40
    assume {:print "$at(2,28037,28077)"} true;
    call $t12 := $1_coin_withdraw'$1_aptos_coin_AptosCoin'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,28037,28077)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t13, select stake::OwnerCapability.pool_address($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:257:9+42
    assume {:print "$at(3,11196,11238)"} true;
    assume ($t13 == $pool_address#$1_stake_OwnerCapability($t5));

    // assume Identical($t14, select coin::Coin.value($t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:260:9+25
    assume {:print "$at(3,11300,11325)"} true;
    assume ($t14 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t12));

    // assume Identical($t15, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:261:9+59
    assume {:print "$at(3,11334,11393)"} true;
    assume ($t15 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // assume Identical($t16, global<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:262:9+69
    assume {:print "$at(3,11402,11471)"} true;
    assume ($t16 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t17, select staking_config::StakingConfig.voting_power_increase_limit($t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:263:9+69
    assume {:print "$at(3,11480,11549)"} true;
    assume ($t17 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t16));

    // assume Identical($t18, And(Neq<u64>($t14, 0), Or(stake::spec_contains(select stake::ValidatorSet.active_validators($t15), $t13), stake::spec_contains(select stake::ValidatorSet.pending_active($t15), $t13)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:265:9+232
    assume {:print "$at(3,11636,11868)"} true;
    assume ($t18 == (!$IsEqual'u64'($t14, 0) && ($1_stake_spec_contains($active_validators#$1_stake_ValidatorSet($t15), $t13) || $1_stake_spec_contains($pending_active#$1_stake_ValidatorSet($t15), $t13))));

    // assume Identical($t19, global<stake::StakePool>($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:274:9+49
    assume {:print "$at(3,12520,12569)"} true;
    assume ($t19 == $ResourceValue($1_stake_StakePool_$memory, $t13));

    // assume Identical($t20, select coin::Coin.value(select stake::StakePool.pending_active($t19))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:276:9+59
    assume {:print "$at(3,12646,12705)"} true;
    assume ($t20 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t19)));

    // assume Identical($t21, select coin::Coin.value(select stake::StakePool.active($t19))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:277:9+43
    assume {:print "$at(3,12714,12757)"} true;
    assume ($t21 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t19)));

    // assume Identical($t22, select staking_config::StakingConfig.maximum_stake($t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:283:9+41
    assume {:print "$at(3,13295,13336)"} true;
    assume ($t22 == $maximum_stake#$1_staking_config_StakingConfig($t16));

    // assume Identical($t23, select coin::Coin.value(select stake::StakePool.pending_inactive($t19))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:284:9+63
    assume {:print "$at(3,13345,13408)"} true;
    assume ($t23 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t19)));

    // assume Identical($t24, Add(Add($t20, $t21), $t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:285:9+91
    assume {:print "$at(3,13417,13508)"} true;
    assume ($t24 == (($t20 + $t21) + $t23));

    // assume Identical($t25, Add($t24, $t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:286:9+52
    assume {:print "$at(3,13517,13569)"} true;
    assume ($t25 == ($t24 + $t14));

    // assert exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assert {:msg "assert_failed(3,17638,17695): precondition does not hold at this call"}
      $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assert exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assert {:msg "assert_failed(3,17704,17760): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assert exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assert {:msg "assert_failed(3,17769,17817): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assert exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assert {:msg "assert_failed(3,17826,17875): precondition does not hold at this call"}
      $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assert Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assert {:msg "assert_failed(3,17884,18001): precondition does not hold at this call"}
      ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assert {:msg "assert_failed(3,18010,18080): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assert {:msg "assert_failed(3,18089,18138): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // stake::add_stake_with_cap($t5, $t12) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:613:9+75
    assume {:print "$at(2,28003,28078)"} true;
    call $1_stake_add_stake_with_cap($t5, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,28003,28078)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:614:5+1
    assume {:print "$at(2,28084,28085)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:614:5+1
    assume {:print "$at(2,28084,28085)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:614:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:614:5+1
    assume {:print "$at(2,28084,28085)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::add_stake_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
procedure {:inline 1} $1_stake_add_stake_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: bool;
    var $t5: $1_staking_config_StakingConfig;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_stake_StakePool);
    var $t10: $Mutation ($1_stake_ValidatorSet);
    var $t11: int;
    var $t12: int;
    var $t13: $1_stake_ValidatorSet;
    var $t14: $1_staking_config_StakingConfig;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_stake_StakePool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: $Mutation ($1_stake_ValidatorSet);
    var $t31: Vec ($1_stake_ValidatorInfo);
    var $t32: $1_option_Option'u64';
    var $t33: bool;
    var $t34: bool;
    var $t35: Vec ($1_stake_ValidatorInfo);
    var $t36: $1_option_Option'u64';
    var $t37: int;
    var $t38: $1_stake_ValidatorSet;
    var $t39: $1_staking_config_StakingConfig;
    var $t40: int;
    var $t41: $Mutation ($1_stake_StakePool);
    var $t42: bool;
    var $t43: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t44: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t45: $1_staking_config_StakingConfig;
    var $t46: int;
    var $t47: int;
    var $t48: $1_stake_StakePool;
    var $t49: int;
    var $t50: bool;
    var $t51: int;
    var $t52: int;
    var $t53: $Mutation ($1_event_EventHandle'$1_stake_AddStakeEvent');
    var $t54: $1_stake_AddStakeEvent;
    var $t0: $1_stake_OwnerCapability;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t11, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:257:9+42
    assume {:print "$at(3,11196,11238)"} true;
    assume ($t11 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume Identical($t12, select coin::Coin.value($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:260:9+25
    assume {:print "$at(3,11300,11325)"} true;
    assume ($t12 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1));

    // assume Identical($t13, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:261:9+59
    assume {:print "$at(3,11334,11393)"} true;
    assume ($t13 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // assume Identical($t14, global<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:262:9+69
    assume {:print "$at(3,11402,11471)"} true;
    assume ($t14 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t15, select staking_config::StakingConfig.voting_power_increase_limit($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:263:9+69
    assume {:print "$at(3,11480,11549)"} true;
    assume ($t15 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t14));

    // assume Identical($t16, And(Neq<u64>($t12, 0), Or(stake::spec_contains(select stake::ValidatorSet.active_validators($t13), $t11), stake::spec_contains(select stake::ValidatorSet.pending_active($t13), $t11)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:265:9+232
    assume {:print "$at(3,11636,11868)"} true;
    assume ($t16 == (!$IsEqual'u64'($t12, 0) && ($1_stake_spec_contains($active_validators#$1_stake_ValidatorSet($t13), $t11) || $1_stake_spec_contains($pending_active#$1_stake_ValidatorSet($t13), $t11))));

    // assume Identical($t17, global<stake::StakePool>($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:274:9+49
    assume {:print "$at(3,12520,12569)"} true;
    assume ($t17 == $ResourceValue($1_stake_StakePool_$memory, $t11));

    // assume Identical($t18, select coin::Coin.value(select stake::StakePool.pending_active($t17))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:276:9+59
    assume {:print "$at(3,12646,12705)"} true;
    assume ($t18 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t17)));

    // assume Identical($t19, select coin::Coin.value(select stake::StakePool.active($t17))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:277:9+43
    assume {:print "$at(3,12714,12757)"} true;
    assume ($t19 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t17)));

    // assume Identical($t20, select staking_config::StakingConfig.maximum_stake($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:283:9+41
    assume {:print "$at(3,13295,13336)"} true;
    assume ($t20 == $maximum_stake#$1_staking_config_StakingConfig($t14));

    // assume Identical($t21, select coin::Coin.value(select stake::StakePool.pending_inactive($t17))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:284:9+63
    assume {:print "$at(3,13345,13408)"} true;
    assume ($t21 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t17)));

    // assume Identical($t22, Add(Add($t18, $t19), $t21)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:285:9+91
    assume {:print "$at(3,13417,13508)"} true;
    assume ($t22 == (($t18 + $t19) + $t21));

    // assume Identical($t23, Add($t22, $t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:286:9+52
    assume {:print "$at(3,13517,13569)"} true;
    assume ($t23 == ($t22 + $t12));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume {:print "$at(2,28193,28194)"} true;
    assume {:print "$track_local(38,1,0):", $t0} $t0 == $t0;

    // trace_local[coins]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume {:print "$track_local(38,1,1):", $t1} $t1 == $t1;

    // $t24 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:618:28+22
    assume {:print "$at(2,28338,28360)"} true;
    $t24 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:618:13+12
    assume {:print "$track_local(38,1,8):", $t24} $t24 == $t24;

    // stake::assert_stake_pool_exists($t24) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:619:9+38
    assume {:print "$at(2,28370,28408)"} true;
    call $1_stake_assert_stake_pool_exists($t24);
    if ($abort_flag) {
        assume {:print "$at(2,28370,28408)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // $t26 := coin::value<aptos_coin::AptosCoin>($t1) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:621:22+19
    assume {:print "$at(2,28432,28451)"} true;
    call $t26 := $1_coin_value'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,28432,28451)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_local[amount]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:621:13+6
    assume {:print "$track_local(38,1,6):", $t26} $t26 == $t26;

    // $t27 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:622:23+1
    assume {:print "$at(2,28475,28476)"} true;
    $t27 := 0;
    assume $IsValid'u64'($t27);

    // $t28 := ==($t26, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:622:20+2
    $t28 := $IsEqual'u64'($t26, $t27);

    // if ($t28) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:622:9+86
    if ($t28) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:623:32+5
    assume {:print "$at(2,28511,28516)"} true;
L1:

    // coin::destroy_zero<aptos_coin::AptosCoin>($t1) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:623:13+25
    assume {:print "$at(2,28492,28517)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,28492,28517)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // goto L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:624:13+6
    assume {:print "$at(2,28531,28537)"} true;
    goto L13;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:630:61+16
    assume {:print "$at(2,28898,28914)"} true;
L0:

    // $t29 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:630:61+16
    assume {:print "$at(2,28898,28914)"} true;
    $t29 := 1;
    assume $IsValid'address'($t29);

    // $t30 := borrow_global<stake::ValidatorSet>($t29) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:630:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t29)) {
        call $ExecFailureAbort();
    } else {
        $t30 := $Mutation($Global($t29), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t29));
    }
    if ($abort_flag) {
        assume {:print "$at(2,28866,28883)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_local[validator_set]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:630:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t30);
    assume {:print "$track_local(38,1,10):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t31 := get_field<stake::ValidatorSet>.active_validators($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:45+32
    assume {:print "$at(2,29051,29083)"} true;
    $t31 := $active_validators#$1_stake_ValidatorSet($Dereference($t30));

    // $t32 := opaque begin: stake::find_validator($t31, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62

    // assume And(WellFormed($t32), Le(Len<u64>(select option::Option.vec($t32)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62
    assume ($IsValid'$1_option_Option'u64''($t32) && (LenVec($vec#$1_option_Option'u64'($t32)) <= 1));

    // assume Implies(option::$is_none<u64>($t32), forall i: Range(0, Len<stake::ValidatorInfo>($t31)): Neq<address>(select stake::ValidatorInfo.addr(Index($t31, i)), $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62
    assume ($1_option_$is_none'u64'($t32) ==> (var $range_0 := $Range(0, LenVec($t31)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t31, i)), $t24))))));

    // assume Implies(option::$is_some<u64>($t32), Eq<address>(select stake::ValidatorInfo.addr(Index($t31, option::$borrow<u64>($t32))), $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62
    assume ($1_option_$is_some'u64'($t32) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t31, $1_option_$borrow'u64'($t32))), $t24));

    // assume Implies(option::$is_some<u64>($t32), stake::spec_contains($t31, $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62
    assume ($1_option_$is_some'u64'($t32) ==> $1_stake_spec_contains($t31, $t24));

    // $t32 := opaque end: stake::find_validator($t31, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62

    // $t33 := opaque begin: option::is_some<u64>($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+80

    // assume WellFormed($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+80
    assume $IsValid'bool'($t33);

    // assume Eq<bool>($t33, option::spec_is_some<u64>($t32)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+80
    assume $IsEqual'bool'($t33, $1_option_spec_is_some'u64'($t32));

    // $t33 := opaque end: option::is_some<u64>($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+80

    // if ($t33) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    if ($t33) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
L3:

    // destroy($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    assume {:print "$at(2,29019,29192)"} true;

    // $t34 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    $t34 := true;
    assume $IsValid'bool'($t34);

    // $t4 := $t34 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    $t4 := $t34;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:46+13
    assume {:print "$at(2,29148,29161)"} true;
L2:

    // $t35 := get_field<stake::ValidatorSet>.pending_active($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:45+29
    assume {:print "$at(2,29147,29176)"} true;
    $t35 := $pending_active#$1_stake_ValidatorSet($Dereference($t30));

    // $t36 := opaque begin: stake::find_validator($t35, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59

    // assume And(WellFormed($t36), Le(Len<u64>(select option::Option.vec($t36)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59
    assume ($IsValid'$1_option_Option'u64''($t36) && (LenVec($vec#$1_option_Option'u64'($t36)) <= 1));

    // assume Implies(option::$is_none<u64>($t36), forall i: Range(0, Len<stake::ValidatorInfo>($t35)): Neq<address>(select stake::ValidatorInfo.addr(Index($t35, i)), $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59
    assume ($1_option_$is_none'u64'($t36) ==> (var $range_0 := $Range(0, LenVec($t35)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t35, i)), $t24))))));

    // assume Implies(option::$is_some<u64>($t36), Eq<address>(select stake::ValidatorInfo.addr(Index($t35, option::$borrow<u64>($t36))), $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59
    assume ($1_option_$is_some'u64'($t36) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t35, $1_option_$borrow'u64'($t36))), $t24));

    // assume Implies(option::$is_some<u64>($t36), stake::spec_contains($t35, $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59
    assume ($1_option_$is_some'u64'($t36) ==> $1_stake_spec_contains($t35, $t24));

    // $t36 := opaque end: stake::find_validator($t35, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59

    // $t4 := opaque begin: option::is_some<u64>($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:13+77

    // assume WellFormed($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:13+77
    assume $IsValid'bool'($t4);

    // assume Eq<bool>($t4, option::spec_is_some<u64>($t36)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:13+77
    assume $IsEqual'bool'($t4, $1_option_spec_is_some'u64'($t36));

    // $t4 := opaque end: option::is_some<u64>($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:13+77

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    assume {:print "$at(2,29019,29192)"} true;
L4:

    // if ($t4) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:9+240
    assume {:print "$at(2,29015,29255)"} true;
    if ($t4) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:634:42+6
    assume {:print "$at(2,29237,29243)"} true;
L6:

    // assume Identical($t37, 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:304:9+29
    assume {:print "$at(3,14055,14084)"} true;
    assume ($t37 == 1);

    // assume Identical($t38, global<stake::ValidatorSet>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:305:9+52
    assume {:print "$at(3,14093,14145)"} true;
    assume ($t38 == $ResourceValue($1_stake_ValidatorSet_$memory, $t37));

    // assume Identical($t39, global<staking_config::StakingConfig>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:307:9+66
    assume {:print "$at(3,14216,14282)"} true;
    assume ($t39 == $ResourceValue($1_staking_config_StakingConfig_$memory, $t37));

    // assume Identical($t40, select staking_config::StakingConfig.voting_power_increase_limit($t39)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:308:9+77
    assume {:print "$at(3,14291,14368)"} true;
    assume ($t40 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t39));

    // stake::update_voting_power_increase($t26) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:634:13+36
    assume {:print "$at(2,29208,29244)"} true;
    call $1_stake_update_voting_power_increase($t26);
    if ($abort_flag) {
        assume {:print "$at(2,29208,29244)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:639:55+12
    assume {:print "$at(2,29546,29558)"} true;
L5:

    // $t41 := borrow_global<stake::StakePool>($t24) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:639:26+17
    assume {:print "$at(2,29517,29534)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t41 := $Mutation($Global($t24), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t24));
    }
    if ($abort_flag) {
        assume {:print "$at(2,29517,29534)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_local[stake_pool]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:639:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t41);
    assume {:print "$track_local(38,1,9):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t42 := stake::is_current_epoch_validator($t24) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:640:13+40
    assume {:print "$at(2,29573,29613)"} true;
    call $t42 := $1_stake_is_current_epoch_validator($t24);
    if ($abort_flag) {
        assume {:print "$at(2,29573,29613)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // if ($t42) goto L8 else goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:640:9+216
    if ($t42) { goto L8; } else { goto L7; }

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:41+10
    assume {:print "$at(2,29657,29667)"} true;
L8:

    // $t43 := borrow_field<stake::StakePool>.pending_active($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:36+30
    assume {:print "$at(2,29652,29682)"} true;
    $t43 := $ChildMutation($t41, 2, $pending_active#$1_stake_StakePool($Dereference($t41)));

    // coin::merge<aptos_coin::AptosCoin>($t43, $t1) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:13+61
    call $t43 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t43, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,29629,29690)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // write_back[Reference($t41).pending_active (coin::Coin<aptos_coin::AptosCoin>)]($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:13+61
    $t41 := $UpdateMutation($t41, $Update'$1_stake_StakePool'_pending_active($Dereference($t41), $Dereference($t43)));

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:74+1
    goto L9;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:643:41+10
    assume {:print "$at(2,29749,29759)"} true;
L7:

    // $t44 := borrow_field<stake::StakePool>.active($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:643:36+22
    assume {:print "$at(2,29744,29766)"} true;
    $t44 := $ChildMutation($t41, 0, $active#$1_stake_StakePool($Dereference($t41)));

    // coin::merge<aptos_coin::AptosCoin>($t44, $t1) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:643:13+53
    call $t44 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t44, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,29721,29774)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // write_back[Reference($t41).active (coin::Coin<aptos_coin::AptosCoin>)]($t44) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:643:13+53
    $t41 := $UpdateMutation($t41, $Update'$1_stake_StakePool'_active($Dereference($t41), $Dereference($t44)));

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:70+21
    assume {:print "$at(2,29857,29878)"} true;
L9:

    // $t45 := staking_config::get() on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:70+21
    assume {:print "$at(2,29857,29878)"} true;
    call $t45 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,29857,29878)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // ($t46, $t47) := staking_config::get_required_stake($t45) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:34+58
    call $t46,$t47 := $1_staking_config_get_required_stake($t45);
    if ($abort_flag) {
        assume {:print "$at(2,29821,29879)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_local[maximum_stake]($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:17+13
    assume {:print "$track_local(38,1,7):", $t47} $t47 == $t47;

    // destroy($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:14+1

    // $t48 := read_ref($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:647:56+10
    assume {:print "$at(2,29936,29946)"} true;
    $t48 := $Dereference($t41);

    // $t49 := stake::get_next_epoch_voting_power($t48) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:647:28+39
    call $t49 := $1_stake_get_next_epoch_voting_power($t48);
    if ($abort_flag) {
        assume {:print "$at(2,29908,29947)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // $t50 := <=($t49, $t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:30+2
    assume {:print "$at(2,29978,29980)"} true;
    call $t50 := $Le($t49, $t47);

    // if ($t50) goto L11 else goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    if ($t50) { goto L11; } else { goto L10; }

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
L11:

    // goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    assume {:print "$at(2,29957,30040)"} true;
    goto L12;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
L10:

    // write_back[stake::StakePool@]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    assume {:print "$at(2,29957,30040)"} true;
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t41),
        $Dereference($t41));

    // destroy($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83

    // $t51 := 7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:72+18
    $t51 := 7;
    assume $IsValid'u64'($t51);

    // $t52 := error::invalid_argument($t51) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:48+43
    call $t52 := $1_error_invalid_argument($t51);
    if ($abort_flag) {
        assume {:print "$at(2,29996,30039)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_abort($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    assume {:print "$at(2,29957,30040)"} true;
    assume {:print "$track_abort(38,1):", $t52} $t52 == $t52;

    // $t25 := move($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    $t25 := $t52;

    // goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    goto L14;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:651:18+10
    assume {:print "$at(2,30087,30097)"} true;
L12:

    // $t53 := borrow_field<stake::StakePool>.add_stake_events($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:651:13+32
    assume {:print "$at(2,30082,30114)"} true;
    $t53 := $ChildMutation($t41, 9, $add_stake_events#$1_stake_StakePool($Dereference($t41)));

    // $t54 := pack stake::AddStakeEvent($t24, $t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:652:13+97
    assume {:print "$at(2,30128,30225)"} true;
    $t54 := $1_stake_AddStakeEvent($t24, $t26);

    // opaque begin: event::emit_event<stake::AddStakeEvent>($t53, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:650:9+185
    assume {:print "$at(2,30051,30236)"} true;

    // opaque end: event::emit_event<stake::AddStakeEvent>($t53, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:650:9+185

    // write_back[Reference($t41).add_stake_events (event::EventHandle<stake::AddStakeEvent>)]($t53) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:650:9+185
    $t41 := $UpdateMutation($t41, $Update'$1_stake_StakePool'_add_stake_events($Dereference($t41), $Dereference($t53)));

    // write_back[stake::StakePool@]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:650:9+185
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t41),
        $Dereference($t41));

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:657:5+1
    assume {:print "$at(2,30242,30243)"} true;
L13:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:657:5+1
    assume {:print "$at(2,30242,30243)"} true;
    return;

    // label L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:657:5+1
L14:

    // abort($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:657:5+1
    assume {:print "$at(2,30242,30243)"} true;
    $abort_code := $t25;
    $abort_flag := true;
    return;

}

// fun stake::add_stake_with_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
procedure {:timeLimit 40} $1_stake_add_stake_with_cap$verify(_$t0: $1_stake_OwnerCapability, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: bool;
    var $t5: $1_staking_config_StakingConfig;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_stake_StakePool);
    var $t10: $Mutation ($1_stake_ValidatorSet);
    var $t11: int;
    var $t12: int;
    var $t13: $1_stake_ValidatorSet;
    var $t14: $1_staking_config_StakingConfig;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_stake_StakePool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: $Mutation ($1_stake_ValidatorSet);
    var $t31: Vec ($1_stake_ValidatorInfo);
    var $t32: $1_option_Option'u64';
    var $t33: bool;
    var $t34: bool;
    var $t35: Vec ($1_stake_ValidatorInfo);
    var $t36: $1_option_Option'u64';
    var $t37: int;
    var $t38: $1_stake_ValidatorSet;
    var $t39: $1_staking_config_StakingConfig;
    var $t40: int;
    var $t41: $Mutation ($1_stake_StakePool);
    var $t42: bool;
    var $t43: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t44: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t45: $1_staking_config_StakingConfig;
    var $t46: int;
    var $t47: int;
    var $t48: $1_stake_StakePool;
    var $t49: int;
    var $t50: bool;
    var $t51: int;
    var $t52: int;
    var $t53: $Mutation ($1_event_EventHandle'$1_stake_AddStakeEvent');
    var $t54: $1_stake_AddStakeEvent;
    var $t55: $1_stake_ValidatorSet;
    var $t56: $1_stake_StakePool;
    var $t0: $1_stake_OwnerCapability;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_stake_StakePool_$memory#43: $Memory $1_stake_StakePool;
    var $1_stake_ValidatorSet_$memory#44: $Memory $1_stake_ValidatorSet;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume {:print "$at(2,28193,28194)"} true;
    assume $IsValid'$1_stake_OwnerCapability'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingRewardsConfig>(): And(WellFormed($rsc), And(And(And(fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.rewards_rate($rsc), fixed_point64::spec_create_from_u128(1)), fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.min_rewards_rate($rsc), select staking_config::StakingRewardsConfig.rewards_rate($rsc))), Eq<u64>(select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($rsc), 31536000)), Le(fixed_point64::spec_ceil(select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($rsc)), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingRewardsConfig'($rsc) && ((($1_fixed_point64_spec_less_or_equal($rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $1_fixed_point64_spec_create_from_u128(1)) && $1_fixed_point64_spec_less_or_equal($min_rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $rewards_rate#$1_staking_config_StakingRewardsConfig($rsc))) && $IsEqual'u64'($rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($rsc), 31536000)) && ($1_fixed_point64_spec_ceil($rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($rsc)) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+2050
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume Identical($t11, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:257:9+42
    assume {:print "$at(3,11196,11238)"} true;
    assume ($t11 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume Identical($t12, select coin::Coin.value($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:260:9+25
    assume {:print "$at(3,11300,11325)"} true;
    assume ($t12 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1));

    // assume Identical($t13, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:261:9+59
    assume {:print "$at(3,11334,11393)"} true;
    assume ($t13 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // assume Identical($t14, global<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:262:9+69
    assume {:print "$at(3,11402,11471)"} true;
    assume ($t14 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t15, select staking_config::StakingConfig.voting_power_increase_limit($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:263:9+69
    assume {:print "$at(3,11480,11549)"} true;
    assume ($t15 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t14));

    // assume Identical($t16, And(Neq<u64>($t12, 0), Or(stake::spec_contains(select stake::ValidatorSet.active_validators($t13), $t11), stake::spec_contains(select stake::ValidatorSet.pending_active($t13), $t11)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:265:9+232
    assume {:print "$at(3,11636,11868)"} true;
    assume ($t16 == (!$IsEqual'u64'($t12, 0) && ($1_stake_spec_contains($active_validators#$1_stake_ValidatorSet($t13), $t11) || $1_stake_spec_contains($pending_active#$1_stake_ValidatorSet($t13), $t11))));

    // assume Identical($t17, global<stake::StakePool>($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:274:9+49
    assume {:print "$at(3,12520,12569)"} true;
    assume ($t17 == $ResourceValue($1_stake_StakePool_$memory, $t11));

    // assume Identical($t18, select coin::Coin.value(select stake::StakePool.pending_active($t17))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:276:9+59
    assume {:print "$at(3,12646,12705)"} true;
    assume ($t18 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t17)));

    // assume Identical($t19, select coin::Coin.value(select stake::StakePool.active($t17))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:277:9+43
    assume {:print "$at(3,12714,12757)"} true;
    assume ($t19 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t17)));

    // assume Identical($t20, select staking_config::StakingConfig.maximum_stake($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:283:9+41
    assume {:print "$at(3,13295,13336)"} true;
    assume ($t20 == $maximum_stake#$1_staking_config_StakingConfig($t14));

    // assume Identical($t21, select coin::Coin.value(select stake::StakePool.pending_inactive($t17))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:284:9+63
    assume {:print "$at(3,13345,13408)"} true;
    assume ($t21 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t17)));

    // assume Identical($t22, Add(Add($t18, $t19), $t21)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:285:9+91
    assume {:print "$at(3,13417,13508)"} true;
    assume ($t22 == (($t18 + $t19) + $t21));

    // assume Identical($t23, Add($t22, $t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:286:9+52
    assume {:print "$at(3,13517,13569)"} true;
    assume ($t23 == ($t22 + $t12));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // @43 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    $1_stake_StakePool_$memory#43 := $1_stake_StakePool_$memory;

    // @44 := save_mem(stake::ValidatorSet) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    $1_stake_ValidatorSet_$memory#44 := $1_stake_ValidatorSet_$memory;

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume {:print "$at(2,28193,28194)"} true;
    assume {:print "$track_local(38,1,0):", $t0} $t0 == $t0;

    // trace_local[coins]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:617:5+1
    assume {:print "$track_local(38,1,1):", $t1} $t1 == $t1;

    // $t24 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:618:28+22
    assume {:print "$at(2,28338,28360)"} true;
    $t24 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:618:13+12
    assume {:print "$track_local(38,1,8):", $t24} $t24 == $t24;

    // stake::assert_stake_pool_exists($t24) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:619:9+38
    assume {:print "$at(2,28370,28408)"} true;
    call $1_stake_assert_stake_pool_exists($t24);
    if ($abort_flag) {
        assume {:print "$at(2,28370,28408)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // $t26 := coin::value<aptos_coin::AptosCoin>($t1) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:621:22+19
    assume {:print "$at(2,28432,28451)"} true;
    call $t26 := $1_coin_value'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,28432,28451)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_local[amount]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:621:13+6
    assume {:print "$track_local(38,1,6):", $t26} $t26 == $t26;

    // $t27 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:622:23+1
    assume {:print "$at(2,28475,28476)"} true;
    $t27 := 0;
    assume $IsValid'u64'($t27);

    // $t28 := ==($t26, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:622:20+2
    $t28 := $IsEqual'u64'($t26, $t27);

    // if ($t28) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:622:9+86
    if ($t28) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:623:32+5
    assume {:print "$at(2,28511,28516)"} true;
L1:

    // coin::destroy_zero<aptos_coin::AptosCoin>($t1) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:623:13+25
    assume {:print "$at(2,28492,28517)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,28492,28517)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // goto L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:624:13+6
    assume {:print "$at(2,28531,28537)"} true;
    goto L13;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:630:61+16
    assume {:print "$at(2,28898,28914)"} true;
L0:

    // $t29 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:630:61+16
    assume {:print "$at(2,28898,28914)"} true;
    $t29 := 1;
    assume $IsValid'address'($t29);

    // $t30 := borrow_global<stake::ValidatorSet>($t29) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:630:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t29)) {
        call $ExecFailureAbort();
    } else {
        $t30 := $Mutation($Global($t29), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t29));
    }
    if ($abort_flag) {
        assume {:print "$at(2,28866,28883)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_local[validator_set]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:630:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t30);
    assume {:print "$track_local(38,1,10):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t31 := get_field<stake::ValidatorSet>.active_validators($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:45+32
    assume {:print "$at(2,29051,29083)"} true;
    $t31 := $active_validators#$1_stake_ValidatorSet($Dereference($t30));

    // $t32 := opaque begin: stake::find_validator($t31, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62

    // assume And(WellFormed($t32), Le(Len<u64>(select option::Option.vec($t32)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62
    assume ($IsValid'$1_option_Option'u64''($t32) && (LenVec($vec#$1_option_Option'u64'($t32)) <= 1));

    // assume Implies(option::$is_none<u64>($t32), forall i: Range(0, Len<stake::ValidatorInfo>($t31)): Neq<address>(select stake::ValidatorInfo.addr(Index($t31, i)), $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62
    assume ($1_option_$is_none'u64'($t32) ==> (var $range_0 := $Range(0, LenVec($t31)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t31, i)), $t24))))));

    // assume Implies(option::$is_some<u64>($t32), Eq<address>(select stake::ValidatorInfo.addr(Index($t31, option::$borrow<u64>($t32))), $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62
    assume ($1_option_$is_some'u64'($t32) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t31, $1_option_$borrow'u64'($t32))), $t24));

    // assume Implies(option::$is_some<u64>($t32), stake::spec_contains($t31, $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62
    assume ($1_option_$is_some'u64'($t32) ==> $1_stake_spec_contains($t31, $t24));

    // $t32 := opaque end: stake::find_validator($t31, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:30+62

    // $t33 := opaque begin: option::is_some<u64>($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+80

    // assume WellFormed($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+80
    assume $IsValid'bool'($t33);

    // assume Eq<bool>($t33, option::spec_is_some<u64>($t32)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+80
    assume $IsEqual'bool'($t33, $1_option_spec_is_some'u64'($t32));

    // $t33 := opaque end: option::is_some<u64>($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+80

    // if ($t33) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    if ($t33) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
L3:

    // destroy($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    assume {:print "$at(2,29019,29192)"} true;

    // $t34 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    $t34 := true;
    assume $IsValid'bool'($t34);

    // $t4 := $t34 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    $t4 := $t34;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:46+13
    assume {:print "$at(2,29148,29161)"} true;
L2:

    // $t35 := get_field<stake::ValidatorSet>.pending_active($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:45+29
    assume {:print "$at(2,29147,29176)"} true;
    $t35 := $pending_active#$1_stake_ValidatorSet($Dereference($t30));

    // $t36 := opaque begin: stake::find_validator($t35, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59

    // assume And(WellFormed($t36), Le(Len<u64>(select option::Option.vec($t36)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59
    assume ($IsValid'$1_option_Option'u64''($t36) && (LenVec($vec#$1_option_Option'u64'($t36)) <= 1));

    // assume Implies(option::$is_none<u64>($t36), forall i: Range(0, Len<stake::ValidatorInfo>($t35)): Neq<address>(select stake::ValidatorInfo.addr(Index($t35, i)), $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59
    assume ($1_option_$is_none'u64'($t36) ==> (var $range_0 := $Range(0, LenVec($t35)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t35, i)), $t24))))));

    // assume Implies(option::$is_some<u64>($t36), Eq<address>(select stake::ValidatorInfo.addr(Index($t35, option::$borrow<u64>($t36))), $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59
    assume ($1_option_$is_some'u64'($t36) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t35, $1_option_$borrow'u64'($t36))), $t24));

    // assume Implies(option::$is_some<u64>($t36), stake::spec_contains($t35, $t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59
    assume ($1_option_$is_some'u64'($t36) ==> $1_stake_spec_contains($t35, $t24));

    // $t36 := opaque end: stake::find_validator($t35, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:30+59

    // $t4 := opaque begin: option::is_some<u64>($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:13+77

    // assume WellFormed($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:13+77
    assume $IsValid'bool'($t4);

    // assume Eq<bool>($t4, option::spec_is_some<u64>($t36)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:13+77
    assume $IsEqual'bool'($t4, $1_option_spec_is_some'u64'($t36));

    // $t4 := opaque end: option::is_some<u64>($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:633:13+77

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:13+173
    assume {:print "$at(2,29019,29192)"} true;
L4:

    // if ($t4) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:632:9+240
    assume {:print "$at(2,29015,29255)"} true;
    if ($t4) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:634:42+6
    assume {:print "$at(2,29237,29243)"} true;
L6:

    // assume Identical($t37, 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:304:9+29
    assume {:print "$at(3,14055,14084)"} true;
    assume ($t37 == 1);

    // assume Identical($t38, global<stake::ValidatorSet>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:305:9+52
    assume {:print "$at(3,14093,14145)"} true;
    assume ($t38 == $ResourceValue($1_stake_ValidatorSet_$memory, $t37));

    // assume Identical($t39, global<staking_config::StakingConfig>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:307:9+66
    assume {:print "$at(3,14216,14282)"} true;
    assume ($t39 == $ResourceValue($1_staking_config_StakingConfig_$memory, $t37));

    // assume Identical($t40, select staking_config::StakingConfig.voting_power_increase_limit($t39)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:308:9+77
    assume {:print "$at(3,14291,14368)"} true;
    assume ($t40 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t39));

    // stake::update_voting_power_increase($t26) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:634:13+36
    assume {:print "$at(2,29208,29244)"} true;
    call $1_stake_update_voting_power_increase($t26);
    if ($abort_flag) {
        assume {:print "$at(2,29208,29244)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:639:55+12
    assume {:print "$at(2,29546,29558)"} true;
L5:

    // $t41 := borrow_global<stake::StakePool>($t24) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:639:26+17
    assume {:print "$at(2,29517,29534)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t41 := $Mutation($Global($t24), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t24));
    }
    if ($abort_flag) {
        assume {:print "$at(2,29517,29534)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_local[stake_pool]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:639:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t41);
    assume {:print "$track_local(38,1,9):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // assert exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assert {:msg "assert_failed(3,17638,17695): precondition does not hold at this call"}
      $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assert exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assert {:msg "assert_failed(3,17704,17760): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assert exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assert {:msg "assert_failed(3,17769,17817): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assert exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assert {:msg "assert_failed(3,17826,17875): precondition does not hold at this call"}
      $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assert Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assert {:msg "assert_failed(3,17884,18001): precondition does not hold at this call"}
      ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assert {:msg "assert_failed(3,18010,18080): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assert {:msg "assert_failed(3,18089,18138): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // $t42 := stake::is_current_epoch_validator($t24) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:640:13+40
    assume {:print "$at(2,29573,29613)"} true;
    call $t42 := $1_stake_is_current_epoch_validator($t24);
    if ($abort_flag) {
        assume {:print "$at(2,29573,29613)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // if ($t42) goto L8 else goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:640:9+216
    if ($t42) { goto L8; } else { goto L7; }

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:41+10
    assume {:print "$at(2,29657,29667)"} true;
L8:

    // $t43 := borrow_field<stake::StakePool>.pending_active($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:36+30
    assume {:print "$at(2,29652,29682)"} true;
    $t43 := $ChildMutation($t41, 2, $pending_active#$1_stake_StakePool($Dereference($t41)));

    // coin::merge<aptos_coin::AptosCoin>($t43, $t1) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:13+61
    call $t43 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t43, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,29629,29690)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // write_back[Reference($t41).pending_active (coin::Coin<aptos_coin::AptosCoin>)]($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:13+61
    $t41 := $UpdateMutation($t41, $Update'$1_stake_StakePool'_pending_active($Dereference($t41), $Dereference($t43)));

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:641:74+1
    goto L9;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:643:41+10
    assume {:print "$at(2,29749,29759)"} true;
L7:

    // $t44 := borrow_field<stake::StakePool>.active($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:643:36+22
    assume {:print "$at(2,29744,29766)"} true;
    $t44 := $ChildMutation($t41, 0, $active#$1_stake_StakePool($Dereference($t41)));

    // coin::merge<aptos_coin::AptosCoin>($t44, $t1) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:643:13+53
    call $t44 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t44, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,29721,29774)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // write_back[Reference($t41).active (coin::Coin<aptos_coin::AptosCoin>)]($t44) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:643:13+53
    $t41 := $UpdateMutation($t41, $Update'$1_stake_StakePool'_active($Dereference($t41), $Dereference($t44)));

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:70+21
    assume {:print "$at(2,29857,29878)"} true;
L9:

    // $t45 := staking_config::get() on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:70+21
    assume {:print "$at(2,29857,29878)"} true;
    call $t45 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,29857,29878)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // ($t46, $t47) := staking_config::get_required_stake($t45) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:34+58
    call $t46,$t47 := $1_staking_config_get_required_stake($t45);
    if ($abort_flag) {
        assume {:print "$at(2,29821,29879)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_local[maximum_stake]($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:17+13
    assume {:print "$track_local(38,1,7):", $t47} $t47 == $t47;

    // destroy($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:646:14+1

    // $t48 := read_ref($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:647:56+10
    assume {:print "$at(2,29936,29946)"} true;
    $t48 := $Dereference($t41);

    // $t49 := stake::get_next_epoch_voting_power($t48) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:647:28+39
    call $t49 := $1_stake_get_next_epoch_voting_power($t48);
    if ($abort_flag) {
        assume {:print "$at(2,29908,29947)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // $t50 := <=($t49, $t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:30+2
    assume {:print "$at(2,29978,29980)"} true;
    call $t50 := $Le($t49, $t47);

    // if ($t50) goto L11 else goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    if ($t50) { goto L11; } else { goto L10; }

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
L11:

    // goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    assume {:print "$at(2,29957,30040)"} true;
    goto L12;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
L10:

    // write_back[stake::StakePool@]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    assume {:print "$at(2,29957,30040)"} true;
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t41),
        $Dereference($t41));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // destroy($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    assume {:print "$at(2,29957,30040)"} true;

    // $t51 := 7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:72+18
    $t51 := 7;
    assume $IsValid'u64'($t51);

    // $t52 := error::invalid_argument($t51) on_abort goto L14 with $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:48+43
    call $t52 := $1_error_invalid_argument($t51);
    if ($abort_flag) {
        assume {:print "$at(2,29996,30039)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(38,1):", $t25} $t25 == $t25;
        goto L14;
    }

    // trace_abort($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    assume {:print "$at(2,29957,30040)"} true;
    assume {:print "$track_abort(38,1):", $t52} $t52 == $t52;

    // $t25 := move($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    $t25 := $t52;

    // goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:648:9+83
    goto L14;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:651:18+10
    assume {:print "$at(2,30087,30097)"} true;
L12:

    // $t53 := borrow_field<stake::StakePool>.add_stake_events($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:651:13+32
    assume {:print "$at(2,30082,30114)"} true;
    $t53 := $ChildMutation($t41, 9, $add_stake_events#$1_stake_StakePool($Dereference($t41)));

    // $t54 := pack stake::AddStakeEvent($t24, $t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:652:13+97
    assume {:print "$at(2,30128,30225)"} true;
    $t54 := $1_stake_AddStakeEvent($t24, $t26);

    // opaque begin: event::emit_event<stake::AddStakeEvent>($t53, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:650:9+185
    assume {:print "$at(2,30051,30236)"} true;

    // opaque end: event::emit_event<stake::AddStakeEvent>($t53, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:650:9+185

    // write_back[Reference($t41).add_stake_events (event::EventHandle<stake::AddStakeEvent>)]($t53) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:650:9+185
    $t41 := $UpdateMutation($t41, $Update'$1_stake_StakePool'_add_stake_events($Dereference($t41), $Dereference($t53)));

    // write_back[stake::StakePool@]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:650:9+185
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t41),
        $Dereference($t41));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:657:5+1
    assume {:print "$at(2,30242,30243)"} true;
L13:

    // assume Identical($t55, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:264:9+69
    assume {:print "$at(3,11558,11627)"} true;
    assume ($t55 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // assume Identical($t56, global<stake::StakePool>($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:275:9+59
    assume {:print "$at(3,12578,12637)"} true;
    assume ($t56 == $ResourceValue($1_stake_StakePool_$memory, $t11));

    // assert Not(Not(exists[@43]<stake::StakePool>($t11))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:258:9+43
    assume {:print "$at(3,11247,11290)"} true;
    assert {:msg "assert_failed(3,11247,11290): function does not abort under this condition"}
      !!$ResourceExists($1_stake_StakePool_$memory#43, $t11);

    // assert Not(And($t16, Gt(Add(select stake::ValidatorSet.total_joining_power($t13), $t12), 340282366920938463463374607431768211455))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:267:9+96
    assume {:print "$at(3,11877,11973)"} true;
    assert {:msg "assert_failed(3,11877,11973): function does not abort under this condition"}
      !($t16 && (($total_joining_power#$1_stake_ValidatorSet($t13) + $t12) > 340282366920938463463374607431768211455));

    // assert Not(And(And($t16, Gt(select stake::ValidatorSet.total_voting_power($t13), 0)), Gt(Mul(select stake::ValidatorSet.total_voting_power($t13), $t15), 340282366920938463463374607431768211455))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:269:9+172
    assume {:print "$at(3,12117,12289)"} true;
    assert {:msg "assert_failed(3,12117,12289): function does not abort under this condition"}
      !(($t16 && ($total_voting_power#$1_stake_ValidatorSet($t13) > 0)) && (($total_voting_power#$1_stake_ValidatorSet($t13) * $t15) > 340282366920938463463374607431768211455));

    // assert Not(And(And($t16, Gt(select stake::ValidatorSet.total_voting_power($t13), 0)), Gt(Add(select stake::ValidatorSet.total_joining_power($t13), $t12), Div(Mul(select stake::ValidatorSet.total_voting_power($t13), $t15), 100)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:271:9+212
    assume {:print "$at(3,12298,12510)"} true;
    assert {:msg "assert_failed(3,12298,12510): function does not abort under this condition"}
      !(($t16 && ($total_voting_power#$1_stake_ValidatorSet($t13) > 0)) && (($total_joining_power#$1_stake_ValidatorSet($t13) + $t12) > (($total_voting_power#$1_stake_ValidatorSet($t13) * $t15) div 100)));

    // assert Not(And(And(Neq<u64>($t12, 0), stake::spec_is_current_epoch_validator[@44]($t11)), Gt(Add($t18, $t12), 18446744073709551615))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:278:9+114
    assume {:print "$at(3,12766,12880)"} true;
    assert {:msg "assert_failed(3,12766,12880): function does not abort under this condition"}
      !((!$IsEqual'u64'($t12, 0) && $1_stake_spec_is_current_epoch_validator($1_stake_ValidatorSet_$memory#44, $t11)) && (($t18 + $t12) > 18446744073709551615));

    // assert Not(And(And(Neq<u64>($t12, 0), Not(stake::spec_is_current_epoch_validator[@44]($t11))), Gt(Add($t19, $t12), 18446744073709551615))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:280:9+107
    assume {:print "$at(3,13041,13148)"} true;
    assert {:msg "assert_failed(3,13041,13148): function does not abort under this condition"}
      !((!$IsEqual'u64'($t12, 0) && !$1_stake_spec_is_current_epoch_validator($1_stake_ValidatorSet_$memory#44, $t11)) && (($t19 + $t12) > 18446744073709551615));

    // assert Not(And(Neq<u64>($t12, 0), Gt($t23, 18446744073709551615))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:287:9+48
    assume {:print "$at(3,13578,13626)"} true;
    assert {:msg "assert_failed(3,13578,13626): function does not abort under this condition"}
      !(!$IsEqual'u64'($t12, 0) && ($t23 > 18446744073709551615));

    // assert Not(And(Neq<u64>($t12, 0), Gt($t23, $t20))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:288:9+54
    assume {:print "$at(3,13635,13689)"} true;
    assert {:msg "assert_failed(3,13635,13689): function does not abort under this condition"}
      !(!$IsEqual'u64'($t12, 0) && ($t23 > $t20));

    // assert Implies($t16, Eq<u128>(select stake::ValidatorSet.total_joining_power($t55), Add(select stake::ValidatorSet.total_joining_power($t13), $t12))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:268:9+126
    assume {:print "$at(3,11982,12108)"} true;
    assert {:msg "assert_failed(3,11982,12108): post-condition does not hold"}
      ($t16 ==> $IsEqual'u128'($total_joining_power#$1_stake_ValidatorSet($t55), ($total_joining_power#$1_stake_ValidatorSet($t13) + $t12)));

    // assert Implies(And(Neq<u64>($t12, 0), stake::spec_is_current_epoch_validator($t11)), Eq<u64>(select coin::Coin.value(select stake::StakePool.pending_active($t56)), Add($t18, $t12))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:279:9+143
    assume {:print "$at(3,12889,13032)"} true;
    assert {:msg "assert_failed(3,12889,13032): post-condition does not hold"}
      ((!$IsEqual'u64'($t12, 0) && $1_stake_spec_is_current_epoch_validator($1_stake_ValidatorSet_$memory, $t11)) ==> $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t56)), ($t18 + $t12)));

    // assert Implies(And(Neq<u64>($t12, 0), Not(stake::spec_is_current_epoch_validator($t11))), Eq<u64>(select coin::Coin.value(select stake::StakePool.active($t56)), Add($t19, $t12))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:281:9+128
    assume {:print "$at(3,13157,13285)"} true;
    assert {:msg "assert_failed(3,13157,13285): post-condition does not hold"}
      ((!$IsEqual'u64'($t12, 0) && !$1_stake_spec_is_current_epoch_validator($1_stake_ValidatorSet_$memory, $t11)) ==> $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t56)), ($t19 + $t12)));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:281:9+128
    return;

    // label L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:657:5+1
    assume {:print "$at(2,30242,30243)"} true;
L14:

    // assert Or(Or(Or(Or(Or(Or(Or(Not(exists[@43]<stake::StakePool>($t11)), And($t16, Gt(Add(select stake::ValidatorSet.total_joining_power($t13), $t12), 340282366920938463463374607431768211455))), And(And($t16, Gt(select stake::ValidatorSet.total_voting_power($t13), 0)), Gt(Mul(select stake::ValidatorSet.total_voting_power($t13), $t15), 340282366920938463463374607431768211455))), And(And($t16, Gt(select stake::ValidatorSet.total_voting_power($t13), 0)), Gt(Add(select stake::ValidatorSet.total_joining_power($t13), $t12), Div(Mul(select stake::ValidatorSet.total_voting_power($t13), $t15), 100)))), And(And(Neq<u64>($t12, 0), stake::spec_is_current_epoch_validator[@44]($t11)), Gt(Add($t18, $t12), 18446744073709551615))), And(And(Neq<u64>($t12, 0), Not(stake::spec_is_current_epoch_validator[@44]($t11))), Gt(Add($t19, $t12), 18446744073709551615))), And(Neq<u64>($t12, 0), Gt($t23, 18446744073709551615))), And(Neq<u64>($t12, 0), Gt($t23, $t20))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:251:5+2641
    assume {:print "$at(3,11054,13695)"} true;
    assert {:msg "assert_failed(3,11054,13695): abort not covered by any of the `aborts_if` clauses"}
      (((((((!$ResourceExists($1_stake_StakePool_$memory#43, $t11) || ($t16 && (($total_joining_power#$1_stake_ValidatorSet($t13) + $t12) > 340282366920938463463374607431768211455))) || (($t16 && ($total_voting_power#$1_stake_ValidatorSet($t13) > 0)) && (($total_voting_power#$1_stake_ValidatorSet($t13) * $t15) > 340282366920938463463374607431768211455))) || (($t16 && ($total_voting_power#$1_stake_ValidatorSet($t13) > 0)) && (($total_joining_power#$1_stake_ValidatorSet($t13) + $t12) > (($total_voting_power#$1_stake_ValidatorSet($t13) * $t15) div 100)))) || ((!$IsEqual'u64'($t12, 0) && $1_stake_spec_is_current_epoch_validator($1_stake_ValidatorSet_$memory#44, $t11)) && (($t18 + $t12) > 18446744073709551615))) || ((!$IsEqual'u64'($t12, 0) && !$1_stake_spec_is_current_epoch_validator($1_stake_ValidatorSet_$memory#44, $t11)) && (($t19 + $t12) > 18446744073709551615))) || (!$IsEqual'u64'($t12, 0) && ($t23 > 18446744073709551615))) || (!$IsEqual'u64'($t12, 0) && ($t23 > $t20)));

    // abort($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:251:5+2641
    $abort_code := $t25;
    $abort_flag := true;
    return;

}

// fun stake::add_transaction_fee [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:281:5+476
procedure {:timeLimit 40} $1_stake_add_transaction_fee$verify(_$t0: int, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'));
    var $t4: int;
    var $t5: $Mutation ($1_stake_ValidatorFees);
    var $t6: int;
    var $t7: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'));
    var $t8: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t9: bool;
    var $t10: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''': Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $temp_0'address': int;
    var $1_stake_ValidatorFees_$memory#15: $Memory $1_stake_ValidatorFees;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:281:5+1
    assume {:print "$at(2,12587,12588)"} true;
    assume $IsValid'address'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:281:5+1
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t1);

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:281:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // @15 := save_mem(stake::ValidatorFees) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:281:5+1
    $1_stake_ValidatorFees_$memory#15 := $1_stake_ValidatorFees_$memory;

    // trace_local[validator_addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:281:5+1
    assume {:print "$track_local(38,2,0):", $t0} $t0 == $t0;

    // trace_local[fee]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:281:5+1
    assume {:print "$track_local(38,2,1):", $t1} $t1 == $t1;

    // $t4 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:282:64+16
    assume {:print "$at(2,12761,12777)"} true;
    $t4 := 1;
    assume $IsValid'address'($t4);

    // $t5 := borrow_global<stake::ValidatorFees>($t4) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:282:31+17
    if (!$ResourceExists($1_stake_ValidatorFees_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_stake_ValidatorFees_$memory, $t4));
    }
    if ($abort_flag) {
        assume {:print "$at(2,12728,12745)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t7 := borrow_field<stake::ValidatorFees>.fees_table($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:282:26+66
    $t7 := $ChildMutation($t5, 0, $fees_table#$1_stake_ValidatorFees($Dereference($t5)));

    // trace_local[fees_table]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:282:13+10
    $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''' := $Dereference($t7);
    assume {:print "$track_local(38,2,3):", $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''} $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''' == $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''';

    // $t8 := read_ref($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:283:28+28
    assume {:print "$at(2,12818,12846)"} true;
    $t8 := $Dereference($t7);

    // $t9 := table::contains<address, coin::Coin<aptos_coin::AptosCoin>>($t8, $t0) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:283:13+43
    call $t9 := $1_table_contains'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''($t8, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,12803,12846)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // if ($t9) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:283:9+258
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:284:51+10
    assume {:print "$at(2,12900,12910)"} true;
L1:

    // $t10 := table::borrow_mut<address, coin::Coin<aptos_coin::AptosCoin>>($t7, $t0) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:284:33+45
    assume {:print "$at(2,12882,12927)"} true;
    call $t10,$t7 := $1_table_borrow_mut'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''($t7, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,12882,12927)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // coin::merge<aptos_coin::AptosCoin>($t10, $t1) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:285:13+31
    assume {:print "$at(2,12941,12972)"} true;
    call $t10 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,12941,12972)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // write_back[Reference($t7)[]]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:285:13+31
    $t7 := $UpdateMutation($t7, UpdateTable($Dereference($t7), ReadVec(p#$Mutation($t10), LenVec(p#$Mutation($t7))), $Dereference($t10)));

    // write_back[Reference($t5).fees_table (table::Table<address, coin::Coin<aptos_coin::AptosCoin>>)]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:285:13+31
    $t5 := $UpdateMutation($t5, $Update'$1_stake_ValidatorFees'_fees_table($Dereference($t5), $Dereference($t7)));

    // write_back[stake::ValidatorFees@]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:285:13+31
    $1_stake_ValidatorFees_$memory := $ResourceUpdate($1_stake_ValidatorFees_$memory, $GlobalLocationAddress($t5),
        $Dereference($t5));

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:283:9+258
    assume {:print "$at(2,12799,13057)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:287:24+10
    assume {:print "$at(2,13014,13024)"} true;
L0:

    // table::add<address, coin::Coin<aptos_coin::AptosCoin>>($t7, $t0, $t1) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:287:13+43
    assume {:print "$at(2,13003,13046)"} true;
    call $t7 := $1_table_add'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''($t7, $t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,13003,13046)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // write_back[Reference($t5).fees_table (table::Table<address, coin::Coin<aptos_coin::AptosCoin>>)]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:287:13+43
    $t5 := $UpdateMutation($t5, $Update'$1_stake_ValidatorFees'_fees_table($Dereference($t5), $Dereference($t7)));

    // write_back[stake::ValidatorFees@]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:287:13+43
    $1_stake_ValidatorFees_$memory := $ResourceUpdate($1_stake_ValidatorFees_$memory, $GlobalLocationAddress($t5),
        $Dereference($t5));

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:283:9+258
    assume {:print "$at(2,12799,13057)"} true;
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:289:5+1
    assume {:print "$at(2,13062,13063)"} true;
L3:

    // assert Not(Not(exists[@15]<stake::ValidatorFees>(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:300:9+51
    assume {:print "$at(3,13926,13977)"} true;
    assert {:msg "assert_failed(3,13926,13977): function does not abort under this condition"}
      !!$ResourceExists($1_stake_ValidatorFees_$memory#15, 1);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:300:9+51
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:289:5+1
    assume {:print "$at(2,13062,13063)"} true;
L4:

    // assert Not(exists[@15]<stake::ValidatorFees>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:299:5+139
    assume {:print "$at(3,13844,13983)"} true;
    assert {:msg "assert_failed(3,13844,13983): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_stake_ValidatorFees_$memory#15, 1);

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:299:5+139
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::assert_owner_cap_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1356:5+140
procedure {:inline 1} $1_stake_assert_owner_cap_exists(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1356:5+1
    assume {:print "$at(2,64553,64554)"} true;
    assume {:print "$track_local(38,4,0):", $t0} $t0 == $t0;

    // $t1 := exists<stake::OwnerCapability>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:17+6
    assume {:print "$at(2,64615,64621)"} true;
    $t1 := $ResourceExists($1_stake_OwnerCapability_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    assume {:print "$at(2,64607,64686)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:66+20
L0:

    // $t2 := 15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:66+20
    assume {:print "$at(2,64664,64684)"} true;
    $t2 := 15;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:49+38
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(2,64647,64685)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,4):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    assume {:print "$at(2,64607,64686)"} true;
    assume {:print "$track_abort(38,4):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    $t4 := $t3;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:88+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1358:5+1
    assume {:print "$at(2,64692,64693)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1358:5+1
    assume {:print "$at(2,64692,64693)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1358:5+1
L4:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1358:5+1
    assume {:print "$at(2,64692,64693)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::assert_owner_cap_exists [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1356:5+140
procedure {:timeLimit 40} $1_stake_assert_owner_cap_exists$verify(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $1_stake_OwnerCapability_$memory#16: $Memory $1_stake_OwnerCapability;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1356:5+1
    assume {:print "$at(2,64553,64554)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // @16 := save_mem(stake::OwnerCapability) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1356:5+1
    $1_stake_OwnerCapability_$memory#16 := $1_stake_OwnerCapability_$memory;

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1356:5+1
    assume {:print "$track_local(38,4,0):", $t0} $t0 == $t0;

    // $t1 := exists<stake::OwnerCapability>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:17+6
    assume {:print "$at(2,64615,64621)"} true;
    $t1 := $ResourceExists($1_stake_OwnerCapability_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    assume {:print "$at(2,64607,64686)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:66+20
L0:

    // $t2 := 15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:66+20
    assume {:print "$at(2,64664,64684)"} true;
    $t2 := 15;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:49+38
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(2,64647,64685)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,4):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    assume {:print "$at(2,64607,64686)"} true;
    assume {:print "$track_abort(38,4):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    $t4 := $t3;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:9+79
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1357:88+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1358:5+1
    assume {:print "$at(2,64692,64693)"} true;
L3:

    // assert Not(Not(exists[@16]<stake::OwnerCapability>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:328:9+42
    assume {:print "$at(3,15407,15449)"} true;
    assert {:msg "assert_failed(3,15407,15449): function does not abort under this condition"}
      !!$ResourceExists($1_stake_OwnerCapability_$memory#16, $t0);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:328:9+42
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1358:5+1
    assume {:print "$at(2,64692,64693)"} true;
L4:

    // assert Not(exists[@16]<stake::OwnerCapability>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:327:5+103
    assume {:print "$at(3,15352,15455)"} true;
    assert {:msg "assert_failed(3,15352,15455): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_stake_OwnerCapability_$memory#16, $t0);

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:327:5+103
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::assert_stake_pool_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+162
procedure {:inline 1} $1_stake_assert_stake_pool_exists(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+1
    assume {:print "$at(2,63127,63128)"} true;
    assume {:print "$track_local(38,5,0):", $t0} $t0 == $t0;

    // $t1 := stake::stake_pool_exists($t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:17+31
    assume {:print "$at(2,63197,63228)"} true;
    call $t1 := $1_stake_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,63197,63228)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,5):", $t2} $t2 == $t2;
        goto L4;
    }

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    assume {:print "$at(2,63189,63282)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:74+26
L0:

    // $t3 := 14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:74+26
    assume {:print "$at(2,63254,63280)"} true;
    $t3 := 14;
    assume $IsValid'u64'($t3);

    // $t4 := error::invalid_argument($t3) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:50+51
    call $t4 := $1_error_invalid_argument($t3);
    if ($abort_flag) {
        assume {:print "$at(2,63230,63281)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,5):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    assume {:print "$at(2,63189,63282)"} true;
    assume {:print "$track_abort(38,5):", $t4} $t4 == $t4;

    // $t2 := move($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    $t2 := $t4;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:102+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1327:5+1
    assume {:print "$at(2,63288,63289)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1327:5+1
    assume {:print "$at(2,63288,63289)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1327:5+1
L4:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1327:5+1
    assume {:print "$at(2,63288,63289)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::assert_stake_pool_exists [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+162
procedure {:timeLimit 40} $1_stake_assert_stake_pool_exists$verify(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $1_stake_StakePool_$memory#19: $Memory $1_stake_StakePool;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+1
    assume {:print "$at(2,63127,63128)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+162
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // @19 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+1
    $1_stake_StakePool_$memory#19 := $1_stake_StakePool_$memory;

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1325:5+1
    assume {:print "$track_local(38,5,0):", $t0} $t0 == $t0;

    // $t1 := stake::stake_pool_exists($t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:17+31
    assume {:print "$at(2,63197,63228)"} true;
    call $t1 := $1_stake_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,63197,63228)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,5):", $t2} $t2 == $t2;
        goto L4;
    }

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    assume {:print "$at(2,63189,63282)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:74+26
L0:

    // $t3 := 14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:74+26
    assume {:print "$at(2,63254,63280)"} true;
    $t3 := 14;
    assume $IsValid'u64'($t3);

    // $t4 := error::invalid_argument($t3) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:50+51
    call $t4 := $1_error_invalid_argument($t3);
    if ($abort_flag) {
        assume {:print "$at(2,63230,63281)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,5):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    assume {:print "$at(2,63189,63282)"} true;
    assume {:print "$track_abort(38,5):", $t4} $t4 == $t4;

    // $t2 := move($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    $t2 := $t4;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:9+93
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1326:102+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1327:5+1
    assume {:print "$at(2,63288,63289)"} true;
L3:

    // assert Not(Not(stake::$stake_pool_exists[@19]($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:316:9+43
    assume {:print "$at(3,14814,14857)"} true;
    assert {:msg "assert_failed(3,14814,14857): function does not abort under this condition"}
      !!$1_stake_$stake_pool_exists($1_stake_StakePool_$memory#19, $t0);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:316:9+43
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1327:5+1
    assume {:print "$at(2,63288,63289)"} true;
L4:

    // assert Not(stake::$stake_pool_exists[@19]($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:315:5+112
    assume {:print "$at(3,14751,14863)"} true;
    assert {:msg "assert_failed(3,14751,14863): abort not covered by any of the `aborts_if` clauses"}
      !$1_stake_$stake_pool_exists($1_stake_StakePool_$memory#19, $t0);

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:315:5+112
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::calculate_rewards_amount [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1224
procedure {:timeLimit 40} $1_stake_calculate_rewards_amount$verify(_$t0: int, _$t1: int, _$t2: int, _$t3: int, _$t4: int) returns ($ret0: int)
{
    // declare local variables
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume {:print "$at(2,58686,58687)"} true;
    assume $IsValid'u64'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume $IsValid'u64'($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume $IsValid'u64'($t3);

    // assume WellFormed($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume $IsValid'u64'($t4);

    // assume Le($t3, 1000000) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:188:9+42
    assume {:print "$at(3,8143,8185)"} true;
    assume ($t3 <= 1000000);

    // assume Gt($t4, 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:189:9+38
    assume {:print "$at(3,8194,8232)"} true;
    assume ($t4 > 0);

    // assume Le($t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:190:9+50
    assume {:print "$at(3,8241,8291)"} true;
    assume ($t3 <= $t4);

    // assume Le($t1, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:191:9+57
    assume {:print "$at(3,8300,8357)"} true;
    assume ($t1 <= $t2);

    // trace_local[stake_amount]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume {:print "$at(2,58686,58687)"} true;
    assume {:print "$track_local(38,6,0):", $t0} $t0 == $t0;

    // trace_local[num_successful_proposals]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume {:print "$track_local(38,6,1):", $t1} $t1 == $t1;

    // trace_local[num_total_proposals]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume {:print "$track_local(38,6,2):", $t2} $t2 == $t2;

    // trace_local[rewards_rate]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume {:print "$track_local(38,6,3):", $t3} $t3 == $t3;

    // trace_local[rewards_rate_denominator]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1220:5+1
    assume {:print "$track_local(38,6,4):", $t4} $t4 == $t4;

    // assume Le(Mul($t1, 1000000), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1232:13+62
    assume {:print "$at(2,59259,59321)"} true;
    assume (($t1 * 1000000) <= 18446744073709551615);

    // $t8 := (u128)($t0) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1236:33+22
    assume {:print "$at(2,59574,59596)"} true;
    call $t8 := $CastU128($t0);
    if ($abort_flag) {
        assume {:print "$at(2,59574,59596)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t10 := (u128)($t3) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1236:58+22
    call $t10 := $CastU128($t3);
    if ($abort_flag) {
        assume {:print "$at(2,59599,59621)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t11 := *($t8, $t10) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1236:56+1
    call $t11 := $MulU128($t8, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,59597,59598)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t12 := (u128)($t1) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1236:83+34
    call $t12 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(2,59624,59658)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t13 := *($t11, $t12) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1236:81+1
    call $t13 := $MulU128($t11, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,59622,59623)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[rewards_numerator]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1236:13+17
    assume {:print "$track_local(38,6,7):", $t13} $t13 == $t13;

    // $t14 := (u128)($t4) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1237:35+34
    assume {:print "$at(2,59694,59728)"} true;
    call $t14 := $CastU128($t4);
    if ($abort_flag) {
        assume {:print "$at(2,59694,59728)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t15 := (u128)($t2) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1237:72+29
    call $t15 := $CastU128($t2);
    if ($abort_flag) {
        assume {:print "$at(2,59731,59760)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t16 := *($t14, $t15) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1237:70+1
    call $t16 := $MulU128($t14, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,59729,59730)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[rewards_denominator]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1237:13+19
    assume {:print "$track_local(38,6,6):", $t16} $t16 == $t16;

    // $t17 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1238:35+1
    assume {:print "$at(2,59796,59797)"} true;
    $t17 := 0;
    assume $IsValid'u128'($t17);

    // $t18 := >($t16, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1238:33+1
    call $t18 := $Gt($t16, $t17);

    // if ($t18) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1238:9+134
    if ($t18) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1239:15+17
    assume {:print "$at(2,59815,59832)"} true;
L1:

    // $t19 := /($t13, $t16) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1239:33+1
    assume {:print "$at(2,59833,59834)"} true;
    call $t19 := $Div($t13, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,59833,59834)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t5 := (u64)($t19) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1239:13+50
    call $t5 := $CastU64($t19);
    if ($abort_flag) {
        assume {:print "$at(2,59813,59863)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1238:9+134
    assume {:print "$at(2,59770,59904)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1241:13+1
    assume {:print "$at(2,59893,59894)"} true;
L0:

    // $t20 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1241:13+1
    assume {:print "$at(2,59893,59894)"} true;
    $t20 := 0;
    assume $IsValid'u64'($t20);

    // $t5 := $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1238:9+134
    assume {:print "$at(2,59770,59904)"} true;
    $t5 := $t20;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1238:9+134
L2:

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1238:9+134
    assume {:print "$at(2,59770,59904)"} true;
    assume {:print "$track_return(38,6,0):", $t5} $t5 == $t5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1243:5+1
    assume {:print "$at(2,59909,59910)"} true;
L3:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:198:9+16
    assume {:print "$at(3,8742,8758)"} true;
    assert {:msg "assert_failed(3,8742,8758): function does not abort under this condition"}
      !false;

    // assert Implies(Eq<num>(Mul($t4, $t2), 0), Eq<u64>($t5, 0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:192:9+89
    assume {:print "$at(3,8366,8455)"} true;
    assert {:msg "assert_failed(3,8366,8455): post-condition does not hold"}
      ($IsEqual'num'(($t4 * $t2), 0) ==> $IsEqual'u64'($t5, 0));

    // assert Implies(Gt(Mul($t4, $t2), 0), {let amount = Div(Mul(Mul($t0, $t3), $t1), Mul($t4, $t2)); Eq<u64>($t5, amount)}) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:193:9+269
    assume {:print "$at(3,8464,8733)"} true;
    assert {:msg "assert_failed(3,8464,8733): post-condition does not hold"}
      ((($t4 * $t2) > 0) ==> (var amount := ((($t0 * $t3) * $t1) div ($t4 * $t2)); $IsEqual'u64'($t5, amount)));

    // return $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:193:9+269
    $ret0 := $t5;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1243:5+1
    assume {:print "$at(2,59909,59910)"} true;
L4:

    // assert false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:186:5+1025
    assume {:print "$at(3,8080,9105)"} true;
    assert {:msg "assert_failed(3,8080,9105): abort not covered by any of the `aborts_if` clauses"}
      false;

    // abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:186:5+1025
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun stake::configure_allowed_validators [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1336:5+563
procedure {:timeLimit 40} $1_stake_configure_allowed_validators$verify(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_stake_AllowedValidators);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: bool;
    var $t10: $1_stake_AllowedValidators;
    var $t11: $Mutation ($1_stake_AllowedValidators);
    var $t12: $Mutation (Vec (int));
    var $t13: $1_stake_AllowedValidators;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_stake_AllowedValidators': $1_stake_AllowedValidators;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1336:5+1
    assume {:print "$at(2,63665,63666)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1336:5+1
    assume $IsValid'vec'address''($t1);

    // assume forall $rsc: ResourceDomain<stake::AllowedValidators>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1336:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AllowedValidators_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AllowedValidators_$memory, $a_0);
    ($IsValid'$1_stake_AllowedValidators'($rsc))));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:320:9+66
    assume {:print "$at(3,14966,15032)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // trace_local[aptos_framework]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1336:5+1
    assume {:print "$at(2,63665,63666)"} true;
    assume {:print "$track_local(38,7,0):", $t0} $t0 == $t0;

    // trace_local[accounts]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1336:5+1
    assume {:print "$track_local(38,7,1):", $t1} $t1 == $t1;

    // $t5 := signer::address_of($t0) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1337:39+35
    assume {:print "$at(2,63825,63860)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,63825,63860)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,7):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_local[aptos_framework_address]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1337:13+23
    assume {:print "$track_local(38,7,3):", $t5} $t5 == $t5;

    // opaque begin: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
    assume {:print "$at(2,63870,63927)"} true;

    // assume Identical($t7, Neq<address>(signer::$address_of($t0), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
    assume ($t7 == !$IsEqual'address'($1_signer_$address_of($t0), 1));

    // if ($t7) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
    if ($t7) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
L6:

    // assume And(Neq<address>(signer::$address_of($t0), 1), Eq(5, $t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
    assume {:print "$at(2,63870,63927)"} true;
    assume (!$IsEqual'address'($1_signer_$address_of($t0), 1) && $IsEqual'num'(5, $t6));

    // trace_abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
    assume {:print "$at(2,63870,63927)"} true;
    assume {:print "$track_abort(38,7):", $t6} $t6 == $t6;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
    goto L4;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
L5:

    // opaque end: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1338:9+57
    assume {:print "$at(2,63870,63927)"} true;

    // $t8 := exists<stake::AllowedValidators>($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1339:14+6
    assume {:print "$at(2,63942,63948)"} true;
    $t8 := $ResourceExists($1_stake_AllowedValidators_$memory, $t5);

    // $t9 := !($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1339:13+1
    call $t9 := $Not($t8);

    // if ($t9) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1339:9+285
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1340:21+15
    assume {:print "$at(2,64016,64031)"} true;
L1:

    // $t10 := pack stake::AllowedValidators($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1340:38+30
    assume {:print "$at(2,64033,64063)"} true;
    $t10 := $1_stake_AllowedValidators($t1);

    // move_to<stake::AllowedValidators>($t10, $t0) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1340:13+7
    if ($ResourceExists($1_stake_AllowedValidators_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_AllowedValidators_$memory := $ResourceUpdate($1_stake_AllowedValidators_$memory, $addr#$signer($t0), $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(2,64008,64015)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,7):", $t6} $t6 == $t6;
        goto L4;
    }

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1339:9+285
    assume {:print "$at(2,63937,64222)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1342:13+75
    assume {:print "$at(2,64095,64170)"} true;
L0:

    // $t11 := borrow_global<stake::AllowedValidators>($t5) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1342:27+17
    assume {:print "$at(2,64109,64126)"} true;
    if (!$ResourceExists($1_stake_AllowedValidators_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_stake_AllowedValidators_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(2,64109,64126)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,7):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_local[allowed]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1342:17+7
    $temp_0'$1_stake_AllowedValidators' := $Dereference($t11);
    assume {:print "$track_local(38,7,2):", $temp_0'$1_stake_AllowedValidators'} $temp_0'$1_stake_AllowedValidators' == $temp_0'$1_stake_AllowedValidators';

    // $t12 := borrow_field<stake::AllowedValidators>.accounts($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1343:13+16
    assume {:print "$at(2,64184,64200)"} true;
    $t12 := $ChildMutation($t11, 0, $accounts#$1_stake_AllowedValidators($Dereference($t11)));

    // write_ref($t12, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1343:13+27
    $t12 := $UpdateMutation($t12, $t1);

    // write_back[Reference($t11).accounts (vector<address>)]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1343:13+27
    $t11 := $UpdateMutation($t11, $Update'$1_stake_AllowedValidators'_accounts($Dereference($t11), $Dereference($t12)));

    // write_back[stake::AllowedValidators@]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1343:13+27
    $1_stake_AllowedValidators_$memory := $ResourceUpdate($1_stake_AllowedValidators_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1339:9+285
    assume {:print "$at(2,63937,64222)"} true;
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1345:5+1
    assume {:print "$at(2,64227,64228)"} true;
L3:

    // assume Identical($t13, global<stake::AllowedValidators>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:322:9+70
    assume {:print "$at(3,15131,15201)"} true;
    assume ($t13 == $ResourceValue($1_stake_AllowedValidators_$memory, $t4));

    // assert Not(Not(system_addresses::$is_aptos_framework_address[]($t4))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:321:9+81
    assume {:print "$at(3,15041,15122)"} true;
    assert {:msg "assert_failed(3,15041,15122): function does not abort under this condition"}
      !!$1_system_addresses_$is_aptos_framework_address($t4);

    // assert Eq<vector<address>>(select stake::AllowedValidators.accounts($t13), $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:324:9+37
    assume {:print "$at(3,15303,15340)"} true;
    assert {:msg "assert_failed(3,15303,15340): post-condition does not hold"}
      $IsEqual'vec'address''($accounts#$1_stake_AllowedValidators($t13), $t1);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:324:9+37
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1345:5+1
    assume {:print "$at(2,64227,64228)"} true;
L4:

    // assert Not(system_addresses::$is_aptos_framework_address[]($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:319:5+477
    assume {:print "$at(3,14869,15346)"} true;
    assert {:msg "assert_failed(3,14869,15346): abort not covered by any of the `aborts_if` clauses"}
      !$1_system_addresses_$is_aptos_framework_address($t4);

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:319:5+477
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::deposit_owner_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:556:5+230
procedure {:timeLimit 40} $1_stake_deposit_owner_cap$verify(_$t0: $signer, _$t1: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t0: $signer;
    var $t1: $1_stake_OwnerCapability;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'signer': $signer;
    var $1_stake_OwnerCapability_$memory#22: $Memory $1_stake_OwnerCapability;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:556:5+1
    assume {:print "$at(2,25262,25263)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:556:5+1
    assume $IsValid'$1_stake_OwnerCapability'($t1);

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:556:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume Identical($t2, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:45:9+46
    assume {:print "$at(3,2031,2077)"} true;
    assume ($t2 == $1_signer_$address_of($t0));

    // @22 := save_mem(stake::OwnerCapability) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:556:5+1
    assume {:print "$at(2,25262,25263)"} true;
    $1_stake_OwnerCapability_$memory#22 := $1_stake_OwnerCapability_$memory;

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:556:5+1
    assume {:print "$track_local(38,8,0):", $t0} $t0 == $t0;

    // trace_local[owner_cap]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:556:5+1
    assume {:print "$track_local(38,8,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:42+25
    assume {:print "$at(2,25378,25403)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,25378,25403)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t5 := exists<stake::OwnerCapability>($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:18+6
    $t5 := $ResourceExists($1_stake_OwnerCapability_$memory, $t3);

    // $t6 := !($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:17+1
    call $t6 := $Not($t5);

    // if ($t6) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:9+105
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:9+105
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:9+105
    assume {:print "$at(2,25345,25450)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:9+105
L0:

    // $t7 := 16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:87+25
    assume {:print "$at(2,25423,25448)"} true;
    $t7 := 16;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:70+43
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(2,25406,25449)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:9+105
    assume {:print "$at(2,25345,25450)"} true;
    assume {:print "$track_abort(38,8):", $t8} $t8 == $t8;

    // $t4 := move($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:9+105
    $t4 := $t8;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:557:9+105
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:558:17+5
    assume {:print "$at(2,25468,25473)"} true;
L2:

    // move_to<stake::OwnerCapability>($t1, $t0) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:558:9+7
    assume {:print "$at(2,25460,25467)"} true;
    if ($ResourceExists($1_stake_OwnerCapability_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_OwnerCapability_$memory := $ResourceUpdate($1_stake_OwnerCapability_$memory, $addr#$signer($t0), $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,25460,25467)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:559:5+1
    assume {:print "$at(2,25491,25492)"} true;
L3:

    // assert Not(exists[@22]<stake::OwnerCapability>($t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:46:9+49
    assume {:print "$at(3,2086,2135)"} true;
    assert {:msg "assert_failed(3,2086,2135): function does not abort under this condition"}
      !$ResourceExists($1_stake_OwnerCapability_$memory#22, $t2);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:46:9+49
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:559:5+1
    assume {:print "$at(2,25491,25492)"} true;
L4:

    // assert exists[@22]<stake::OwnerCapability>($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:44:5+187
    assume {:print "$at(3,1954,2141)"} true;
    assert {:msg "assert_failed(3,1954,2141): abort not covered by any of the `aborts_if` clauses"}
      $ResourceExists($1_stake_OwnerCapability_$memory#22, $t2);

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:44:5+187
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::destroy_owner_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:562:5+125
procedure {:timeLimit 40} $1_stake_destroy_owner_cap$verify(_$t0: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t1: int;
    var $t0: $1_stake_OwnerCapability;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:562:5+1
    assume {:print "$at(2,25527,25528)"} true;
    assume $IsValid'$1_stake_OwnerCapability'($t0);

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:562:5+1
    assume {:print "$track_local(38,9,0):", $t0} $t0 == $t0;

    // $t1 := unpack stake::OwnerCapability($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:563:13+35
    assume {:print "$at(2,25598,25633)"} true;
    $t1 := $pool_address#$1_stake_OwnerCapability($t0);

    // destroy($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:563:45+1

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:564:5+1
    assume {:print "$at(2,25651,25652)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:564:5+1
    assume {:print "$at(2,25651,25652)"} true;
    return;

}

// fun stake::distribute_rewards [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+795
procedure {:inline 1} $1_stake_distribute_rewards(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: int, _$t2: int, _$t3: int, _$t4: int) returns ($ret0: int, $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t5: int;
    var $t6: $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
    var $t7: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t8: int;
    var $t9: int;
    var $t10: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: $1_stake_AptosCoinCapabilities;
    var $t20: $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
    var $t21: int;
    var $t22: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'': $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_MintCapability'$1_aptos_coin_AptosCoin'': $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // bytecode translation starts here
    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assume Le($t3, 1000000) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:163:9+42
    assume {:print "$at(3,7135,7177)"} true;
    assume ($t3 <= 1000000);

    // assume Gt($t4, 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:164:9+38
    assume {:print "$at(3,7186,7224)"} true;
    assume ($t4 > 0);

    // assume Le($t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:165:9+50
    assume {:print "$at(3,7233,7283)"} true;
    assume ($t3 <= $t4);

    // assume Le($t1, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:166:9+57
    assume {:print "$at(3,7292,7349)"} true;
    assume ($t1 <= $t2);

    // trace_local[stake]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$at(2,60006,60007)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(38,10,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[num_successful_proposals]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$track_local(38,10,1):", $t1} $t1 == $t1;

    // trace_local[num_total_proposals]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$track_local(38,10,2):", $t2} $t2 == $t2;

    // trace_local[rewards_rate]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$track_local(38,10,3):", $t3} $t3 == $t3;

    // trace_local[rewards_rate_denominator]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$track_local(38,10,4):", $t4} $t4 == $t4;

    // $t10 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1253:40+5
    assume {:print "$at(2,60289,60294)"} true;
    $t10 := $Dereference($t0);

    // $t11 := coin::value<aptos_coin::AptosCoin>($t10) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1253:28+18
    call $t11 := $1_coin_value'$1_aptos_coin_AptosCoin'($t10);
    if ($abort_flag) {
        assume {:print "$at(2,60277,60295)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,10):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_local[stake_amount]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1253:13+12
    assume {:print "$track_local(38,10,9):", $t11} $t11 == $t11;

    // $t13 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:49+1
    assume {:print "$at(2,60345,60346)"} true;
    $t13 := 0;
    assume $IsValid'u64'($t13);

    // $t14 := >($t11, $t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:47+1
    call $t14 := $Gt($t11, $t13);

    // if ($t14) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:30+202
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:38+12
    assume {:print "$at(2,60387,60399)"} true;
L1:

    // assume Le($t3, 1000000) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:13+125
    assume {:print "$at(2,60362,60487)"} true;
    assume ($t3 <= 1000000);

    // assume Gt($t4, 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:13+125
    assume ($t4 > 0);

    // assume Le($t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:13+125
    assume ($t3 <= $t4);

    // assume Le($t1, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:13+125
    assume ($t1 <= $t2);

    // $t5 := opaque begin: stake::calculate_rewards_amount($t11, $t1, $t2, $t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:13+125

    // assume WellFormed($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:13+125
    assume $IsValid'u64'($t5);

    // assume Eq<u64>($t5, stake::spec_rewards_amount($t11, $t1, $t2, $t3, $t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:13+125
    assume $IsEqual'u64'($t5, $1_stake_spec_rewards_amount($t11, $t1, $t2, $t3, $t4));

    // $t5 := opaque end: stake::calculate_rewards_amount($t11, $t1, $t2, $t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:13+125

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:30+202
    assume {:print "$at(2,60326,60528)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1257:13+1
    assume {:print "$at(2,60517,60518)"} true;
L0:

    // $t15 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1257:13+1
    assume {:print "$at(2,60517,60518)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t5 := $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:30+202
    assume {:print "$at(2,60326,60528)"} true;
    $t5 := $t15;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:30+202
L2:

    // trace_local[rewards_amount]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:13+14
    assume {:print "$at(2,60309,60323)"} true;
    assume {:print "$track_local(38,10,8):", $t5} $t5 == $t5;

    // $t16 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:30+1
    assume {:print "$at(2,60559,60560)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t17 := >($t5, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:28+1
    call $t17 := $Gt($t5, $t16);

    // if ($t17) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:9+233
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:66+16
    assume {:print "$at(2,60629,60645)"} true;
L4:

    // $t18 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:66+16
    assume {:print "$at(2,60629,60645)"} true;
    $t18 := 1;
    assume $IsValid'address'($t18);

    // $t19 := get_global<stake::AptosCoinCapabilities>($t18) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:29+13
    if (!$ResourceExists($1_stake_AptosCoinCapabilities_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(2,60592,60605)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,10):", $t12} $t12 == $t12;
        goto L7;
    }

    // $t20 := get_field<stake::AptosCoinCapabilities>.mint_cap($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:28+64
    $t20 := $mint_cap#$1_stake_AptosCoinCapabilities($t19);

    // trace_local[mint_cap]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:17+8
    assume {:print "$track_local(38,10,6):", $t20} $t20 == $t20;

    // assume Identical($t21, select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:13:9+58
    assume {:print "$at(95,271,329)"} true;
    assume ($t21 == $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))));

    // $t22 := opaque begin: coin::mint<aptos_coin::AptosCoin>($t5, $t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36
    assume {:print "$at(2,60683,60719)"} true;

    // modifies global<coin::CoinInfo<aptos_coin::AptosCoin>>($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'';
        $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t21, $temp_0'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'');
    } else {
        $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory := $ResourceRemove($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t21);
    }

    // assume WellFormed($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t22);

    // assume Eq<u64>(select coin::Coin.value($t22), $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36
    assume $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t22), $t5);

    // $t22 := opaque end: coin::mint<aptos_coin::AptosCoin>($t5, $t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36

    // trace_local[rewards]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:17+7
    assume {:print "$track_local(38,10,7):", $t22} $t22 == $t22;

    // coin::merge<aptos_coin::AptosCoin>($t0, $t22) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1262:13+27
    assume {:print "$at(2,60733,60760)"} true;
    call $t0 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t0, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,60733,60760)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,10):", $t12} $t12 == $t12;
        goto L7;
    }

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1262:40+1
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:9+233
    assume {:print "$at(2,60538,60771)"} true;
L3:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:9+233
    assume {:print "$at(2,60538,60771)"} true;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1264:9+14
    assume {:print "$at(2,60781,60795)"} true;
L5:

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1264:9+14
    assume {:print "$at(2,60781,60795)"} true;
    assume {:print "$track_return(38,10,0):", $t5} $t5 == $t5;

    // trace_local[stake]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1264:9+14
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(38,10,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1265:5+1
    assume {:print "$at(2,60800,60801)"} true;
L6:

    // return $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1265:5+1
    assume {:print "$at(2,60800,60801)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1265:5+1
L7:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1265:5+1
    assume {:print "$at(2,60800,60801)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun stake::distribute_rewards [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+795
procedure {:timeLimit 40} $1_stake_distribute_rewards$verify(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: int, _$t2: int, _$t3: int, _$t4: int) returns ($ret0: int, $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t5: int;
    var $t6: $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
    var $t7: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t8: int;
    var $t9: int;
    var $t10: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t11: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: $1_stake_AptosCoinCapabilities;
    var $t21: $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
    var $t22: int;
    var $t23: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'': $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_MintCapability'$1_aptos_coin_AptosCoin'': $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();
    assume l#$Mutation($t0) == $Param(0);

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$at(2,60006,60007)"} true;
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($Dereference($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume $IsValid'u64'($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume $IsValid'u64'($t3);

    // assume WellFormed($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume $IsValid'u64'($t4);

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingRewardsConfig>(): And(WellFormed($rsc), And(And(And(fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.rewards_rate($rsc), fixed_point64::spec_create_from_u128(1)), fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.min_rewards_rate($rsc), select staking_config::StakingRewardsConfig.rewards_rate($rsc))), Eq<u64>(select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($rsc), 31536000)), Le(fixed_point64::spec_ceil(select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($rsc)), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingRewardsConfig'($rsc) && ((($1_fixed_point64_spec_less_or_equal($rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $1_fixed_point64_spec_create_from_u128(1)) && $1_fixed_point64_spec_less_or_equal($min_rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $rewards_rate#$1_staking_config_StakingRewardsConfig($rsc))) && $IsEqual'u64'($rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($rsc), 31536000)) && ($1_fixed_point64_spec_ceil($rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($rsc)) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+795
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+795
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assume Le($t3, 1000000) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:163:9+42
    assume {:print "$at(3,7135,7177)"} true;
    assume ($t3 <= 1000000);

    // assume Gt($t4, 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:164:9+38
    assume {:print "$at(3,7186,7224)"} true;
    assume ($t4 > 0);

    // assume Le($t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:165:9+50
    assume {:print "$at(3,7233,7283)"} true;
    assume ($t3 <= $t4);

    // assume Le($t1, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:166:9+57
    assume {:print "$at(3,7292,7349)"} true;
    assume ($t1 <= $t2);

    // $t10 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:166:9+57
    $t10 := $Dereference($t0);

    // trace_local[stake]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$at(2,60006,60007)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(38,10,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[num_successful_proposals]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$track_local(38,10,1):", $t1} $t1 == $t1;

    // trace_local[num_total_proposals]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$track_local(38,10,2):", $t2} $t2 == $t2;

    // trace_local[rewards_rate]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$track_local(38,10,3):", $t3} $t3 == $t3;

    // trace_local[rewards_rate_denominator]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1246:5+1
    assume {:print "$track_local(38,10,4):", $t4} $t4 == $t4;

    // $t11 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1253:40+5
    assume {:print "$at(2,60289,60294)"} true;
    $t11 := $Dereference($t0);

    // $t12 := coin::value<aptos_coin::AptosCoin>($t11) on_abort goto L7 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1253:28+18
    call $t12 := $1_coin_value'$1_aptos_coin_AptosCoin'($t11);
    if ($abort_flag) {
        assume {:print "$at(2,60277,60295)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,10):", $t13} $t13 == $t13;
        goto L7;
    }

    // trace_local[stake_amount]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1253:13+12
    assume {:print "$track_local(38,10,9):", $t12} $t12 == $t12;

    // $t14 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:49+1
    assume {:print "$at(2,60345,60346)"} true;
    $t14 := 0;
    assume $IsValid'u64'($t14);

    // $t15 := >($t12, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:47+1
    call $t15 := $Gt($t12, $t14);

    // if ($t15) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:30+202
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1255:38+12
    assume {:print "$at(2,60387,60399)"} true;
L1:

    // assert Le($t3, 1000000) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:188:9+42
    assume {:print "$at(3,8143,8185)"} true;
    assert {:msg "assert_failed(3,8143,8185): precondition does not hold at this call"}
      ($t3 <= 1000000);

    // assert Gt($t4, 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:189:9+38
    assume {:print "$at(3,8194,8232)"} true;
    assert {:msg "assert_failed(3,8194,8232): precondition does not hold at this call"}
      ($t4 > 0);

    // assert Le($t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:190:9+50
    assume {:print "$at(3,8241,8291)"} true;
    assert {:msg "assert_failed(3,8241,8291): precondition does not hold at this call"}
      ($t3 <= $t4);

    // assert Le($t1, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:191:9+57
    assume {:print "$at(3,8300,8357)"} true;
    assert {:msg "assert_failed(3,8300,8357): precondition does not hold at this call"}
      ($t1 <= $t2);

    // $t5 := opaque begin: stake::calculate_rewards_amount($t12, $t1, $t2, $t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:191:9+57

    // assume WellFormed($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:191:9+57
    assume $IsValid'u64'($t5);

    // assume Eq<u64>($t5, stake::spec_rewards_amount($t12, $t1, $t2, $t3, $t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:191:9+57
    assume $IsEqual'u64'($t5, $1_stake_spec_rewards_amount($t12, $t1, $t2, $t3, $t4));

    // $t5 := opaque end: stake::calculate_rewards_amount($t12, $t1, $t2, $t3, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:191:9+57

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:30+202
    assume {:print "$at(2,60326,60528)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1257:13+1
    assume {:print "$at(2,60517,60518)"} true;
L0:

    // $t16 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1257:13+1
    assume {:print "$at(2,60517,60518)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t5 := $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:30+202
    assume {:print "$at(2,60326,60528)"} true;
    $t5 := $t16;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:30+202
L2:

    // trace_local[rewards_amount]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1254:13+14
    assume {:print "$at(2,60309,60323)"} true;
    assume {:print "$track_local(38,10,8):", $t5} $t5 == $t5;

    // $t17 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:30+1
    assume {:print "$at(2,60559,60560)"} true;
    $t17 := 0;
    assume $IsValid'u64'($t17);

    // $t18 := >($t5, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:28+1
    call $t18 := $Gt($t5, $t17);

    // if ($t18) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:9+233
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:66+16
    assume {:print "$at(2,60629,60645)"} true;
L4:

    // $t19 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:66+16
    assume {:print "$at(2,60629,60645)"} true;
    $t19 := 1;
    assume $IsValid'address'($t19);

    // $t20 := get_global<stake::AptosCoinCapabilities>($t19) on_abort goto L7 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:29+13
    if (!$ResourceExists($1_stake_AptosCoinCapabilities_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(2,60592,60605)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,10):", $t13} $t13 == $t13;
        goto L7;
    }

    // $t21 := get_field<stake::AptosCoinCapabilities>.mint_cap($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:28+64
    $t21 := $mint_cap#$1_stake_AptosCoinCapabilities($t20);

    // trace_local[mint_cap]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1260:17+8
    assume {:print "$track_local(38,10,6):", $t21} $t21 == $t21;

    // assume Identical($t22, select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:13:9+58
    assume {:print "$at(95,271,329)"} true;
    assume ($t22 == $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))));

    // $t23 := opaque begin: coin::mint<aptos_coin::AptosCoin>($t5, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36
    assume {:print "$at(2,60683,60719)"} true;

    // modifies global<coin::CoinInfo<aptos_coin::AptosCoin>>($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'';
        $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t22, $temp_0'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'');
    } else {
        $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory := $ResourceRemove($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t22);
    }

    // assume WellFormed($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t23);

    // assume Eq<u64>(select coin::Coin.value($t23), $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36
    assume $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t23), $t5);

    // $t23 := opaque end: coin::mint<aptos_coin::AptosCoin>($t5, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:27+36

    // trace_local[rewards]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1261:17+7
    assume {:print "$track_local(38,10,7):", $t23} $t23 == $t23;

    // coin::merge<aptos_coin::AptosCoin>($t0, $t23) on_abort goto L7 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1262:13+27
    assume {:print "$at(2,60733,60760)"} true;
    call $t0 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t0, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,60733,60760)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,10):", $t13} $t13 == $t13;
        goto L7;
    }

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1262:40+1
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:9+233
    assume {:print "$at(2,60538,60771)"} true;
L3:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1259:9+233
    assume {:print "$at(2,60538,60771)"} true;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1264:9+14
    assume {:print "$at(2,60781,60795)"} true;
L5:

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1264:9+14
    assume {:print "$at(2,60781,60795)"} true;
    assume {:print "$track_return(38,10,0):", $t5} $t5 == $t5;

    // trace_local[stake]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1264:9+14
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(38,10,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1265:5+1
    assume {:print "$at(2,60800,60801)"} true;
L6:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:167:9+16
    assume {:print "$at(3,7358,7374)"} true;
    assert {:msg "assert_failed(3,7358,7374): function does not abort under this condition"}
      !false;

    // assert Implies(Gt(select coin::Coin.value($t10), 0), Eq<u64>($t5, stake::spec_rewards_amount(select coin::Coin.value($t10), $t1, $t2, $t3, $t4))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:168:9+261
    assume {:print "$at(3,7383,7644)"} true;
    assert {:msg "assert_failed(3,7383,7644): post-condition does not hold"}
      (($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t10) > 0) ==> $IsEqual'u64'($t5, $1_stake_spec_rewards_amount($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t10), $t1, $t2, $t3, $t4)));

    // assert Implies(Gt(select coin::Coin.value($t10), 0), Eq<u64>(select coin::Coin.value($t0), Add(select coin::Coin.value($t10), stake::spec_rewards_amount(select coin::Coin.value($t10), $t1, $t2, $t3, $t4)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:175:9+285
    assume {:print "$at(3,7653,7938)"} true;
    assert {:msg "assert_failed(3,7653,7938): post-condition does not hold"}
      (($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t10) > 0) ==> $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)), ($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t10) + $1_stake_spec_rewards_amount($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t10), $t1, $t2, $t3, $t4))));

    // assert Implies(Eq<u64>(select coin::Coin.value($t10), 0), Eq<u64>($t5, 0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:182:9+46
    assume {:print "$at(3,7947,7993)"} true;
    assert {:msg "assert_failed(3,7947,7993): post-condition does not hold"}
      ($IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t10), 0) ==> $IsEqual'u64'($t5, 0));

    // assert Implies(Eq<u64>(select coin::Coin.value($t10), 0), Eq<u64>(select coin::Coin.value($t0), select coin::Coin.value($t10))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:183:9+66
    assume {:print "$at(3,8002,8068)"} true;
    assert {:msg "assert_failed(3,8002,8068): post-condition does not hold"}
      ($IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t10), 0) ==> $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)), $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t10)));

    // return $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:183:9+66
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1265:5+1
    assume {:print "$at(2,60800,60801)"} true;
L7:

    // assert false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:161:5+1010
    assume {:print "$at(3,7064,8074)"} true;
    assert {:msg "assert_failed(3,7064,8074): abort not covered by any of the `aborts_if` clauses"}
      false;

    // abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:161:5+1010
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun stake::extract_owner_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:548:5+247
procedure {:timeLimit 40} $1_stake_extract_owner_cap$verify(_$t0: $signer) returns ($ret0: $1_stake_OwnerCapability)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t0: $signer;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $1_stake_OwnerCapability_$memory#24: $Memory $1_stake_OwnerCapability;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:548:5+1
    assume {:print "$at(2,24878,24879)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:548:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume Identical($t2, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:40:9+46
    assume {:print "$at(3,1837,1883)"} true;
    assume ($t2 == $1_signer_$address_of($t0));

    // @24 := save_mem(stake::OwnerCapability) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:548:5+1
    assume {:print "$at(2,24878,24879)"} true;
    $1_stake_OwnerCapability_$memory#24 := $1_stake_OwnerCapability_$memory;

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:548:5+1
    assume {:print "$track_local(38,11,0):", $t0} $t0 == $t0;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:549:29+25
    assume {:print "$at(2,24995,25020)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24995,25020)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,11):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:549:13+13
    assume {:print "$track_local(38,11,1):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:550:9+38
    assume {:print "$at(2,25030,25068)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(2,25030,25068)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,11):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := move_from<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:551:9+9
    assume {:print "$at(2,25078,25087)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
        $1_stake_OwnerCapability_$memory := $ResourceRemove($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,25078,25087)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,11):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:551:9+41
    assume {:print "$track_return(38,11,0):", $t5} $t5 == $t5;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:552:5+1
    assume {:print "$at(2,25124,25125)"} true;
L1:

    // assert Not(Not(exists[@24]<stake::OwnerCapability>($t2))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:41:9+50
    assume {:print "$at(3,1892,1942)"} true;
    assert {:msg "assert_failed(3,1892,1942): function does not abort under this condition"}
      !!$ResourceExists($1_stake_OwnerCapability_$memory#24, $t2);

    // return $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:41:9+50
    $ret0 := $t5;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:552:5+1
    assume {:print "$at(2,25124,25125)"} true;
L2:

    // assert Not(exists[@24]<stake::OwnerCapability>($t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:39:5+177
    assume {:print "$at(3,1771,1948)"} true;
    assert {:msg "assert_failed(3,1771,1948): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_stake_OwnerCapability_$memory#24, $t2);

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:39:5+177
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::find_validator [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1273:5+451
procedure {:timeLimit 40} $1_stake_find_validator$verify(_$t0: Vec ($1_stake_ValidatorInfo), _$t1: int) returns ($ret0: $1_option_Option'u64')
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: $1_stake_ValidatorInfo;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: $1_option_Option'u64';
    var $t14: int;
    var $t15: $1_option_Option'u64';
    var $t16: $1_option_Option'u64';
    var $t0: Vec ($1_stake_ValidatorInfo);
    var $t1: int;
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_stake_ValidatorInfo'': Vec ($1_stake_ValidatorInfo);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1273:5+1
    assume {:print "$at(2,60981,60982)"} true;
    assume $IsValid'vec'$1_stake_ValidatorInfo''($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1273:5+1
    assume $IsValid'address'($t1);

    // trace_local[v]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1273:5+1
    assume {:print "$track_local(38,12,0):", $t0} $t0 == $t0;

    // trace_local[addr]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1273:5+1
    assume {:print "$track_local(38,12,1):", $t1} $t1 == $t1;

    // $t4 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1274:17+1
    assume {:print "$at(2,61073,61074)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // trace_local[i]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1274:13+1
    assume {:print "$track_local(38,12,2):", $t4} $t4 == $t4;

    // $t5 := vector::length<stake::ValidatorInfo>($t0) on_abort goto L8 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1275:19+17
    assume {:print "$at(2,61094,61111)"} true;
    call $t5 := $1_vector_length'$1_stake_ValidatorInfo'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,61094,61111)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,12):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[len]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1275:13+3
    assume {:print "$track_local(38,12,3):", $t5} $t5 == $t5;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1277:13+86
    assume {:print "$at(2,61142,61228)"} true;
L5:

    // assert Not(exists j: Range(0, $t4): Eq<address>(select stake::ValidatorInfo.addr(Index($t0, j)), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume {:print "$at(2,61165,61214)"} true;
    assert {:msg "assert_failed(2,61165,61214): base case of the loop invariant does not hold"}
      !(var $range_0 := $Range(0, $t4); (exists $i_1: int :: $InRange($range_0, $i_1) && (var j := $i_1;
    ($IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t0, j)), $t1)))));

    // $t2 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    havoc $t2;

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume $IsValid'u64'($t2);

    // $t7 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    havoc $t7;

    // assume WellFormed($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume $IsValid'bool'($t7);

    // $t8 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    havoc $t8;

    // assume WellFormed($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume $IsValid'$1_stake_ValidatorInfo'($t8);

    // $t9 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    havoc $t9;

    // assume WellFormed($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume $IsValid'address'($t9);

    // $t10 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    havoc $t10;

    // assume WellFormed($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume $IsValid'bool'($t10);

    // $t11 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    havoc $t11;

    // assume WellFormed($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    havoc $t12;

    // assume WellFormed($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume $IsValid'u64'($t12);

    // trace_local[i]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(38,12,2):", $t2} $t2 == $t2;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume {:print "$info(): loop invariant holds at current state"} true;
    assume !$abort_flag;

    // assume Not(exists j: Range(0, $t2): Eq<address>(select stake::ValidatorInfo.addr(Index($t0, j)), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume !(var $range_0 := $Range(0, $t2); (exists $i_1: int :: $InRange($range_0, $i_1) && (var j := $i_1;
    ($IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t0, j)), $t1)))));

    // $t7 := <($t2, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1280:15+1
    assume {:print "$at(2,61244,61245)"} true;
    call $t7 := $Lt($t2, $t5);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1276:9+281
    assume {:print "$at(2,61121,61402)"} true;
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1276:9+281
L1:

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1282:32+1
    assume {:print "$at(2,61294,61295)"} true;
L2:

    // $t8 := vector::borrow<stake::ValidatorInfo>($t0, $t2) on_abort goto L8 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1282:17+20
    assume {:print "$at(2,61279,61299)"} true;
    call $t8 := $1_vector_borrow'$1_stake_ValidatorInfo'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,61279,61299)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,12):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t9 := get_field<stake::ValidatorInfo>.addr($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1282:17+25
    $t9 := $addr#$1_stake_ValidatorInfo($t8);

    // $t10 := ==($t9, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1282:43+2
    $t10 := $IsEqual'address'($t9, $t1);

    // if ($t10) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1282:13+93
    if ($t10) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:17+22
    assume {:print "$at(2,61332,61354)"} true;
L4:

    // $t13 := opaque begin: option::some<u64>($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:24+15
    assume {:print "$at(2,61339,61354)"} true;

    // $t14 := copy($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:24+15
    $t14 := $t2;

    // assume And(WellFormed($t13), Le(Len<u64>(select option::Option.vec($t13)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:24+15
    assume ($IsValid'$1_option_Option'u64''($t13) && (LenVec($vec#$1_option_Option'u64'($t13)) <= 1));

    // assume Eq<option::Option<u64>>($t13, option::spec_some<u64>($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:24+15
    assume $IsEqual'$1_option_Option'u64''($t13, $1_option_spec_some'u64'($t14));

    // $t13 := opaque end: option::some<u64>($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:24+15

    // trace_return[0]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:17+22
    assume {:print "$track_return(38,12,0):", $t13} $t13 == $t13;

    // $t15 := move($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:17+22
    $t15 := $t13;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1283:17+22
    goto L7;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1285:17+1
    assume {:print "$at(2,61386,61387)"} true;
L3:

    // $t11 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1285:21+1
    assume {:print "$at(2,61390,61391)"} true;
    $t11 := 1;
    assume $IsValid'u64'($t11);

    // $t12 := +($t2, $t11) on_abort goto L8 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1285:19+1
    call $t12 := $AddU64($t2, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,61388,61389)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,12):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[i]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1285:13+1
    assume {:print "$track_local(38,12,2):", $t12} $t12 == $t12;

    // goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1285:22+1
    goto L6;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14
    assume {:print "$at(2,61412,61426)"} true;
L0:

    // $t16 := opaque begin: option::none<u64>() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14
    assume {:print "$at(2,61412,61426)"} true;

    // assume And(WellFormed($t16), Le(Len<u64>(select option::Option.vec($t16)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14
    assume ($IsValid'$1_option_Option'u64''($t16) && (LenVec($vec#$1_option_Option'u64'($t16)) <= 1));

    // assume Eq<option::Option<u64>>($t16, option::spec_none<u64>()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14
    assume $IsEqual'$1_option_Option'u64''($t16, $1_option_spec_none'u64'());

    // $t16 := opaque end: option::none<u64>() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14

    // trace_return[0]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14
    assume {:print "$track_return(38,12,0):", $t16} $t16 == $t16;

    // $t15 := move($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14
    $t15 := $t16;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14
    goto L7;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1287:9+14
    // Loop invariant checking block for the loop started with header: L5
L6:

    // assert Not(exists j: Range(0, $t12): Eq<address>(select stake::ValidatorInfo.addr(Index($t0, j)), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume {:print "$at(2,61165,61214)"} true;
    assert {:msg "assert_failed(2,61165,61214): induction case of the loop invariant does not hold"}
      !(var $range_0 := $Range(0, $t12); (exists $i_1: int :: $InRange($range_0, $i_1) && (var j := $i_1;
    ($IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t0, j)), $t1)))));

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1278:17+49
    assume false;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1288:5+1
    assume {:print "$at(2,61431,61432)"} true;
L7:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:211:9+16
    assume {:print "$at(3,9164,9180)"} true;
    assert {:msg "assert_failed(3,9164,9180): function does not abort under this condition"}
      !false;

    // assert Implies(option::$is_none<u64>($t15), forall i: Range(0, Len<stake::ValidatorInfo>($t0)): Neq<address>(select stake::ValidatorInfo.addr(Index($t0, i)), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:212:9+79
    assume {:print "$at(3,9189,9268)"} true;
    assert {:msg "assert_failed(3,9189,9268): post-condition does not hold"}
      ($1_option_$is_none'u64'($t15) ==> (var $range_0 := $Range(0, LenVec($t0)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t0, i)), $t1))))));

    // assert Implies(option::$is_some<u64>($t15), Eq<address>(select stake::ValidatorInfo.addr(Index($t0, option::$borrow<u64>($t15))), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:213:9+75
    assume {:print "$at(3,9277,9352)"} true;
    assert {:msg "assert_failed(3,9277,9352): post-condition does not hold"}
      ($1_option_$is_some'u64'($t15) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t0, $1_option_$borrow'u64'($t15))), $t1));

    // assert Implies(option::$is_some<u64>($t15), stake::spec_contains($t0, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:215:9+59
    assume {:print "$at(3,9435,9494)"} true;
    assert {:msg "assert_failed(3,9435,9494): post-condition does not hold"}
      ($1_option_$is_some'u64'($t15) ==> $1_stake_spec_contains($t0, $t1));

    // return $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:215:9+59
    $ret0 := $t15;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1288:5+1
    assume {:print "$at(2,61431,61432)"} true;
L8:

    // assert false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:209:5+389
    assume {:print "$at(3,9111,9500)"} true;
    assert {:msg "assert_failed(3,9111,9500): abort not covered by any of the `aborts_if` clauses"}
      false;

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:209:5+389
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::generate_validator_info [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+280
procedure {:inline 1} $1_stake_generate_validator_info(_$t0: int, _$t1: $1_stake_StakePool, _$t2: $1_stake_ValidatorConfig) returns ($ret0: $1_stake_ValidatorInfo)
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_stake_ValidatorInfo;
    var $t0: int;
    var $t1: $1_stake_StakePool;
    var $t2: $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_ValidatorInfo': $1_stake_ValidatorInfo;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume {:print "$at(2,61438,61439)"} true;
    assume {:print "$track_local(38,13,0):", $t0} $t0 == $t0;

    // trace_local[stake_pool]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume {:print "$track_local(38,13,1):", $t1} $t1 == $t1;

    // trace_local[config]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume {:print "$track_local(38,13,2):", $t2} $t2 == $t2;

    // $t4 := stake::get_next_epoch_voting_power($t1) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1291:28+39
    assume {:print "$at(2,61574,61613)"} true;
    call $t4 := $1_stake_get_next_epoch_voting_power($t1);
    if ($abort_flag) {
        assume {:print "$at(2,61574,61613)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,13):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[voting_power]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1291:13+12
    assume {:print "$track_local(38,13,3):", $t4} $t4 == $t4;

    // $t6 := pack stake::ValidatorInfo($t0, $t4, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1292:9+89
    assume {:print "$at(2,61623,61712)"} true;
    $t6 := $1_stake_ValidatorInfo($t0, $t4, $t2);

    // trace_return[0]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1292:9+89
    assume {:print "$track_return(38,13,0):", $t6} $t6 == $t6;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1297:5+1
    assume {:print "$at(2,61717,61718)"} true;
L1:

    // return $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1297:5+1
    assume {:print "$at(2,61717,61718)"} true;
    $ret0 := $t6;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1297:5+1
L2:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1297:5+1
    assume {:print "$at(2,61717,61718)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun stake::generate_validator_info [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+280
procedure {:timeLimit 40} $1_stake_generate_validator_info$verify(_$t0: int, _$t1: $1_stake_StakePool, _$t2: $1_stake_ValidatorConfig) returns ($ret0: $1_stake_ValidatorInfo)
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_stake_ValidatorInfo;
    var $t0: int;
    var $t1: $1_stake_StakePool;
    var $t2: $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_ValidatorInfo': $1_stake_ValidatorInfo;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume {:print "$at(2,61438,61439)"} true;
    assume $IsValid'address'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume $IsValid'$1_stake_StakePool'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume $IsValid'$1_stake_ValidatorConfig'($t2);

    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume {:print "$track_local(38,13,0):", $t0} $t0 == $t0;

    // trace_local[stake_pool]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume {:print "$track_local(38,13,1):", $t1} $t1 == $t1;

    // trace_local[config]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1290:5+1
    assume {:print "$track_local(38,13,2):", $t2} $t2 == $t2;

    // $t4 := stake::get_next_epoch_voting_power($t1) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1291:28+39
    assume {:print "$at(2,61574,61613)"} true;
    call $t4 := $1_stake_get_next_epoch_voting_power($t1);
    if ($abort_flag) {
        assume {:print "$at(2,61574,61613)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,13):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[voting_power]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1291:13+12
    assume {:print "$track_local(38,13,3):", $t4} $t4 == $t4;

    // $t6 := pack stake::ValidatorInfo($t0, $t4, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1292:9+89
    assume {:print "$at(2,61623,61712)"} true;
    $t6 := $1_stake_ValidatorInfo($t0, $t4, $t2);

    // trace_return[0]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1292:9+89
    assume {:print "$track_return(38,13,0):", $t6} $t6 == $t6;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1297:5+1
    assume {:print "$at(2,61717,61718)"} true;
L1:

    // return $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1297:5+1
    assume {:print "$at(2,61717,61718)"} true;
    $ret0 := $t6;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1297:5+1
L2:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1297:5+1
    assume {:print "$at(2,61717,61718)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun stake::get_current_epoch_proposal_counts [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+406
procedure {:timeLimit 40} $1_stake_get_current_epoch_proposal_counts$verify(_$t0: int) returns ($ret0: int, $ret1: int)
{
    // declare local variables
    var $t1: $1_stake_IndividualValidatorPerformance;
    var $t2: int;
    var $t3: $1_stake_ValidatorPerformance;
    var $t4: int;
    var $t5: Vec ($1_stake_IndividualValidatorPerformance);
    var $t6: $1_stake_IndividualValidatorPerformance;
    var $t7: int;
    var $t8: int;
    var $t0: int;
    var $temp_0'$1_stake_IndividualValidatorPerformance': $1_stake_IndividualValidatorPerformance;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+1
    assume {:print "$at(2,17364,17365)"} true;
    assume $IsValid'u64'($t0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+406
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+406
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // trace_local[validator_index]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:385:5+1
    assume {:print "$track_local(38,14,0):", $t0} $t0 == $t0;

    // $t2 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:386:75+16
    assume {:print "$at(2,17549,17565)"} true;
    $t2 := 1;
    assume $IsValid'address'($t2);

    // $t3 := get_global<stake::ValidatorPerformance>($t2) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:386:39+13
    if (!$ResourceExists($1_stake_ValidatorPerformance_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_stake_ValidatorPerformance_$memory, $t2);
    }
    if ($abort_flag) {
        assume {:print "$at(2,17513,17526)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,14):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_field<stake::ValidatorPerformance>.validators($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:386:38+65
    $t5 := $validators#$1_stake_ValidatorPerformance($t3);

    // $t6 := vector::borrow<stake::IndividualValidatorPerformance>($t5, $t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:387:37+55
    assume {:print "$at(2,17615,17670)"} true;
    call $t6 := $1_vector_borrow'$1_stake_IndividualValidatorPerformance'($t5, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,17615,17670)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,14):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[validator_performance]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:387:13+21
    assume {:print "$track_local(38,14,1):", $t6} $t6 == $t6;

    // $t7 := get_field<stake::IndividualValidatorPerformance>.successful_proposals($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:388:10+42
    assume {:print "$at(2,17681,17723)"} true;
    $t7 := $successful_proposals#$1_stake_IndividualValidatorPerformance($t6);

    // $t8 := get_field<stake::IndividualValidatorPerformance>.failed_proposals($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:388:54+38
    $t8 := $failed_proposals#$1_stake_IndividualValidatorPerformance($t6);

    // trace_return[0]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:388:9+84
    assume {:print "$track_return(38,14,0):", $t7} $t7 == $t7;

    // trace_return[1]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:388:9+84
    assume {:print "$track_return(38,14,1):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:389:5+1
    assume {:print "$at(2,17769,17770)"} true;
L1:

    // return ($t7, $t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:389:5+1
    assume {:print "$at(2,17769,17770)"} true;
    $ret0 := $t7;
    $ret1 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:389:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:389:5+1
    assume {:print "$at(2,17769,17770)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::get_current_epoch_voting_power [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+724
procedure {:timeLimit 40} $1_stake_get_current_epoch_voting_power$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_stake_ValidatorSet;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: bool;
    var $t12: int;
    var $t13: $1_stake_StakePool;
    var $t14: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t15: int;
    var $t16: $1_stake_StakePool;
    var $t17: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t18: int;
    var $t19: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+1
    assume {:print "$at(2,15504,15505)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+724
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+724
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:344:5+1
    assume {:print "$track_local(38,15,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:345:9+38
    assume {:print "$at(2,15617,15655)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,15617,15655)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,15):", $t6} $t6 == $t6;
        goto L7;
    }

    // assume Identical($t7, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t7 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t8 := stake::get_validator_state($t0) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:346:31+33
    assume {:print "$at(2,15687,15720)"} true;
    call $t8 := $1_stake_get_validator_state($t0);
    if ($abort_flag) {
        assume {:print "$at(2,15687,15720)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,15):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[validator_state]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:346:13+15
    assume {:print "$track_local(38,15,5):", $t8} $t8 == $t8;

    // $t9 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:32+23
    assume {:print "$at(2,15845,15868)"} true;
    $t9 := 2;
    assume $IsValid'u64'($t9);

    // $t10 := ==($t8, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:29+2
    $t10 := $IsEqual'u64'($t8, $t9);

    // if ($t10) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:13+98
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:13+98
L1:

    // $t11 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:13+98
    assume {:print "$at(2,15826,15924)"} true;
    $t11 := true;
    assume $IsValid'bool'($t11);

    // $t1 := $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:13+98
    $t1 := $t11;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:13+98
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:59+15
L0:

    // $t12 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:78+33
    assume {:print "$at(2,15891,15924)"} true;
    $t12 := 3;
    assume $IsValid'u64'($t12);

    // $t1 := ==($t8, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:75+2
    $t1 := $IsEqual'u64'($t8, $t12);

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:13+98
L2:

    // if ($t1) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:9+400
    assume {:print "$at(2,15822,16222)"} true;
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:349:70+12
    assume {:print "$at(2,15997,16009)"} true;
L4:

    // $t13 := get_global<stake::StakePool>($t0) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:349:45+13
    assume {:print "$at(2,15972,15985)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,15972,15985)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,15):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t14 := get_field<stake::StakePool>.active($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:349:44+46
    $t14 := $active#$1_stake_StakePool($t13);

    // $t15 := coin::value<aptos_coin::AptosCoin>($t14) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:349:32+59
    call $t15 := $1_coin_value'$1_aptos_coin_AptosCoin'($t14);
    if ($abort_flag) {
        assume {:print "$at(2,15959,16018)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,15):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[active_stake]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:349:17+12
    assume {:print "$track_local(38,15,3):", $t15} $t15 == $t15;

    // $t16 := get_global<stake::StakePool>($t0) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:350:55+13
    assume {:print "$at(2,16074,16087)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,16074,16087)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,15):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t17 := get_field<stake::StakePool>.pending_inactive($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:350:54+56
    $t17 := $pending_inactive#$1_stake_StakePool($t16);

    // $t18 := coin::value<aptos_coin::AptosCoin>($t17) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:350:42+69
    call $t18 := $1_coin_value'$1_aptos_coin_AptosCoin'($t17);
    if ($abort_flag) {
        assume {:print "$at(2,16061,16130)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,15):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[pending_inactive_stake]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:350:17+22
    assume {:print "$track_local(38,15,4):", $t18} $t18 == $t18;

    // $t2 := +($t15, $t18) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:351:26+1
    assume {:print "$at(2,16157,16158)"} true;
    call $t2 := $AddU64($t15, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,16157,16158)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,15):", $t6} $t6 == $t6;
        goto L7;
    }

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:9+400
    assume {:print "$at(2,15822,16222)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:353:13+1
    assume {:print "$at(2,16211,16212)"} true;
L3:

    // $t19 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:353:13+1
    assume {:print "$at(2,16211,16212)"} true;
    $t19 := 0;
    assume $IsValid'u64'($t19);

    // $t2 := $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:9+400
    assume {:print "$at(2,15822,16222)"} true;
    $t2 := $t19;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:9+400
L5:

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:348:9+400
    assume {:print "$at(2,15822,16222)"} true;
    assume {:print "$track_return(38,15,0):", $t2} $t2 == $t2;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:355:5+1
    assume {:print "$at(2,16227,16228)"} true;
L6:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:355:5+1
    assume {:print "$at(2,16227,16228)"} true;
    $ret0 := $t2;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:355:5+1
L7:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:355:5+1
    assume {:print "$at(2,16227,16228)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::get_delegated_voter [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+200
procedure {:timeLimit 40} $1_stake_get_delegated_voter$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_stake_StakePool;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+1
    assume {:print "$at(2,16317,16318)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+200
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+1
    assume {:print "$track_local(38,16,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:360:9+38
    assume {:print "$at(2,16409,16447)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,16409,16447)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,16):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:361:9+13
    assume {:print "$at(2,16457,16470)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,16457,16470)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,16):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<stake::StakePool>.delegated_voter($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:361:9+54
    $t3 := $delegated_voter#$1_stake_StakePool($t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:361:9+54
    assume {:print "$track_return(38,16,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:362:5+1
    assume {:print "$at(2,16516,16517)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:362:5+1
    assume {:print "$at(2,16516,16517)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:362:5+1
L2:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:362:5+1
    assume {:print "$at(2,16516,16517)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun stake::get_lockup_secs [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+194
procedure {:timeLimit 40} $1_stake_get_lockup_secs$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_stake_StakePool;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+1
    assume {:print "$at(2,13232,13233)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+194
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+1
    assume {:print "$track_local(38,17,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:295:9+38
    assume {:print "$at(2,13316,13354)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,13316,13354)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:9+13
    assume {:print "$at(2,13364,13377)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,13364,13377)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<stake::StakePool>.locked_until_secs($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:9+56
    $t3 := $locked_until_secs#$1_stake_StakePool($t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:9+56
    assume {:print "$track_return(38,17,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:297:5+1
    assume {:print "$at(2,13425,13426)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:297:5+1
    assume {:print "$at(2,13425,13426)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:297:5+1
L2:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:297:5+1
    assume {:print "$at(2,13425,13426)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun stake::get_next_epoch_voting_power [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1300:5+471
procedure {:inline 1} $1_stake_get_next_epoch_voting_power(_$t0: $1_stake_StakePool) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $t6: int;
    var $t7: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t8: int;
    var $t9: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t0: $1_stake_StakePool;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[stake_pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1300:5+1
    assume {:print "$at(2,61839,61840)"} true;
    assume {:print "$track_local(38,18,0):", $t0} $t0 == $t0;

    // $t4 := get_field<stake::StakePool>.pending_active($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1301:48+26
    assume {:print "$at(2,61949,61975)"} true;
    $t4 := $pending_active#$1_stake_StakePool($t0);

    // $t5 := coin::value<aptos_coin::AptosCoin>($t4) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1301:36+39
    call $t5 := $1_coin_value'$1_aptos_coin_AptosCoin'($t4);
    if ($abort_flag) {
        assume {:print "$at(2,61937,61976)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[value_pending_active]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1301:13+20
    assume {:print "$track_local(38,18,2):", $t5} $t5 == $t5;

    // $t7 := get_field<stake::StakePool>.active($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1302:40+18
    assume {:print "$at(2,62017,62035)"} true;
    $t7 := $active#$1_stake_StakePool($t0);

    // $t8 := coin::value<aptos_coin::AptosCoin>($t7) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1302:28+31
    call $t8 := $1_coin_value'$1_aptos_coin_AptosCoin'($t7);
    if ($abort_flag) {
        assume {:print "$at(2,62005,62036)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[value_active]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1302:13+12
    assume {:print "$track_local(38,18,1):", $t8} $t8 == $t8;

    // $t9 := get_field<stake::StakePool>.pending_inactive($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1303:50+28
    assume {:print "$at(2,62087,62115)"} true;
    $t9 := $pending_inactive#$1_stake_StakePool($t0);

    // $t10 := coin::value<aptos_coin::AptosCoin>($t9) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1303:38+41
    call $t10 := $1_coin_value'$1_aptos_coin_AptosCoin'($t9);
    if ($abort_flag) {
        assume {:print "$at(2,62075,62116)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[value_pending_inactive]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1303:13+22
    assume {:print "$track_local(38,18,3):", $t10} $t10 == $t10;

    // assume Le(Add(Add($t5, $t8), $t10), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1305:13+79
    assume {:print "$at(2,62145,62224)"} true;
    assume ((($t5 + $t8) + $t10) <= 18446744073709551615);

    // $t11 := +($t5, $t8) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1307:30+1
    assume {:print "$at(2,62265,62266)"} true;
    call $t11 := $AddU64($t5, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,62265,62266)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // $t12 := +($t11, $t10) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1307:45+1
    call $t12 := $AddU64($t11, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,62280,62281)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_return[0]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1307:9+60
    assume {:print "$track_return(38,18,0):", $t12} $t12 == $t12;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1308:5+1
    assume {:print "$at(2,62309,62310)"} true;
L1:

    // return $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1308:5+1
    assume {:print "$at(2,62309,62310)"} true;
    $ret0 := $t12;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1308:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1308:5+1
    assume {:print "$at(2,62309,62310)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::get_next_epoch_voting_power [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1300:5+471
procedure {:timeLimit 40} $1_stake_get_next_epoch_voting_power$verify(_$t0: $1_stake_StakePool) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $t6: int;
    var $t7: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t8: int;
    var $t9: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t0: $1_stake_StakePool;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1300:5+1
    assume {:print "$at(2,61839,61840)"} true;
    assume $IsValid'$1_stake_StakePool'($t0);

    // trace_local[stake_pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1300:5+1
    assume {:print "$track_local(38,18,0):", $t0} $t0 == $t0;

    // $t4 := get_field<stake::StakePool>.pending_active($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1301:48+26
    assume {:print "$at(2,61949,61975)"} true;
    $t4 := $pending_active#$1_stake_StakePool($t0);

    // $t5 := coin::value<aptos_coin::AptosCoin>($t4) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1301:36+39
    call $t5 := $1_coin_value'$1_aptos_coin_AptosCoin'($t4);
    if ($abort_flag) {
        assume {:print "$at(2,61937,61976)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[value_pending_active]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1301:13+20
    assume {:print "$track_local(38,18,2):", $t5} $t5 == $t5;

    // $t7 := get_field<stake::StakePool>.active($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1302:40+18
    assume {:print "$at(2,62017,62035)"} true;
    $t7 := $active#$1_stake_StakePool($t0);

    // $t8 := coin::value<aptos_coin::AptosCoin>($t7) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1302:28+31
    call $t8 := $1_coin_value'$1_aptos_coin_AptosCoin'($t7);
    if ($abort_flag) {
        assume {:print "$at(2,62005,62036)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[value_active]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1302:13+12
    assume {:print "$track_local(38,18,1):", $t8} $t8 == $t8;

    // $t9 := get_field<stake::StakePool>.pending_inactive($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1303:50+28
    assume {:print "$at(2,62087,62115)"} true;
    $t9 := $pending_inactive#$1_stake_StakePool($t0);

    // $t10 := coin::value<aptos_coin::AptosCoin>($t9) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1303:38+41
    call $t10 := $1_coin_value'$1_aptos_coin_AptosCoin'($t9);
    if ($abort_flag) {
        assume {:print "$at(2,62075,62116)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[value_pending_inactive]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1303:13+22
    assume {:print "$track_local(38,18,3):", $t10} $t10 == $t10;

    // assume Le(Add(Add($t5, $t8), $t10), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1305:13+79
    assume {:print "$at(2,62145,62224)"} true;
    assume ((($t5 + $t8) + $t10) <= 18446744073709551615);

    // $t11 := +($t5, $t8) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1307:30+1
    assume {:print "$at(2,62265,62266)"} true;
    call $t11 := $AddU64($t5, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,62265,62266)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // $t12 := +($t11, $t10) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1307:45+1
    call $t12 := $AddU64($t11, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,62280,62281)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,18):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_return[0]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1307:9+60
    assume {:print "$track_return(38,18,0):", $t12} $t12 == $t12;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1308:5+1
    assume {:print "$at(2,62309,62310)"} true;
L1:

    // return $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1308:5+1
    assume {:print "$at(2,62309,62310)"} true;
    $ret0 := $t12;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1308:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1308:5+1
    assume {:print "$at(2,62309,62310)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::get_operator [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:366:5+194
procedure {:timeLimit 40} $1_stake_get_operator$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_stake_StakePool;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:366:5+1
    assume {:print "$at(2,16599,16600)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:366:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:366:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:366:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:366:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:366:5+194
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:366:5+1
    assume {:print "$track_local(38,19,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:367:9+38
    assume {:print "$at(2,16684,16722)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,16684,16722)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,19):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:368:9+13
    assume {:print "$at(2,16732,16745)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,16732,16745)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,19):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<stake::StakePool>.operator_address($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:368:9+55
    $t3 := $operator_address#$1_stake_StakePool($t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:368:9+55
    assume {:print "$track_return(38,19,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:369:5+1
    assume {:print "$at(2,16792,16793)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:369:5+1
    assume {:print "$at(2,16792,16793)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:369:5+1
L2:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:369:5+1
    assume {:print "$at(2,16792,16793)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun stake::get_owned_pool_address [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:372:5+110
procedure {:timeLimit 40} $1_stake_get_owned_pool_address$verify(_$t0: $1_stake_OwnerCapability) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_stake_OwnerCapability;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'address': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:372:5+1
    assume {:print "$at(2,16847,16848)"} true;
    assume $IsValid'$1_stake_OwnerCapability'($t0);

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:372:5+1
    assume {:print "$track_local(38,20,0):", $t0} $t0 == $t0;

    // $t1 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:373:9+22
    assume {:print "$at(2,16929,16951)"} true;
    $t1 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:373:9+22
    assume {:print "$track_return(38,20,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:374:5+1
    assume {:print "$at(2,16956,16957)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:374:5+1
    assume {:print "$at(2,16956,16957)"} true;
    $ret0 := $t1;
    return;

}

// fun stake::get_remaining_lockup_secs [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+370
procedure {:timeLimit 40} $1_stake_get_remaining_lockup_secs$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: $1_stake_StakePool;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume {:print "$at(2,13594,13595)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+370
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+370
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+370
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:302:5+1
    assume {:print "$track_local(38,21,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:303:9+38
    assume {:print "$at(2,13688,13726)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,13688,13726)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,21):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t4 := get_global<stake::StakePool>($t0) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:304:27+13
    assume {:print "$at(2,13754,13767)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,13754,13767)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,21):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t5 := get_field<stake::StakePool>.locked_until_secs($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:304:27+56
    $t5 := $locked_until_secs#$1_stake_StakePool($t4);

    // trace_local[lockup_time]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:304:13+11
    assume {:print "$track_local(38,21,2):", $t5} $t5 == $t5;

    // $t6 := timestamp::now_seconds() on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:305:28+24
    assume {:print "$at(2,13839,13863)"} true;
    call $t6 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,13839,13863)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,21):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t7 := <=($t5, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:305:25+2
    call $t7 := $Le($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:305:9+138
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:306:13+1
    assume {:print "$at(2,13879,13880)"} true;
L1:

    // $t8 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:306:13+1
    assume {:print "$at(2,13879,13880)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // $t1 := $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:305:9+138
    assume {:print "$at(2,13820,13958)"} true;
    $t1 := $t8;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:305:9+138
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:308:13+11
    assume {:print "$at(2,13910,13921)"} true;
L0:

    // $t9 := timestamp::now_seconds() on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:308:27+24
    assume {:print "$at(2,13924,13948)"} true;
    call $t9 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,13924,13948)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,21):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t1 := -($t5, $t9) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:308:25+1
    call $t1 := $Sub($t5, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,13922,13923)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,21):", $t3} $t3 == $t3;
        goto L4;
    }

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:305:9+138
    assume {:print "$at(2,13820,13958)"} true;
L2:

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:305:9+138
    assume {:print "$at(2,13820,13958)"} true;
    assume {:print "$track_return(38,21,0):", $t1} $t1 == $t1;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:310:5+1
    assume {:print "$at(2,13963,13964)"} true;
L3:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:310:5+1
    assume {:print "$at(2,13963,13964)"} true;
    $ret0 := $t1;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:310:5+1
L4:

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:310:5+1
    assume {:print "$at(2,13963,13964)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun stake::get_stake [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+425
procedure {:timeLimit 40} $1_stake_get_stake$verify(_$t0: int) returns ($ret0: int, $ret1: int, $ret2: int, $ret3: int)
{
    // declare local variables
    var $t1: $1_stake_StakePool;
    var $t2: int;
    var $t3: $1_stake_StakePool;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $t6: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t8: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t11: int;
    var $t0: int;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+1
    assume {:print "$at(2,14196,14197)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+425
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+1
    assume {:print "$track_local(38,22,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:316:9+38
    assume {:print "$at(2,14291,14329)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,14291,14329)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:317:26+13
    assume {:print "$at(2,14356,14369)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,14356,14369)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_local[stake_pool]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:317:13+10
    assume {:print "$track_local(38,22,1):", $t3} $t3 == $t3;

    // $t4 := get_field<stake::StakePool>.active($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:319:25+18
    assume {:print "$at(2,14430,14448)"} true;
    $t4 := $active#$1_stake_StakePool($t3);

    // $t5 := coin::value<aptos_coin::AptosCoin>($t4) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:319:13+31
    call $t5 := $1_coin_value'$1_aptos_coin_AptosCoin'($t4);
    if ($abort_flag) {
        assume {:print "$at(2,14418,14449)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t6 := get_field<stake::StakePool>.inactive($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:320:25+20
    assume {:print "$at(2,14475,14495)"} true;
    $t6 := $inactive#$1_stake_StakePool($t3);

    // $t7 := coin::value<aptos_coin::AptosCoin>($t6) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:320:13+33
    call $t7 := $1_coin_value'$1_aptos_coin_AptosCoin'($t6);
    if ($abort_flag) {
        assume {:print "$at(2,14463,14496)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t8 := get_field<stake::StakePool>.pending_active($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:321:25+26
    assume {:print "$at(2,14522,14548)"} true;
    $t8 := $pending_active#$1_stake_StakePool($t3);

    // $t9 := coin::value<aptos_coin::AptosCoin>($t8) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:321:13+39
    call $t9 := $1_coin_value'$1_aptos_coin_AptosCoin'($t8);
    if ($abort_flag) {
        assume {:print "$at(2,14510,14549)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t10 := get_field<stake::StakePool>.pending_inactive($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:322:25+28
    assume {:print "$at(2,14575,14603)"} true;
    $t10 := $pending_inactive#$1_stake_StakePool($t3);

    // $t11 := coin::value<aptos_coin::AptosCoin>($t10) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:322:13+41
    call $t11 := $1_coin_value'$1_aptos_coin_AptosCoin'($t10);
    if ($abort_flag) {
        assume {:print "$at(2,14563,14604)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:9+211
    assume {:print "$at(2,14404,14615)"} true;
    assume {:print "$track_return(38,22,0):", $t5} $t5 == $t5;

    // trace_return[1]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:9+211
    assume {:print "$track_return(38,22,1):", $t7} $t7 == $t7;

    // trace_return[2]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:9+211
    assume {:print "$track_return(38,22,2):", $t9} $t9 == $t9;

    // trace_return[3]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:9+211
    assume {:print "$track_return(38,22,3):", $t11} $t11 == $t11;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:324:5+1
    assume {:print "$at(2,14620,14621)"} true;
L1:

    // return ($t5, $t7, $t9, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:324:5+1
    assume {:print "$at(2,14620,14621)"} true;
    $ret0 := $t5;
    $ret1 := $t7;
    $ret2 := $t9;
    $ret3 := $t11;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:324:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:324:5+1
    assume {:print "$at(2,14620,14621)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::get_validator_config [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:393:5+367
procedure {:timeLimit 40} $1_stake_get_validator_config$verify(_$t0: int) returns ($ret0: Vec (int), $ret1: Vec (int), $ret2: Vec (int))
{
    // declare local variables
    var $t1: $1_stake_ValidatorConfig;
    var $t2: int;
    var $t3: $1_stake_ValidatorConfig;
    var $t4: Vec (int);
    var $t5: Vec (int);
    var $t6: Vec (int);
    var $t0: int;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'address': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:393:5+1
    assume {:print "$at(2,17827,17828)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:393:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:393:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:393:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:393:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:393:5+367
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:393:5+1
    assume {:print "$track_local(38,23,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:394:9+38
    assume {:print "$at(2,17955,17993)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,17955,17993)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_global<stake::ValidatorConfig>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:395:32+13
    assume {:print "$at(2,18026,18039)"} true;
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_stake_ValidatorConfig_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,18026,18039)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_local[validator_config]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:395:13+16
    assume {:print "$track_local(38,23,1):", $t3} $t3 == $t3;

    // $t4 := get_field<stake::ValidatorConfig>.consensus_pubkey($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:396:10+33
    assume {:print "$at(2,18081,18114)"} true;
    $t4 := $consensus_pubkey#$1_stake_ValidatorConfig($t3);

    // $t5 := get_field<stake::ValidatorConfig>.network_addresses($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:396:45+34
    $t5 := $network_addresses#$1_stake_ValidatorConfig($t3);

    // $t6 := get_field<stake::ValidatorConfig>.fullnode_addresses($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:396:81+35
    $t6 := $fullnode_addresses#$1_stake_ValidatorConfig($t3);

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:396:9+108
    assume {:print "$track_return(38,23,0):", $t4} $t4 == $t4;

    // trace_return[1]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:396:9+108
    assume {:print "$track_return(38,23,1):", $t5} $t5 == $t5;

    // trace_return[2]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:396:9+108
    assume {:print "$track_return(38,23,2):", $t6} $t6 == $t6;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:397:5+1
    assume {:print "$at(2,18193,18194)"} true;
L1:

    // return ($t4, $t5, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:397:5+1
    assume {:print "$at(2,18193,18194)"} true;
    $ret0 := $t4;
    $ret1 := $t5;
    $ret2 := $t6;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:397:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:397:5+1
    assume {:print "$at(2,18193,18194)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::get_validator_index [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:378:5+208
procedure {:timeLimit 40} $1_stake_get_validator_index$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_stake_ValidatorConfig;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:378:5+1
    assume {:print "$at(2,17030,17031)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:378:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:378:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:378:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:378:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:378:5+208
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:378:5+1
    assume {:print "$track_local(38,24,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:379:9+38
    assume {:print "$at(2,17124,17162)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,17124,17162)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,24):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<stake::ValidatorConfig>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:380:9+13
    assume {:print "$at(2,17172,17185)"} true;
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_stake_ValidatorConfig_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,17172,17185)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,24):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<stake::ValidatorConfig>.validator_index($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:380:9+60
    $t3 := $validator_index#$1_stake_ValidatorConfig($t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:380:9+60
    assume {:print "$track_return(38,24,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:381:5+1
    assume {:print "$at(2,17237,17238)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:381:5+1
    assume {:print "$at(2,17237,17238)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:381:5+1
L2:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:381:5+1
    assume {:print "$at(2,17237,17238)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun stake::get_validator_state [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+652
procedure {:inline 1} $1_stake_get_validator_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_option_Option'u64';
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_stake_ValidatorSet;
    var $t8: $1_stake_ValidatorSet;
    var $t9: int;
    var $t10: $1_stake_ValidatorSet;
    var $t11: int;
    var $t12: Vec ($1_stake_ValidatorInfo);
    var $t13: $1_option_Option'u64';
    var $t14: bool;
    var $t15: int;
    var $t16: Vec ($1_stake_ValidatorInfo);
    var $t17: $1_option_Option'u64';
    var $t18: bool;
    var $t19: int;
    var $t20: Vec ($1_stake_ValidatorInfo);
    var $t21: $1_option_Option'u64';
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t0: int;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t8, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t8 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume {:print "$at(2,14678,14679)"} true;
    assume {:print "$track_local(38,25,0):", $t0} $t0 == $t0;

    // $t9 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:57+16
    assume {:print "$at(2,14817,14833)"} true;
    $t9 := 1;
    assume $IsValid'address'($t9);

    // $t10 := get_global<stake::ValidatorSet>($t9) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:29+13
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_stake_ValidatorSet_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(2,14789,14802)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,25):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[validator_set]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:13+13
    assume {:print "$track_local(38,25,7):", $t10} $t10 == $t10;

    // $t12 := get_field<stake::ValidatorSet>.pending_active($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:45+29
    assume {:print "$at(2,14880,14909)"} true;
    $t12 := $pending_active#$1_stake_ValidatorSet($t10);

    // $t13 := opaque begin: stake::find_validator($t12, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59

    // assume And(WellFormed($t13), Le(Len<u64>(select option::Option.vec($t13)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($IsValid'$1_option_Option'u64''($t13) && (LenVec($vec#$1_option_Option'u64'($t13)) <= 1));

    // assume Implies(option::$is_none<u64>($t13), forall i: Range(0, Len<stake::ValidatorInfo>($t12)): Neq<address>(select stake::ValidatorInfo.addr(Index($t12, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_none'u64'($t13) ==> (var $range_0 := $Range(0, LenVec($t12)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t12, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t13), Eq<address>(select stake::ValidatorInfo.addr(Index($t12, option::$borrow<u64>($t13))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_some'u64'($t13) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t12, $1_option_$borrow'u64'($t13))), $t0));

    // assume Implies(option::$is_some<u64>($t13), stake::spec_contains($t12, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_some'u64'($t13) ==> $1_stake_spec_contains($t12, $t0));

    // $t13 := opaque end: stake::find_validator($t12, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59

    // $t14 := opaque begin: option::is_some<u64>($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77

    // assume WellFormed($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, option::spec_is_some<u64>($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77
    assume $IsEqual'bool'($t14, $1_option_spec_is_some'u64'($t13));

    // $t14 := opaque end: option::is_some<u64>($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77

    // if ($t14) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
L1:

    // $t15 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:13+31
    assume {:print "$at(2,14941,14972)"} true;
    $t15 := 1;
    assume $IsValid'u64'($t15);

    // $t6 := $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(2,14844,15324)"} true;
    $t6 := $t15;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:53+13
    assume {:print "$at(2,15025,15038)"} true;
L0:

    // $t16 := get_field<stake::ValidatorSet>.active_validators($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:52+32
    assume {:print "$at(2,15024,15056)"} true;
    $t16 := $active_validators#$1_stake_ValidatorSet($t10);

    // $t17 := opaque begin: stake::find_validator($t16, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62

    // assume And(WellFormed($t17), Le(Len<u64>(select option::Option.vec($t17)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($IsValid'$1_option_Option'u64''($t17) && (LenVec($vec#$1_option_Option'u64'($t17)) <= 1));

    // assume Implies(option::$is_none<u64>($t17), forall i: Range(0, Len<stake::ValidatorInfo>($t16)): Neq<address>(select stake::ValidatorInfo.addr(Index($t16, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_none'u64'($t17) ==> (var $range_0 := $Range(0, LenVec($t16)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t16, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t17), Eq<address>(select stake::ValidatorInfo.addr(Index($t16, option::$borrow<u64>($t17))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_some'u64'($t17) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t16, $1_option_$borrow'u64'($t17))), $t0));

    // assume Implies(option::$is_some<u64>($t17), stake::spec_contains($t16, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_some'u64'($t17) ==> $1_stake_spec_contains($t16, $t0));

    // $t17 := opaque end: stake::find_validator($t16, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62

    // $t18 := opaque begin: option::is_some<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80

    // assume WellFormed($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80
    assume $IsValid'bool'($t18);

    // assume Eq<bool>($t18, option::spec_is_some<u64>($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80
    assume $IsEqual'bool'($t18, $1_option_spec_is_some'u64'($t17));

    // $t18 := opaque end: option::is_some<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80

    // if ($t18) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
L4:

    // $t19 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:13+23
    assume {:print "$at(2,15088,15111)"} true;
    $t19 := 2;
    assume $IsValid'u64'($t19);

    // $t5 := $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    assume {:print "$at(2,14988,15324)"} true;
    $t5 := $t19;

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:53+13
    assume {:print "$at(2,15164,15177)"} true;
L3:

    // $t20 := get_field<stake::ValidatorSet>.pending_inactive($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:52+31
    assume {:print "$at(2,15163,15194)"} true;
    $t20 := $pending_inactive#$1_stake_ValidatorSet($t10);

    // $t21 := opaque begin: stake::find_validator($t20, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61

    // assume And(WellFormed($t21), Le(Len<u64>(select option::Option.vec($t21)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($IsValid'$1_option_Option'u64''($t21) && (LenVec($vec#$1_option_Option'u64'($t21)) <= 1));

    // assume Implies(option::$is_none<u64>($t21), forall i: Range(0, Len<stake::ValidatorInfo>($t20)): Neq<address>(select stake::ValidatorInfo.addr(Index($t20, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_none'u64'($t21) ==> (var $range_0 := $Range(0, LenVec($t20)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t20, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t21), Eq<address>(select stake::ValidatorInfo.addr(Index($t20, option::$borrow<u64>($t21))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_some'u64'($t21) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t20, $1_option_$borrow'u64'($t21))), $t0));

    // assume Implies(option::$is_some<u64>($t21), stake::spec_contains($t20, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_some'u64'($t21) ==> $1_stake_spec_contains($t20, $t0));

    // $t21 := opaque end: stake::find_validator($t20, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61

    // $t22 := opaque begin: option::is_some<u64>($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79

    // assume WellFormed($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79
    assume $IsValid'bool'($t22);

    // assume Eq<bool>($t22, option::spec_is_some<u64>($t21)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79
    assume $IsEqual'bool'($t22, $1_option_spec_is_some'u64'($t21));

    // $t22 := opaque end: option::is_some<u64>($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79

    // if ($t22) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:335:13+33
    assume {:print "$at(2,15226,15259)"} true;
L7:

    // $t23 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:335:13+33
    assume {:print "$at(2,15226,15259)"} true;
    $t23 := 3;
    assume $IsValid'u64'($t23);

    // $t4 := $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    assume {:print "$at(2,15127,15324)"} true;
    $t4 := $t23;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:337:13+25
    assume {:print "$at(2,15289,15314)"} true;
L6:

    // $t24 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:337:13+25
    assume {:print "$at(2,15289,15314)"} true;
    $t24 := 4;
    assume $IsValid'u64'($t24);

    // $t4 := $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    assume {:print "$at(2,15127,15324)"} true;
    $t4 := $t24;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
L8:

    // $t5 := $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    assume {:print "$at(2,14988,15324)"} true;
    $t5 := $t4;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
L5:

    // $t6 := $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(2,14844,15324)"} true;
    $t6 := $t5;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
L2:

    // trace_return[0]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(2,14844,15324)"} true;
    assume {:print "$track_return(38,25,0):", $t6} $t6 == $t6;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(2,15329,15330)"} true;
L9:

    // return $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(2,15329,15330)"} true;
    $ret0 := $t6;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
L10:

    // abort($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(2,15329,15330)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun stake::get_validator_state [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+652
procedure {:timeLimit 40} $1_stake_get_validator_state$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_option_Option'u64';
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_stake_ValidatorSet;
    var $t8: $1_stake_ValidatorSet;
    var $t9: int;
    var $t10: $1_stake_ValidatorSet;
    var $t11: int;
    var $t12: Vec ($1_stake_ValidatorInfo);
    var $t13: $1_option_Option'u64';
    var $t14: bool;
    var $t15: int;
    var $t16: Vec ($1_stake_ValidatorInfo);
    var $t17: $1_option_Option'u64';
    var $t18: bool;
    var $t19: int;
    var $t20: Vec ($1_stake_ValidatorInfo);
    var $t21: $1_option_Option'u64';
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t0: int;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume {:print "$at(2,14678,14679)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+652
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+652
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Identical($t8, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t8 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume {:print "$at(2,14678,14679)"} true;
    assume {:print "$track_local(38,25,0):", $t0} $t0 == $t0;

    // $t9 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:57+16
    assume {:print "$at(2,14817,14833)"} true;
    $t9 := 1;
    assume $IsValid'address'($t9);

    // $t10 := get_global<stake::ValidatorSet>($t9) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:29+13
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_stake_ValidatorSet_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(2,14789,14802)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,25):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[validator_set]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:13+13
    assume {:print "$track_local(38,25,7):", $t10} $t10 == $t10;

    // $t12 := get_field<stake::ValidatorSet>.pending_active($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:45+29
    assume {:print "$at(2,14880,14909)"} true;
    $t12 := $pending_active#$1_stake_ValidatorSet($t10);

    // $t13 := opaque begin: stake::find_validator($t12, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59

    // assume And(WellFormed($t13), Le(Len<u64>(select option::Option.vec($t13)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($IsValid'$1_option_Option'u64''($t13) && (LenVec($vec#$1_option_Option'u64'($t13)) <= 1));

    // assume Implies(option::$is_none<u64>($t13), forall i: Range(0, Len<stake::ValidatorInfo>($t12)): Neq<address>(select stake::ValidatorInfo.addr(Index($t12, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_none'u64'($t13) ==> (var $range_0 := $Range(0, LenVec($t12)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t12, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t13), Eq<address>(select stake::ValidatorInfo.addr(Index($t12, option::$borrow<u64>($t13))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_some'u64'($t13) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t12, $1_option_$borrow'u64'($t13))), $t0));

    // assume Implies(option::$is_some<u64>($t13), stake::spec_contains($t12, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_some'u64'($t13) ==> $1_stake_spec_contains($t12, $t0));

    // $t13 := opaque end: stake::find_validator($t12, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59

    // $t14 := opaque begin: option::is_some<u64>($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77

    // assume WellFormed($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, option::spec_is_some<u64>($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77
    assume $IsEqual'bool'($t14, $1_option_spec_is_some'u64'($t13));

    // $t14 := opaque end: option::is_some<u64>($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77

    // if ($t14) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
L1:

    // $t15 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:13+31
    assume {:print "$at(2,14941,14972)"} true;
    $t15 := 1;
    assume $IsValid'u64'($t15);

    // $t6 := $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(2,14844,15324)"} true;
    $t6 := $t15;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:53+13
    assume {:print "$at(2,15025,15038)"} true;
L0:

    // $t16 := get_field<stake::ValidatorSet>.active_validators($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:52+32
    assume {:print "$at(2,15024,15056)"} true;
    $t16 := $active_validators#$1_stake_ValidatorSet($t10);

    // $t17 := opaque begin: stake::find_validator($t16, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62

    // assume And(WellFormed($t17), Le(Len<u64>(select option::Option.vec($t17)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($IsValid'$1_option_Option'u64''($t17) && (LenVec($vec#$1_option_Option'u64'($t17)) <= 1));

    // assume Implies(option::$is_none<u64>($t17), forall i: Range(0, Len<stake::ValidatorInfo>($t16)): Neq<address>(select stake::ValidatorInfo.addr(Index($t16, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_none'u64'($t17) ==> (var $range_0 := $Range(0, LenVec($t16)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t16, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t17), Eq<address>(select stake::ValidatorInfo.addr(Index($t16, option::$borrow<u64>($t17))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_some'u64'($t17) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t16, $1_option_$borrow'u64'($t17))), $t0));

    // assume Implies(option::$is_some<u64>($t17), stake::spec_contains($t16, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_some'u64'($t17) ==> $1_stake_spec_contains($t16, $t0));

    // $t17 := opaque end: stake::find_validator($t16, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62

    // $t18 := opaque begin: option::is_some<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80

    // assume WellFormed($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80
    assume $IsValid'bool'($t18);

    // assume Eq<bool>($t18, option::spec_is_some<u64>($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80
    assume $IsEqual'bool'($t18, $1_option_spec_is_some'u64'($t17));

    // $t18 := opaque end: option::is_some<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80

    // if ($t18) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
L4:

    // $t19 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:13+23
    assume {:print "$at(2,15088,15111)"} true;
    $t19 := 2;
    assume $IsValid'u64'($t19);

    // $t5 := $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    assume {:print "$at(2,14988,15324)"} true;
    $t5 := $t19;

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:53+13
    assume {:print "$at(2,15164,15177)"} true;
L3:

    // $t20 := get_field<stake::ValidatorSet>.pending_inactive($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:52+31
    assume {:print "$at(2,15163,15194)"} true;
    $t20 := $pending_inactive#$1_stake_ValidatorSet($t10);

    // $t21 := opaque begin: stake::find_validator($t20, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61

    // assume And(WellFormed($t21), Le(Len<u64>(select option::Option.vec($t21)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($IsValid'$1_option_Option'u64''($t21) && (LenVec($vec#$1_option_Option'u64'($t21)) <= 1));

    // assume Implies(option::$is_none<u64>($t21), forall i: Range(0, Len<stake::ValidatorInfo>($t20)): Neq<address>(select stake::ValidatorInfo.addr(Index($t20, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_none'u64'($t21) ==> (var $range_0 := $Range(0, LenVec($t20)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t20, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t21), Eq<address>(select stake::ValidatorInfo.addr(Index($t20, option::$borrow<u64>($t21))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_some'u64'($t21) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t20, $1_option_$borrow'u64'($t21))), $t0));

    // assume Implies(option::$is_some<u64>($t21), stake::spec_contains($t20, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_some'u64'($t21) ==> $1_stake_spec_contains($t20, $t0));

    // $t21 := opaque end: stake::find_validator($t20, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61

    // $t22 := opaque begin: option::is_some<u64>($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79

    // assume WellFormed($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79
    assume $IsValid'bool'($t22);

    // assume Eq<bool>($t22, option::spec_is_some<u64>($t21)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79
    assume $IsEqual'bool'($t22, $1_option_spec_is_some'u64'($t21));

    // $t22 := opaque end: option::is_some<u64>($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79

    // if ($t22) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:335:13+33
    assume {:print "$at(2,15226,15259)"} true;
L7:

    // $t23 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:335:13+33
    assume {:print "$at(2,15226,15259)"} true;
    $t23 := 3;
    assume $IsValid'u64'($t23);

    // $t4 := $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    assume {:print "$at(2,15127,15324)"} true;
    $t4 := $t23;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:337:13+25
    assume {:print "$at(2,15289,15314)"} true;
L6:

    // $t24 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:337:13+25
    assume {:print "$at(2,15289,15314)"} true;
    $t24 := 4;
    assume $IsValid'u64'($t24);

    // $t4 := $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    assume {:print "$at(2,15127,15324)"} true;
    $t4 := $t24;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
L8:

    // $t5 := $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    assume {:print "$at(2,14988,15324)"} true;
    $t5 := $t4;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
L5:

    // $t6 := $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(2,14844,15324)"} true;
    $t6 := $t5;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
L2:

    // trace_return[0]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(2,14844,15324)"} true;
    assume {:print "$track_return(38,25,0):", $t6} $t6 == $t6;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(2,15329,15330)"} true;
L9:

    // assert Implies(Eq<u64>($t6, 1), stake::spec_contains(select stake::ValidatorSet.pending_active($t8), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:241:9+112
    assume {:print "$at(3,10388,10500)"} true;
    assert {:msg "assert_failed(3,10388,10500): post-condition does not hold"}
      ($IsEqual'u64'($t6, 1) ==> $1_stake_spec_contains($pending_active#$1_stake_ValidatorSet($t8), $t0));

    // assert Implies(Eq<u64>($t6, 2), stake::spec_contains(select stake::ValidatorSet.active_validators($t8), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:242:9+107
    assume {:print "$at(3,10509,10616)"} true;
    assert {:msg "assert_failed(3,10509,10616): post-condition does not hold"}
      ($IsEqual'u64'($t6, 2) ==> $1_stake_spec_contains($active_validators#$1_stake_ValidatorSet($t8), $t0));

    // assert Implies(Eq<u64>($t6, 3), stake::spec_contains(select stake::ValidatorSet.pending_inactive($t8), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:243:9+116
    assume {:print "$at(3,10625,10741)"} true;
    assert {:msg "assert_failed(3,10625,10741): post-condition does not hold"}
      ($IsEqual'u64'($t6, 3) ==> $1_stake_spec_contains($pending_inactive#$1_stake_ValidatorSet($t8), $t0));

    // assert Implies(Eq<u64>($t6, 4), And(And(Not(stake::spec_contains(select stake::ValidatorSet.pending_active($t8), $t0)), Not(stake::spec_contains(select stake::ValidatorSet.active_validators($t8), $t0))), Not(stake::spec_contains(select stake::ValidatorSet.pending_inactive($t8), $t0)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:244:9+292
    assume {:print "$at(3,10750,11042)"} true;
    assert {:msg "assert_failed(3,10750,11042): post-condition does not hold"}
      ($IsEqual'u64'($t6, 4) ==> ((!$1_stake_spec_contains($pending_active#$1_stake_ValidatorSet($t8), $t0) && !$1_stake_spec_contains($active_validators#$1_stake_ValidatorSet($t8), $t0)) && !$1_stake_spec_contains($pending_inactive#$1_stake_ValidatorSet($t8), $t0)));

    // return $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:244:9+292
    $ret0 := $t6;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(2,15329,15330)"} true;
L10:

    // abort($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(2,15329,15330)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun stake::increase_lockup [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+319
procedure {:timeLimit 40} $1_stake_increase_lockup$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: $1_stake_OwnerCapability;
    var $t5: $1_staking_config_StakingConfig;
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t9: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume {:print "$at(2,34800,34801)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+319
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+319
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+319
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+319
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:754:5+1
    assume {:print "$track_local(38,26,0):", $t0} $t0 == $t0;

    // $t2 := signer::address_of($t0) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:755:29+25
    assume {:print "$at(2,34915,34940)"} true;
    call $t2 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,34915,34940)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,26):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_local[owner_address]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:755:13+13
    assume {:print "$track_local(38,26,1):", $t2} $t2 == $t2;

    // stake::assert_owner_cap_exists($t2) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:756:9+38
    assume {:print "$at(2,34950,34988)"} true;
    call $1_stake_assert_owner_cap_exists($t2);
    if ($abort_flag) {
        assume {:print "$at(2,34950,34988)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,26):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := get_global<stake::OwnerCapability>($t2) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:757:29+13
    assume {:print "$at(2,35018,35031)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_stake_OwnerCapability_$memory, $t2);
    }
    if ($abort_flag) {
        assume {:print "$at(2,35018,35031)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,26):", $t3} $t3 == $t3;
        goto L2;
    }

    // assume Identical($t5, global<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:61:9+69
    assume {:print "$at(3,2768,2837)"} true;
    assume ($t5 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:62:9+42
    assume {:print "$at(3,2846,2888)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t4));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:63:9+53
    assume {:print "$at(3,2897,2950)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, timestamp::spec_now_seconds()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:65:9+48
    assume {:print "$at(3,3022,3070)"} true;
    assume ($t8 == $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory));

    // assume Identical($t9, select staking_config::StakingConfig.recurring_lockup_duration_secs($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:66:9+51
    assume {:print "$at(3,3079,3130)"} true;
    assume ($t9 == $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t5));

    // stake::increase_lockup_with_cap($t4) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:758:9+39
    assume {:print "$at(2,35073,35112)"} true;
    call $1_stake_increase_lockup_with_cap($t4);
    if ($abort_flag) {
        assume {:print "$at(2,35073,35112)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,26):", $t3} $t3 == $t3;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:759:5+1
    assume {:print "$at(2,35118,35119)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:759:5+1
    assume {:print "$at(2,35118,35119)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:759:5+1
L2:

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:759:5+1
    assume {:print "$at(2,35118,35119)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun stake::increase_lockup_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+905
procedure {:inline 1} $1_stake_increase_lockup_with_cap(_$t0: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t1: $1_staking_config_StakingConfig;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation ($1_stake_StakePool);
    var $t6: $1_staking_config_StakingConfig;
    var $t7: int;
    var $t8: $1_stake_StakePool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $1_staking_config_StakingConfig;
    var $t14: $Mutation ($1_stake_StakePool);
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: $Mutation (int);
    var $t23: $Mutation ($1_event_EventHandle'$1_stake_IncreaseLockupEvent');
    var $t24: $1_stake_IncreaseLockupEvent;
    var $t0: $1_stake_OwnerCapability;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t6, global<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:61:9+69
    assume {:print "$at(3,2768,2837)"} true;
    assume ($t6 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t7, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:62:9+42
    assume {:print "$at(3,2846,2888)"} true;
    assume ($t7 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume Identical($t8, global<stake::StakePool>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:63:9+53
    assume {:print "$at(3,2897,2950)"} true;
    assume ($t8 == $ResourceValue($1_stake_StakePool_$memory, $t7));

    // assume Identical($t9, timestamp::spec_now_seconds()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:65:9+48
    assume {:print "$at(3,3022,3070)"} true;
    assume ($t9 == $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory));

    // assume Identical($t10, select staking_config::StakingConfig.recurring_lockup_duration_secs($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:66:9+51
    assume {:print "$at(3,3079,3130)"} true;
    assume ($t10 == $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t6));

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume {:print "$at(2,35298,35299)"} true;
    assume {:print "$track_local(38,27,0):", $t0} $t0 == $t0;

    // $t11 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:764:28+22
    assume {:print "$at(2,35411,35433)"} true;
    $t11 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:764:13+12
    assume {:print "$track_local(38,27,4):", $t11} $t11 == $t11;

    // stake::assert_stake_pool_exists($t11) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:765:9+38
    assume {:print "$at(2,35443,35481)"} true;
    call $1_stake_assert_stake_pool_exists($t11);
    if ($abort_flag) {
        assume {:print "$at(2,35443,35481)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t13 := staking_config::get() on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:766:22+21
    assume {:print "$at(2,35504,35525)"} true;
    call $t13 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,35504,35525)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[config]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:766:13+6
    assume {:print "$track_local(38,27,1):", $t13} $t13 == $t13;

    // $t14 := borrow_global<stake::StakePool>($t11) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:768:26+17
    assume {:print "$at(2,35553,35570)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(2,35553,35570)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[stake_pool]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:768:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t14);
    assume {:print "$track_local(38,27,5):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t15 := get_field<stake::StakePool>.locked_until_secs($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:769:37+28
    assume {:print "$at(2,35633,35661)"} true;
    $t15 := $locked_until_secs#$1_stake_StakePool($Dereference($t14));

    // trace_local[old_locked_until_secs]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:769:13+21
    assume {:print "$track_local(38,27,3):", $t15} $t15 == $t15;

    // $t16 := timestamp::now_seconds() on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:37+24
    assume {:print "$at(2,35699,35723)"} true;
    call $t16 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,35699,35723)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t17 := staking_config::get_recurring_lockup_duration($t13) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:64+54
    call $t17 := $1_staking_config_get_recurring_lockup_duration($t13);
    if ($abort_flag) {
        assume {:print "$at(2,35726,35780)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t18 := +($t16, $t17) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:62+1
    call $t18 := $AddU64($t16, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,35724,35725)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[new_locked_until_secs]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:13+21
    assume {:print "$track_local(38,27,2):", $t18} $t18 == $t18;

    // $t19 := <($t15, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:39+1
    assume {:print "$at(2,35820,35821)"} true;
    call $t19 := $Lt($t15, $t18);

    // if ($t19) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    if ($t19) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(2,35790,35886)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
L0:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(2,35790,35886)"} true;

    // $t20 := 18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:88+15
    $t20 := 18;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:64+40
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(2,35845,35885)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_abort($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(2,35790,35886)"} true;
    assume {:print "$track_abort(38,27):", $t21} $t21 == $t21;

    // $t12 := move($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    $t12 := $t21;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:40+21
    assume {:print "$at(2,35927,35948)"} true;
L2:

    // $t22 := borrow_field<stake::StakePool>.locked_until_secs($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+28
    assume {:print "$at(2,35896,35924)"} true;
    $t22 := $ChildMutation($t14, 4, $locked_until_secs#$1_stake_StakePool($Dereference($t14)));

    // write_ref($t22, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+52
    $t22 := $UpdateMutation($t22, $t18);

    // write_back[Reference($t14).locked_until_secs (u64)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+52
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_locked_until_secs($Dereference($t14), $Dereference($t22)));

    // $t23 := borrow_field<stake::StakePool>.increase_lockup_events($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:775:13+38
    assume {:print "$at(2,35990,36028)"} true;
    $t23 := $ChildMutation($t14, 13, $increase_lockup_events#$1_stake_StakePool($Dereference($t14)));

    // $t24 := pack stake::IncreaseLockupEvent($t11, $t15, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:776:13+143
    assume {:print "$at(2,36042,36185)"} true;
    $t24 := $1_stake_IncreaseLockupEvent($t11, $t15, $t18);

    // opaque begin: event::emit_event<stake::IncreaseLockupEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    assume {:print "$at(2,35959,36196)"} true;

    // opaque end: event::emit_event<stake::IncreaseLockupEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237

    // write_back[Reference($t14).increase_lockup_events (event::EventHandle<stake::IncreaseLockupEvent>)]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_increase_lockup_events($Dereference($t14), $Dereference($t23)));

    // write_back[stake::StakePool@]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t14),
        $Dereference($t14));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
    assume {:print "$at(2,36202,36203)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
    assume {:print "$at(2,36202,36203)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
L4:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
    assume {:print "$at(2,36202,36203)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun stake::increase_lockup_with_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+905
procedure {:timeLimit 40} $1_stake_increase_lockup_with_cap$verify(_$t0: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t1: $1_staking_config_StakingConfig;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation ($1_stake_StakePool);
    var $t6: $1_staking_config_StakingConfig;
    var $t7: int;
    var $t8: $1_stake_StakePool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $1_staking_config_StakingConfig;
    var $t14: $Mutation ($1_stake_StakePool);
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: $Mutation (int);
    var $t23: $Mutation ($1_event_EventHandle'$1_stake_IncreaseLockupEvent');
    var $t24: $1_stake_IncreaseLockupEvent;
    var $t25: $1_stake_StakePool;
    var $t0: $1_stake_OwnerCapability;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_stake_StakePool_$memory#27: $Memory $1_stake_StakePool;
    var $1_timestamp_CurrentTimeMicroseconds_$memory#28: $Memory $1_timestamp_CurrentTimeMicroseconds;
    var $1_staking_config_StakingConfig_$memory#29: $Memory $1_staking_config_StakingConfig;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume {:print "$at(2,35298,35299)"} true;
    assume $IsValid'$1_stake_OwnerCapability'($t0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+905
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+905
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+905
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+905
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume Identical($t6, global<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:61:9+69
    assume {:print "$at(3,2768,2837)"} true;
    assume ($t6 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t7, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:62:9+42
    assume {:print "$at(3,2846,2888)"} true;
    assume ($t7 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume Identical($t8, global<stake::StakePool>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:63:9+53
    assume {:print "$at(3,2897,2950)"} true;
    assume ($t8 == $ResourceValue($1_stake_StakePool_$memory, $t7));

    // assume Identical($t9, timestamp::spec_now_seconds()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:65:9+48
    assume {:print "$at(3,3022,3070)"} true;
    assume ($t9 == $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory));

    // assume Identical($t10, select staking_config::StakingConfig.recurring_lockup_duration_secs($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:66:9+51
    assume {:print "$at(3,3079,3130)"} true;
    assume ($t10 == $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t6));

    // assume CanModify<stake::StakePool>($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:67:9+41
    assume {:print "$at(3,3139,3180)"} true;
    assume $1_stake_StakePool_$modifies[$t7];

    // @28 := save_mem(timestamp::CurrentTimeMicroseconds) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:67:9+41
    $1_timestamp_CurrentTimeMicroseconds_$memory#28 := $1_timestamp_CurrentTimeMicroseconds_$memory;

    // @29 := save_mem(staking_config::StakingConfig) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:67:9+41
    $1_staking_config_StakingConfig_$memory#29 := $1_staking_config_StakingConfig_$memory;

    // @27 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:67:9+41
    $1_stake_StakePool_$memory#27 := $1_stake_StakePool_$memory;

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume {:print "$at(2,35298,35299)"} true;
    assume {:print "$track_local(38,27,0):", $t0} $t0 == $t0;

    // $t11 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:764:28+22
    assume {:print "$at(2,35411,35433)"} true;
    $t11 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:764:13+12
    assume {:print "$track_local(38,27,4):", $t11} $t11 == $t11;

    // stake::assert_stake_pool_exists($t11) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:765:9+38
    assume {:print "$at(2,35443,35481)"} true;
    call $1_stake_assert_stake_pool_exists($t11);
    if ($abort_flag) {
        assume {:print "$at(2,35443,35481)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t13 := staking_config::get() on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:766:22+21
    assume {:print "$at(2,35504,35525)"} true;
    call $t13 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,35504,35525)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[config]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:766:13+6
    assume {:print "$track_local(38,27,1):", $t13} $t13 == $t13;

    // assert CanModify<stake::StakePool>($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:768:26+17
    assume {:print "$at(2,35553,35570)"} true;
    assert {:msg "assert_failed(2,35553,35570): caller does not have permission to modify `stake::StakePool` at given address"}
      $1_stake_StakePool_$modifies[$t11];

    // $t14 := borrow_global<stake::StakePool>($t11) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:768:26+17
    if (!$ResourceExists($1_stake_StakePool_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(2,35553,35570)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[stake_pool]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:768:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t14);
    assume {:print "$track_local(38,27,5):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t15 := get_field<stake::StakePool>.locked_until_secs($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:769:37+28
    assume {:print "$at(2,35633,35661)"} true;
    $t15 := $locked_until_secs#$1_stake_StakePool($Dereference($t14));

    // trace_local[old_locked_until_secs]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:769:13+21
    assume {:print "$track_local(38,27,3):", $t15} $t15 == $t15;

    // $t16 := timestamp::now_seconds() on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:37+24
    assume {:print "$at(2,35699,35723)"} true;
    call $t16 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,35699,35723)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t17 := staking_config::get_recurring_lockup_duration($t13) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:64+54
    call $t17 := $1_staking_config_get_recurring_lockup_duration($t13);
    if ($abort_flag) {
        assume {:print "$at(2,35726,35780)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t18 := +($t16, $t17) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:62+1
    call $t18 := $AddU64($t16, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,35724,35725)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[new_locked_until_secs]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:13+21
    assume {:print "$track_local(38,27,2):", $t18} $t18 == $t18;

    // $t19 := <($t15, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:39+1
    assume {:print "$at(2,35820,35821)"} true;
    call $t19 := $Lt($t15, $t18);

    // if ($t19) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    if ($t19) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(2,35790,35886)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
L0:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(2,35790,35886)"} true;

    // $t20 := 18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:88+15
    $t20 := 18;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:64+40
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(2,35845,35885)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_abort($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(2,35790,35886)"} true;
    assume {:print "$track_abort(38,27):", $t21} $t21 == $t21;

    // $t12 := move($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    $t12 := $t21;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:40+21
    assume {:print "$at(2,35927,35948)"} true;
L2:

    // $t22 := borrow_field<stake::StakePool>.locked_until_secs($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+28
    assume {:print "$at(2,35896,35924)"} true;
    $t22 := $ChildMutation($t14, 4, $locked_until_secs#$1_stake_StakePool($Dereference($t14)));

    // write_ref($t22, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+52
    $t22 := $UpdateMutation($t22, $t18);

    // write_back[Reference($t14).locked_until_secs (u64)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+52
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_locked_until_secs($Dereference($t14), $Dereference($t22)));

    // $t23 := borrow_field<stake::StakePool>.increase_lockup_events($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:775:13+38
    assume {:print "$at(2,35990,36028)"} true;
    $t23 := $ChildMutation($t14, 13, $increase_lockup_events#$1_stake_StakePool($Dereference($t14)));

    // $t24 := pack stake::IncreaseLockupEvent($t11, $t15, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:776:13+143
    assume {:print "$at(2,36042,36185)"} true;
    $t24 := $1_stake_IncreaseLockupEvent($t11, $t15, $t18);

    // opaque begin: event::emit_event<stake::IncreaseLockupEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    assume {:print "$at(2,35959,36196)"} true;

    // opaque end: event::emit_event<stake::IncreaseLockupEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237

    // write_back[Reference($t14).increase_lockup_events (event::EventHandle<stake::IncreaseLockupEvent>)]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_increase_lockup_events($Dereference($t14), $Dereference($t23)));

    // write_back[stake::StakePool@]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t14),
        $Dereference($t14));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
    assume {:print "$at(2,36202,36203)"} true;
L3:

    // assume Identical($t25, global<stake::StakePool>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:64:9+54
    assume {:print "$at(3,2959,3013)"} true;
    assume ($t25 == $ResourceValue($1_stake_StakePool_$memory, $t7));

    // assert Not(Not(exists[@27]<stake::StakePool>($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:69:9+43
    assume {:print "$at(3,3190,3233)"} true;
    assert {:msg "assert_failed(3,3190,3233): function does not abort under this condition"}
      !!$ResourceExists($1_stake_StakePool_$memory#27, $t7);

    // assert Not(Ge(select stake::StakePool.locked_until_secs($t8), Add($t10, $t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:70:9+67
    assume {:print "$at(3,3242,3309)"} true;
    assert {:msg "assert_failed(3,3242,3309): function does not abort under this condition"}
      !($locked_until_secs#$1_stake_StakePool($t8) >= ($t10 + $t9));

    // assert Not(Gt(Add($t10, $t9), 18446744073709551615)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:71:9+41
    assume {:print "$at(3,3318,3359)"} true;
    assert {:msg "assert_failed(3,3318,3359): function does not abort under this condition"}
      !(($t10 + $t9) > 18446744073709551615);

    // assert Not(Not(exists[@28]<timestamp::CurrentTimeMicroseconds>(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:72:9+72
    assume {:print "$at(3,3368,3440)"} true;
    assert {:msg "assert_failed(3,3368,3440): function does not abort under this condition"}
      !!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory#28, 1);

    // assert Not(Not(exists[@29]<staking_config::StakingConfig>(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:73:9+67
    assume {:print "$at(3,3449,3516)"} true;
    assert {:msg "assert_failed(3,3449,3516): function does not abort under this condition"}
      !!$ResourceExists($1_staking_config_StakingConfig_$memory#29, 1);

    // assert Eq<u64>(select stake::StakePool.locked_until_secs($t25), Add($t10, $t9)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:75:9+61
    assume {:print "$at(3,3526,3587)"} true;
    assert {:msg "assert_failed(3,3526,3587): post-condition does not hold"}
      $IsEqual'u64'($locked_until_secs#$1_stake_StakePool($t25), ($t10 + $t9));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:75:9+61
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
    assume {:print "$at(2,36202,36203)"} true;
L4:

    // assert Or(Or(Or(Or(Not(exists[@27]<stake::StakePool>($t7)), Ge(select stake::StakePool.locked_until_secs($t8), Add($t10, $t9))), Gt(Add($t10, $t9), 18446744073709551615)), Not(exists[@28]<timestamp::CurrentTimeMicroseconds>(1))), Not(exists[@29]<staking_config::StakingConfig>(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:60:5+894
    assume {:print "$at(3,2699,3593)"} true;
    assert {:msg "assert_failed(3,2699,3593): abort not covered by any of the `aborts_if` clauses"}
      ((((!$ResourceExists($1_stake_StakePool_$memory#27, $t7) || ($locked_until_secs#$1_stake_StakePool($t8) >= ($t10 + $t9))) || (($t10 + $t9) > 18446744073709551615)) || !$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory#28, 1)) || !$ResourceExists($1_staking_config_StakingConfig_$memory#29, 1));

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:60:5+894
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun stake::initialize_owner [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1928
procedure {:inline 1} $1_stake_initialize_owner(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t2: $1_event_EventHandle'$1_stake_AddStakeEvent';
    var $t3: $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
    var $t4: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
    var $t5: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
    var $t6: $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
    var $t7: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
    var $t8: $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
    var $t9: $1_event_EventHandle'$1_stake_UnlockStakeEvent';
    var $t10: $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
    var $t11: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
    var $t12: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t13: $signer;
    var $t14: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t15: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t16: int;
    var $t17: int;
    var $t18: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
    var $t19: $1_event_EventHandle'$1_stake_SetOperatorEvent';
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: bool;
    var $t28: int;
    var $t29: int;
    var $t30: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t31: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t32: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t33: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t34: int;
    var $t35: $1_account_Account;
    var $t36: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
    var $t37: int;
    var $t38: $1_account_Account;
    var $t39: $1_event_EventHandle'$1_stake_SetOperatorEvent';
    var $t40: int;
    var $t41: $1_account_Account;
    var $t42: $1_event_EventHandle'$1_stake_AddStakeEvent';
    var $t43: int;
    var $t44: $1_account_Account;
    var $t45: $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
    var $t46: int;
    var $t47: $1_account_Account;
    var $t48: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
    var $t49: int;
    var $t50: $1_account_Account;
    var $t51: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
    var $t52: int;
    var $t53: $1_account_Account;
    var $t54: $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
    var $t55: int;
    var $t56: $1_account_Account;
    var $t57: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
    var $t58: int;
    var $t59: $1_account_Account;
    var $t60: $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
    var $t61: int;
    var $t62: $1_account_Account;
    var $t63: $1_event_EventHandle'$1_stake_UnlockStakeEvent';
    var $t64: int;
    var $t65: $1_account_Account;
    var $t66: $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
    var $t67: int;
    var $t68: $1_account_Account;
    var $t69: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
    var $t70: int;
    var $t71: $1_stake_StakePool;
    var $t72: $1_stake_OwnerCapability;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume {:print "$at(2,22874,22875)"} true;
    assume {:print "$track_local(38,29,0):", $t0} $t0 == $t0;

    // $t21 := signer::address_of($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:517:29+25
    assume {:print "$at(2,22968,22993)"} true;
    call $t21 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,22968,22993)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // trace_local[owner_address]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:517:13+13
    assume {:print "$track_local(38,29,20):", $t21} $t21 == $t21;

    // $t23 := stake::is_allowed($t21) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:17+25
    assume {:print "$at(2,23011,23036)"} true;
    call $t23 := $1_stake_is_allowed($t21);
    if ($abort_flag) {
        assume {:print "$at(2,23011,23036)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // if ($t23) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    assume {:print "$at(2,23003,23078)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
L0:

    // $t24 := 17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:61+21
    assume {:print "$at(2,23055,23076)"} true;
    $t24 := 17;
    assume $IsValid'u64'($t24);

    // $t25 := error::not_found($t24) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:44+39
    call $t25 := $1_error_not_found($t24);
    if ($abort_flag) {
        assume {:print "$at(2,23038,23077)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // trace_abort($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    assume {:print "$at(2,23003,23078)"} true;
    assume {:print "$track_abort(38,29):", $t25} $t25 == $t25;

    // $t22 := move($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    $t22 := $t25;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:36+13
    assume {:print "$at(2,23115,23128)"} true;
L2:

    // $t26 := stake::stake_pool_exists($t21) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:18+32
    assume {:print "$at(2,23097,23129)"} true;
    call $t26 := $1_stake_stake_pool_exists($t21);
    if ($abort_flag) {
        assume {:print "$at(2,23097,23129)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t27 := !($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:17+1
    call $t27 := $Not($t26);

    // if ($t27) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    if ($t27) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    assume {:print "$at(2,23088,23174)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
L3:

    // $t28 := 8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:74+19
    assume {:print "$at(2,23153,23172)"} true;
    $t28 := 8;
    assume $IsValid'u64'($t28);

    // $t29 := error::already_exists($t28) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:52+42
    call $t29 := $1_error_already_exists($t28);
    if ($abort_flag) {
        assume {:print "$at(2,23131,23173)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // trace_abort($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    assume {:print "$at(2,23088,23174)"} true;
    assume {:print "$track_abort(38,29):", $t29} $t29 == $t29;

    // $t22 := move($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    $t22 := $t29;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:521:17+5
    assume {:print "$at(2,23193,23198)"} true;
L5:

    // $t30 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:522:21+23
    assume {:print "$at(2,23232,23255)"} true;
    call $t30 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,23232,23255)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t31 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:523:29+23
    assume {:print "$at(2,23285,23308)"} true;
    call $t31 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,23285,23308)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t32 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:524:31+23
    assume {:print "$at(2,23340,23363)"} true;
    call $t32 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,23340,23363)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t33 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:525:23+23
    assume {:print "$at(2,23387,23410)"} true;
    call $t33 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,23387,23410)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t34, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t34 == $1_signer_$address_of($t0));

    // assume Identical($t35, global<account::Account>($t34)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t35 == $ResourceValue($1_account_Account_$memory, $t34));

    // $t36 := account::new_event_handle<stake::RegisterValidatorCandidateEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:530:42+65
    assume {:print "$at(2,23599,23664)"} true;
    call $t36 := $1_account_new_event_handle'$1_stake_RegisterValidatorCandidateEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23599,23664)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t37, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t37 == $1_signer_$address_of($t0));

    // assume Identical($t38, global<account::Account>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t38 == $ResourceValue($1_account_Account_$memory, $t37));

    // $t39 := account::new_event_handle<stake::SetOperatorEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:531:34+50
    assume {:print "$at(2,23699,23749)"} true;
    call $t39 := $1_account_new_event_handle'$1_stake_SetOperatorEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23699,23749)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t40, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t40 == $1_signer_$address_of($t0));

    // assume Identical($t41, global<account::Account>($t40)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t41 == $ResourceValue($1_account_Account_$memory, $t40));

    // $t42 := account::new_event_handle<stake::AddStakeEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:532:31+47
    assume {:print "$at(2,23781,23828)"} true;
    call $t42 := $1_account_new_event_handle'$1_stake_AddStakeEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23781,23828)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t43, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t43 == $1_signer_$address_of($t0));

    // assume Identical($t44, global<account::Account>($t43)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t44 == $ResourceValue($1_account_Account_$memory, $t43));

    // $t45 := account::new_event_handle<stake::ReactivateStakeEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:533:38+54
    assume {:print "$at(2,23867,23921)"} true;
    call $t45 := $1_account_new_event_handle'$1_stake_ReactivateStakeEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23867,23921)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t46, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t46 == $1_signer_$address_of($t0));

    // assume Identical($t47, global<account::Account>($t46)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t47 == $ResourceValue($1_account_Account_$memory, $t46));

    // $t48 := account::new_event_handle<stake::RotateConsensusKeyEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:534:42+57
    assume {:print "$at(2,23964,24021)"} true;
    call $t48 := $1_account_new_event_handle'$1_stake_RotateConsensusKeyEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23964,24021)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t49, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t49 == $1_signer_$address_of($t0));

    // assume Identical($t50, global<account::Account>($t49)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t50 == $ResourceValue($1_account_Account_$memory, $t49));

    // $t51 := account::new_event_handle<stake::UpdateNetworkAndFullnodeAddressesEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:535:59+72
    assume {:print "$at(2,24081,24153)"} true;
    call $t51 := $1_account_new_event_handle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24081,24153)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t52, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t52 == $1_signer_$address_of($t0));

    // assume Identical($t53, global<account::Account>($t52)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t53 == $ResourceValue($1_account_Account_$memory, $t52));

    // $t54 := account::new_event_handle<stake::IncreaseLockupEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:536:37+53
    assume {:print "$at(2,24191,24244)"} true;
    call $t54 := $1_account_new_event_handle'$1_stake_IncreaseLockupEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24191,24244)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t55, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t55 == $1_signer_$address_of($t0));

    // assume Identical($t56, global<account::Account>($t55)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t56 == $ResourceValue($1_account_Account_$memory, $t55));

    // $t57 := account::new_event_handle<stake::JoinValidatorSetEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:537:40+55
    assume {:print "$at(2,24285,24340)"} true;
    call $t57 := $1_account_new_event_handle'$1_stake_JoinValidatorSetEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24285,24340)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t58, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t58 == $1_signer_$address_of($t0));

    // assume Identical($t59, global<account::Account>($t58)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t59 == $ResourceValue($1_account_Account_$memory, $t58));

    // $t60 := account::new_event_handle<stake::DistributeRewardsEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:538:40+56
    assume {:print "$at(2,24381,24437)"} true;
    call $t60 := $1_account_new_event_handle'$1_stake_DistributeRewardsEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24381,24437)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t61, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t61 == $1_signer_$address_of($t0));

    // assume Identical($t62, global<account::Account>($t61)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t62 == $ResourceValue($1_account_Account_$memory, $t61));

    // $t63 := account::new_event_handle<stake::UnlockStakeEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:539:34+50
    assume {:print "$at(2,24472,24522)"} true;
    call $t63 := $1_account_new_event_handle'$1_stake_UnlockStakeEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24472,24522)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t64, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t64 == $1_signer_$address_of($t0));

    // assume Identical($t65, global<account::Account>($t64)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t65 == $ResourceValue($1_account_Account_$memory, $t64));

    // $t66 := account::new_event_handle<stake::WithdrawStakeEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:540:36+52
    assume {:print "$at(2,24559,24611)"} true;
    call $t66 := $1_account_new_event_handle'$1_stake_WithdrawStakeEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24559,24611)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t67, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t67 == $1_signer_$address_of($t0));

    // assume Identical($t68, global<account::Account>($t67)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t68 == $ResourceValue($1_account_Account_$memory, $t67));

    // $t69 := account::new_event_handle<stake::LeaveValidatorSetEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:541:41+56
    assume {:print "$at(2,24653,24709)"} true;
    call $t69 := $1_account_new_event_handle'$1_stake_LeaveValidatorSetEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24653,24709)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t70 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:526:32+1
    assume {:print "$at(2,23443,23444)"} true;
    $t70 := 0;
    assume $IsValid'u64'($t70);

    // $t71 := pack stake::StakePool($t30, $t33, $t31, $t32, $t70, $t21, $t21, $t36, $t39, $t42, $t45, $t48, $t51, $t54, $t57, $t60, $t63, $t66, $t69) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:521:24+1520
    assume {:print "$at(2,23200,24720)"} true;
    $t71 := $1_stake_StakePool($t30, $t33, $t31, $t32, $t70, $t21, $t21, $t36, $t39, $t42, $t45, $t48, $t51, $t54, $t57, $t60, $t63, $t66, $t69);

    // move_to<stake::StakePool>($t71, $t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:521:9+7
    if ($ResourceExists($1_stake_StakePool_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $addr#$signer($t0), $t71);
    }
    if ($abort_flag) {
        assume {:print "$at(2,23185,23192)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t72 := pack stake::OwnerCapability($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:544:24+47
    assume {:print "$at(2,24747,24794)"} true;
    $t72 := $1_stake_OwnerCapability($t21);

    // move_to<stake::OwnerCapability>($t72, $t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:544:9+7
    if ($ResourceExists($1_stake_OwnerCapability_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_OwnerCapability_$memory := $ResourceUpdate($1_stake_OwnerCapability_$memory, $addr#$signer($t0), $t72);
    }
    if ($abort_flag) {
        assume {:print "$at(2,24732,24739)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:545:5+1
    assume {:print "$at(2,24801,24802)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:545:5+1
    assume {:print "$at(2,24801,24802)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:545:5+1
L7:

    // abort($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:545:5+1
    assume {:print "$at(2,24801,24802)"} true;
    $abort_code := $t22;
    $abort_flag := true;
    return;

}

// fun stake::initialize_owner [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1928
procedure {:timeLimit 40} $1_stake_initialize_owner$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t2: $1_event_EventHandle'$1_stake_AddStakeEvent';
    var $t3: $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
    var $t4: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
    var $t5: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
    var $t6: $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
    var $t7: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
    var $t8: $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
    var $t9: $1_event_EventHandle'$1_stake_UnlockStakeEvent';
    var $t10: $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
    var $t11: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
    var $t12: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t13: $signer;
    var $t14: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t15: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t16: int;
    var $t17: int;
    var $t18: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
    var $t19: $1_event_EventHandle'$1_stake_SetOperatorEvent';
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: bool;
    var $t28: int;
    var $t29: int;
    var $t30: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t31: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t32: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t33: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t34: int;
    var $t35: $1_account_Account;
    var $t36: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
    var $t37: int;
    var $t38: $1_account_Account;
    var $t39: $1_event_EventHandle'$1_stake_SetOperatorEvent';
    var $t40: int;
    var $t41: $1_account_Account;
    var $t42: $1_event_EventHandle'$1_stake_AddStakeEvent';
    var $t43: int;
    var $t44: $1_account_Account;
    var $t45: $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
    var $t46: int;
    var $t47: $1_account_Account;
    var $t48: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
    var $t49: int;
    var $t50: $1_account_Account;
    var $t51: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
    var $t52: int;
    var $t53: $1_account_Account;
    var $t54: $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
    var $t55: int;
    var $t56: $1_account_Account;
    var $t57: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
    var $t58: int;
    var $t59: $1_account_Account;
    var $t60: $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
    var $t61: int;
    var $t62: $1_account_Account;
    var $t63: $1_event_EventHandle'$1_stake_UnlockStakeEvent';
    var $t64: int;
    var $t65: $1_account_Account;
    var $t66: $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
    var $t67: int;
    var $t68: $1_account_Account;
    var $t69: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
    var $t70: int;
    var $t71: $1_stake_StakePool;
    var $t72: $1_stake_OwnerCapability;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume {:print "$at(2,22874,22875)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AllowedValidators>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AllowedValidators_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AllowedValidators_$memory, $a_0);
    ($IsValid'$1_stake_AllowedValidators'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1928
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:516:5+1
    assume {:print "$track_local(38,29,0):", $t0} $t0 == $t0;

    // $t21 := signer::address_of($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:517:29+25
    assume {:print "$at(2,22968,22993)"} true;
    call $t21 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,22968,22993)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // trace_local[owner_address]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:517:13+13
    assume {:print "$track_local(38,29,20):", $t21} $t21 == $t21;

    // $t23 := stake::is_allowed($t21) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:17+25
    assume {:print "$at(2,23011,23036)"} true;
    call $t23 := $1_stake_is_allowed($t21);
    if ($abort_flag) {
        assume {:print "$at(2,23011,23036)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // if ($t23) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    assume {:print "$at(2,23003,23078)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
L0:

    // $t24 := 17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:61+21
    assume {:print "$at(2,23055,23076)"} true;
    $t24 := 17;
    assume $IsValid'u64'($t24);

    // $t25 := error::not_found($t24) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:44+39
    call $t25 := $1_error_not_found($t24);
    if ($abort_flag) {
        assume {:print "$at(2,23038,23077)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // trace_abort($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    assume {:print "$at(2,23003,23078)"} true;
    assume {:print "$track_abort(38,29):", $t25} $t25 == $t25;

    // $t22 := move($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    $t22 := $t25;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:518:9+75
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:36+13
    assume {:print "$at(2,23115,23128)"} true;
L2:

    // $t26 := stake::stake_pool_exists($t21) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:18+32
    assume {:print "$at(2,23097,23129)"} true;
    call $t26 := $1_stake_stake_pool_exists($t21);
    if ($abort_flag) {
        assume {:print "$at(2,23097,23129)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t27 := !($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:17+1
    call $t27 := $Not($t26);

    // if ($t27) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    if ($t27) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    assume {:print "$at(2,23088,23174)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
L3:

    // $t28 := 8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:74+19
    assume {:print "$at(2,23153,23172)"} true;
    $t28 := 8;
    assume $IsValid'u64'($t28);

    // $t29 := error::already_exists($t28) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:52+42
    call $t29 := $1_error_already_exists($t28);
    if ($abort_flag) {
        assume {:print "$at(2,23131,23173)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // trace_abort($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    assume {:print "$at(2,23088,23174)"} true;
    assume {:print "$track_abort(38,29):", $t29} $t29 == $t29;

    // $t22 := move($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    $t22 := $t29;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:519:9+86
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:521:17+5
    assume {:print "$at(2,23193,23198)"} true;
L5:

    // $t30 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:522:21+23
    assume {:print "$at(2,23232,23255)"} true;
    call $t30 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,23232,23255)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t31 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:523:29+23
    assume {:print "$at(2,23285,23308)"} true;
    call $t31 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,23285,23308)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t32 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:524:31+23
    assume {:print "$at(2,23340,23363)"} true;
    call $t32 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,23340,23363)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t33 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:525:23+23
    assume {:print "$at(2,23387,23410)"} true;
    call $t33 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,23387,23410)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t34, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t34 == $1_signer_$address_of($t0));

    // assume Identical($t35, global<account::Account>($t34)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t35 == $ResourceValue($1_account_Account_$memory, $t34));

    // $t36 := account::new_event_handle<stake::RegisterValidatorCandidateEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:530:42+65
    assume {:print "$at(2,23599,23664)"} true;
    call $t36 := $1_account_new_event_handle'$1_stake_RegisterValidatorCandidateEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23599,23664)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t37, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t37 == $1_signer_$address_of($t0));

    // assume Identical($t38, global<account::Account>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t38 == $ResourceValue($1_account_Account_$memory, $t37));

    // $t39 := account::new_event_handle<stake::SetOperatorEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:531:34+50
    assume {:print "$at(2,23699,23749)"} true;
    call $t39 := $1_account_new_event_handle'$1_stake_SetOperatorEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23699,23749)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t40, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t40 == $1_signer_$address_of($t0));

    // assume Identical($t41, global<account::Account>($t40)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t41 == $ResourceValue($1_account_Account_$memory, $t40));

    // $t42 := account::new_event_handle<stake::AddStakeEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:532:31+47
    assume {:print "$at(2,23781,23828)"} true;
    call $t42 := $1_account_new_event_handle'$1_stake_AddStakeEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23781,23828)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t43, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t43 == $1_signer_$address_of($t0));

    // assume Identical($t44, global<account::Account>($t43)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t44 == $ResourceValue($1_account_Account_$memory, $t43));

    // $t45 := account::new_event_handle<stake::ReactivateStakeEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:533:38+54
    assume {:print "$at(2,23867,23921)"} true;
    call $t45 := $1_account_new_event_handle'$1_stake_ReactivateStakeEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23867,23921)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t46, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t46 == $1_signer_$address_of($t0));

    // assume Identical($t47, global<account::Account>($t46)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t47 == $ResourceValue($1_account_Account_$memory, $t46));

    // $t48 := account::new_event_handle<stake::RotateConsensusKeyEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:534:42+57
    assume {:print "$at(2,23964,24021)"} true;
    call $t48 := $1_account_new_event_handle'$1_stake_RotateConsensusKeyEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,23964,24021)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t49, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t49 == $1_signer_$address_of($t0));

    // assume Identical($t50, global<account::Account>($t49)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t50 == $ResourceValue($1_account_Account_$memory, $t49));

    // $t51 := account::new_event_handle<stake::UpdateNetworkAndFullnodeAddressesEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:535:59+72
    assume {:print "$at(2,24081,24153)"} true;
    call $t51 := $1_account_new_event_handle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24081,24153)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t52, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t52 == $1_signer_$address_of($t0));

    // assume Identical($t53, global<account::Account>($t52)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t53 == $ResourceValue($1_account_Account_$memory, $t52));

    // $t54 := account::new_event_handle<stake::IncreaseLockupEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:536:37+53
    assume {:print "$at(2,24191,24244)"} true;
    call $t54 := $1_account_new_event_handle'$1_stake_IncreaseLockupEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24191,24244)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t55, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t55 == $1_signer_$address_of($t0));

    // assume Identical($t56, global<account::Account>($t55)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t56 == $ResourceValue($1_account_Account_$memory, $t55));

    // $t57 := account::new_event_handle<stake::JoinValidatorSetEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:537:40+55
    assume {:print "$at(2,24285,24340)"} true;
    call $t57 := $1_account_new_event_handle'$1_stake_JoinValidatorSetEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24285,24340)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t58, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t58 == $1_signer_$address_of($t0));

    // assume Identical($t59, global<account::Account>($t58)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t59 == $ResourceValue($1_account_Account_$memory, $t58));

    // $t60 := account::new_event_handle<stake::DistributeRewardsEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:538:40+56
    assume {:print "$at(2,24381,24437)"} true;
    call $t60 := $1_account_new_event_handle'$1_stake_DistributeRewardsEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24381,24437)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t61, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t61 == $1_signer_$address_of($t0));

    // assume Identical($t62, global<account::Account>($t61)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t62 == $ResourceValue($1_account_Account_$memory, $t61));

    // $t63 := account::new_event_handle<stake::UnlockStakeEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:539:34+50
    assume {:print "$at(2,24472,24522)"} true;
    call $t63 := $1_account_new_event_handle'$1_stake_UnlockStakeEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24472,24522)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t64, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t64 == $1_signer_$address_of($t0));

    // assume Identical($t65, global<account::Account>($t64)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t65 == $ResourceValue($1_account_Account_$memory, $t64));

    // $t66 := account::new_event_handle<stake::WithdrawStakeEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:540:36+52
    assume {:print "$at(2,24559,24611)"} true;
    call $t66 := $1_account_new_event_handle'$1_stake_WithdrawStakeEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24559,24611)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assume Identical($t67, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21670,21709)"} true;
    assume ($t67 == $1_signer_$address_of($t0));

    // assume Identical($t68, global<account::Account>($t67)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21718,21754)"} true;
    assume ($t68 == $ResourceValue($1_account_Account_$memory, $t67));

    // $t69 := account::new_event_handle<stake::LeaveValidatorSetEvent>($t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:541:41+56
    assume {:print "$at(2,24653,24709)"} true;
    call $t69 := $1_account_new_event_handle'$1_stake_LeaveValidatorSetEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,24653,24709)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // $t70 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:526:32+1
    assume {:print "$at(2,23443,23444)"} true;
    $t70 := 0;
    assume $IsValid'u64'($t70);

    // $t71 := pack stake::StakePool($t30, $t33, $t31, $t32, $t70, $t21, $t21, $t36, $t39, $t42, $t45, $t48, $t51, $t54, $t57, $t60, $t63, $t66, $t69) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:521:24+1520
    assume {:print "$at(2,23200,24720)"} true;
    $t71 := $1_stake_StakePool($t30, $t33, $t31, $t32, $t70, $t21, $t21, $t36, $t39, $t42, $t45, $t48, $t51, $t54, $t57, $t60, $t63, $t66, $t69);

    // move_to<stake::StakePool>($t71, $t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:521:9+7
    if ($ResourceExists($1_stake_StakePool_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $addr#$signer($t0), $t71);
    }
    if ($abort_flag) {
        assume {:print "$at(2,23185,23192)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // $t72 := pack stake::OwnerCapability($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:544:24+47
    assume {:print "$at(2,24747,24794)"} true;
    $t72 := $1_stake_OwnerCapability($t21);

    // move_to<stake::OwnerCapability>($t72, $t0) on_abort goto L7 with $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:544:9+7
    if ($ResourceExists($1_stake_OwnerCapability_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_OwnerCapability_$memory := $ResourceUpdate($1_stake_OwnerCapability_$memory, $addr#$signer($t0), $t72);
    }
    if ($abort_flag) {
        assume {:print "$at(2,24732,24739)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(38,29):", $t22} $t22 == $t22;
        goto L7;
    }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:545:5+1
    assume {:print "$at(2,24801,24802)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:545:5+1
    assume {:print "$at(2,24801,24802)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:545:5+1
L7:

    // abort($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:545:5+1
    assume {:print "$at(2,24801,24802)"} true;
    $abort_code := $t22;
    $abort_flag := true;
    return;

}

// fun stake::initialize_stake_owner [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+850
procedure {:timeLimit 40} $1_stake_initialize_stake_owner$verify(_$t0: $signer, _$t1: int, _$t2: int, _$t3: int) returns ()
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: Vec (int);
    var $t7: Vec (int);
    var $t8: Vec (int);
    var $t9: int;
    var $t10: $1_stake_ValidatorConfig;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: bool;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume {:print "$at(2,21074,21075)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume $IsValid'address'($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume $IsValid'address'($t3);

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingRewardsConfig>(): And(WellFormed($rsc), And(And(And(fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.rewards_rate($rsc), fixed_point64::spec_create_from_u128(1)), fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.min_rewards_rate($rsc), select staking_config::StakingRewardsConfig.rewards_rate($rsc))), Eq<u64>(select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($rsc), 31536000)), Le(fixed_point64::spec_ceil(select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($rsc)), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingRewardsConfig'($rsc) && ((($1_fixed_point64_spec_less_or_equal($rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $1_fixed_point64_spec_create_from_u128(1)) && $1_fixed_point64_spec_less_or_equal($min_rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $rewards_rate#$1_staking_config_StakingRewardsConfig($rsc))) && $IsEqual'u64'($rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($rsc), 31536000)) && ($1_fixed_point64_spec_ceil($rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($rsc)) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AllowedValidators>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AllowedValidators_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AllowedValidators_$memory, $a_0);
    ($IsValid'$1_stake_AllowedValidators'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+850
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+850
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+850
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+850
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+850
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+850
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+850
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume {:print "$at(2,21074,21075)"} true;
    assume {:print "$track_local(38,30,0):", $t0} $t0 == $t0;

    // trace_local[initial_stake_amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume {:print "$track_local(38,30,1):", $t1} $t1 == $t1;

    // trace_local[operator]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume {:print "$track_local(38,30,2):", $t2} $t2 == $t2;

    // trace_local[voter]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:465:5+1
    assume {:print "$track_local(38,30,3):", $t3} $t3 == $t3;

    // stake::initialize_owner($t0) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:471:9+23
    assume {:print "$at(2,21310,21333)"} true;
    call $1_stake_initialize_owner($t0);
    if ($abort_flag) {
        assume {:print "$at(2,21310,21333)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // $t6 := vector::empty<u8>() on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:473:31+15
    assume {:print "$at(2,21406,21421)"} true;
    call $t6 := $1_vector_empty'u8'();
    if ($abort_flag) {
        assume {:print "$at(2,21406,21421)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // $t7 := vector::empty<u8>() on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:474:32+15
    assume {:print "$at(2,21454,21469)"} true;
    call $t7 := $1_vector_empty'u8'();
    if ($abort_flag) {
        assume {:print "$at(2,21454,21469)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // $t8 := vector::empty<u8>() on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:475:33+15
    assume {:print "$at(2,21503,21518)"} true;
    call $t8 := $1_vector_empty'u8'();
    if ($abort_flag) {
        assume {:print "$at(2,21503,21518)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // $t9 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:476:30+1
    assume {:print "$at(2,21549,21550)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := pack stake::ValidatorConfig($t6, $t7, $t8, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:472:24+203
    assume {:print "$at(2,21358,21561)"} true;
    $t10 := $1_stake_ValidatorConfig($t6, $t7, $t8, $t9);

    // move_to<stake::ValidatorConfig>($t10, $t0) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:472:9+7
    if ($ResourceExists($1_stake_ValidatorConfig_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_ValidatorConfig_$memory := $ResourceUpdate($1_stake_ValidatorConfig_$memory, $addr#$signer($t0), $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(2,21343,21350)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // $t11 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:479:36+1
    assume {:print "$at(2,21600,21601)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // $t12 := >($t1, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:479:34+1
    call $t12 := $Gt($t1, $t11);

    // if ($t12) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:479:9+93
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:480:23+5
    assume {:print "$at(2,21627,21632)"} true;
L1:

    // assert exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assert {:msg "assert_failed(3,17638,17695): precondition does not hold at this call"}
      $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assert exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assert {:msg "assert_failed(3,17704,17760): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assert exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assert {:msg "assert_failed(3,17769,17817): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assert exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assert {:msg "assert_failed(3,17826,17875): precondition does not hold at this call"}
      $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assert Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assert {:msg "assert_failed(3,17884,18001): precondition does not hold at this call"}
      ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assert {:msg "assert_failed(3,18010,18080): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assert {:msg "assert_failed(3,18089,18138): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // stake::add_stake($t0, $t1) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:480:13+38
    assume {:print "$at(2,21617,21655)"} true;
    call $1_stake_add_stake($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,21617,21655)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:483:50+5
    assume {:print "$at(2,21718,21723)"} true;
L0:

    // $t13 := signer::address_of($t0) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:483:31+25
    assume {:print "$at(2,21699,21724)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,21699,21724)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // trace_local[account_address]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:483:13+15
    assume {:print "$track_local(38,30,4):", $t13} $t13 == $t13;

    // $t14 := !=($t13, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:484:29+2
    assume {:print "$at(2,21754,21756)"} true;
    $t14 := !$IsEqual'address'($t13, $t2);

    // if ($t14) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:484:9+86
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:485:26+5
    assume {:print "$at(2,21794,21799)"} true;
L3:

    // stake::set_operator($t0, $t2) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:485:13+29
    assume {:print "$at(2,21781,21810)"} true;
    call $1_stake_set_operator($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,21781,21810)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:487:13+15
    assume {:print "$at(2,21834,21849)"} true;
L2:

    // $t15 := !=($t13, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:487:29+2
    assume {:print "$at(2,21850,21852)"} true;
    $t15 := !$IsEqual'address'($t13, $t3);

    // if ($t15) goto L5 else goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:487:9+87
    if ($t15) { goto L5; } else { goto L4; }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:488:33+5
    assume {:print "$at(2,21894,21899)"} true;
L5:

    // stake::set_delegated_voter($t0, $t3) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:488:13+33
    assume {:print "$at(2,21874,21907)"} true;
    call $1_stake_set_delegated_voter($t0, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,21874,21907)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,30):", $t5} $t5 == $t5;
        goto L8;
    }

    // goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:488:13+33
    goto L6;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:487:9+87
    assume {:print "$at(2,21830,21917)"} true;
L4:

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:489:10+1
    assume {:print "$at(2,21917,21918)"} true;
L6:

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:490:5+1
    assume {:print "$at(2,21923,21924)"} true;
L7:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:490:5+1
    assume {:print "$at(2,21923,21924)"} true;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:490:5+1
L8:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:490:5+1
    assume {:print "$at(2,21923,21924)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun stake::initialize_validator [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+854
procedure {:timeLimit 40} $1_stake_initialize_validator$verify(_$t0: $signer, _$t1: Vec (int), _$t2: Vec (int), _$t3: Vec (int), _$t4: Vec (int)) returns ()
{
    // declare local variables
    var $t5: $1_bls12381_ProofOfPossession;
    var $t6: Vec (int);
    var $t7: $1_option_Option'$1_bls12381_PublicKeyWithPoP';
    var $t8: $1_bls12381_ProofOfPossession;
    var $t9: int;
    var $t10: $Mutation ($1_option_Option'$1_bls12381_PublicKeyWithPoP');
    var $t11: $1_option_Option'$1_bls12381_PublicKeyWithPoP';
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: $1_stake_ValidatorConfig;
    var $t0: $signer;
    var $t1: Vec (int);
    var $t2: Vec (int);
    var $t3: Vec (int);
    var $t4: Vec (int);
    var $temp_0'$1_option_Option'$1_bls12381_PublicKeyWithPoP'': $1_option_Option'$1_bls12381_PublicKeyWithPoP';
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume {:print "$at(2,22014,22015)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume $IsValid'vec'u8''($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume $IsValid'vec'u8''($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume $IsValid'vec'u8''($t3);

    // assume WellFormed($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume $IsValid'vec'u8''($t4);

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AllowedValidators>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AllowedValidators_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AllowedValidators_$memory, $a_0);
    ($IsValid'$1_stake_AllowedValidators'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+854
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume {:print "$track_local(38,31,0):", $t0} $t0 == $t0;

    // trace_local[consensus_pubkey]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume {:print "$track_local(38,31,1):", $t1} $t1 == $t1;

    // trace_local[proof_of_possession]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume {:print "$track_local(38,31,2):", $t2} $t2 == $t2;

    // trace_local[network_addresses]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume {:print "$track_local(38,31,3):", $t3} $t3 == $t3;

    // trace_local[fullnode_addresses]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:493:5+1
    assume {:print "$track_local(38,31,4):", $t4} $t4 == $t4;

    // $t8 := bls12381::proof_of_possession_from_bytes($t2) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:503:14+51
    assume {:print "$at(2,22487,22538)"} true;
    call $t8 := $1_bls12381_proof_of_possession_from_bytes($t2);
    if ($abort_flag) {
        assume {:print "$at(2,22487,22538)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,31):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t7 := bls12381::public_key_from_bytes_with_pop($t1, $t8) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:501:36+146
    assume {:print "$at(2,22402,22548)"} true;
    call $t7 := $1_bls12381_public_key_from_bytes_with_pop($t1, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,22402,22548)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,31):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t10 := borrow_local($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:501:31+151
    $t10 := $Mutation($Local(7), EmptyVec(), $t7);

    // $t11 := read_ref($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:33+15
    assume {:print "$at(2,22582,22597)"} true;
    $t11 := $Dereference($t10);

    // assert Le(Len<bls12381::PublicKeyWithPoP>(select option::Option.vec($t10)), 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(13,530,554)"} true;
    assert {:msg "assert_failed(13,530,554): data invariant does not hold"}
      (LenVec($vec#$1_option_Option'$1_bls12381_PublicKeyWithPoP'($Dereference($t10))) <= 1);

    // trace_local[tmp#$7]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:33+15
    assume {:print "$at(2,22582,22597)"} true;
    assume {:print "$track_local(38,31,7):", $t7} $t7 == $t7;

    // $t12 := opaque begin: option::is_some<bls12381::PublicKeyWithPoP>($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:17+32

    // assume WellFormed($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:17+32
    assume $IsValid'bool'($t12);

    // assume Eq<bool>($t12, option::spec_is_some<bls12381::PublicKeyWithPoP>($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:17+32
    assume $IsEqual'bool'($t12, $1_option_spec_is_some'$1_bls12381_PublicKeyWithPoP'($t11));

    // $t12 := opaque end: option::is_some<bls12381::PublicKeyWithPoP>($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:17+32

    // if ($t12) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:9+87
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:9+87
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:9+87
    assume {:print "$at(2,22558,22645)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:9+87
L0:

    // $t13 := 11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:75+19
    assume {:print "$at(2,22624,22643)"} true;
    $t13 := 11;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:51+44
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(2,22600,22644)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,31):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:9+87
    assume {:print "$at(2,22558,22645)"} true;
    assume {:print "$track_abort(38,31):", $t14} $t14 == $t14;

    // $t9 := move($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:9+87
    $t9 := $t14;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:505:9+87
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:507:26+7
    assume {:print "$at(2,22673,22680)"} true;
L2:

    // stake::initialize_owner($t0) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:507:9+25
    assume {:print "$at(2,22656,22681)"} true;
    call $1_stake_initialize_owner($t0);
    if ($abort_flag) {
        assume {:print "$at(2,22656,22681)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,31):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t15 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:512:30+1
    assume {:print "$at(2,22848,22849)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t16 := pack stake::ValidatorConfig($t1, $t3, $t4, $t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:508:26+152
    assume {:print "$at(2,22708,22860)"} true;
    $t16 := $1_stake_ValidatorConfig($t1, $t3, $t4, $t15);

    // move_to<stake::ValidatorConfig>($t16, $t0) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:508:9+7
    if ($ResourceExists($1_stake_ValidatorConfig_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_ValidatorConfig_$memory := $ResourceUpdate($1_stake_ValidatorConfig_$memory, $addr#$signer($t0), $t16);
    }
    if ($abort_flag) {
        assume {:print "$at(2,22691,22698)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,31):", $t9} $t9 == $t9;
        goto L4;
    }

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:514:5+1
    assume {:print "$at(2,22867,22868)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:514:5+1
    assume {:print "$at(2,22867,22868)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:514:5+1
L4:

    // abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:514:5+1
    assume {:print "$at(2,22867,22868)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun stake::initialize_validator_fees [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:271:5+367
procedure {:timeLimit 40} $1_stake_initialize_validator_fees$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t9: $1_stake_ValidatorFees;
    var $t0: $signer;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:271:5+1
    assume {:print "$at(2,12133,12134)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:271:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // trace_local[aptos_framework]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:271:5+1
    assume {:print "$track_local(38,32,0):", $t0} $t0 == $t0;

    // opaque begin: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
    assume {:print "$at(2,12214,12271)"} true;

    // assume Identical($t1, Neq<address>(signer::$address_of($t0), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
    assume ($t1 == !$IsEqual'address'($1_signer_$address_of($t0), 1));

    // if ($t1) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
    if ($t1) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
L6:

    // assume And(Neq<address>(signer::$address_of($t0), 1), Eq(5, $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
    assume {:print "$at(2,12214,12271)"} true;
    assume (!$IsEqual'address'($1_signer_$address_of($t0), 1) && $IsEqual'num'(5, $t2));

    // trace_abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
    assume {:print "$at(2,12214,12271)"} true;
    assume {:print "$track_abort(38,32):", $t2} $t2 == $t2;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
    goto L4;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
L5:

    // opaque end: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:272:9+57
    assume {:print "$at(2,12214,12271)"} true;

    // $t3 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:274:36+16
    assume {:print "$at(2,12325,12341)"} true;
    $t3 := 1;
    assume $IsValid'address'($t3);

    // $t4 := exists<stake::ValidatorFees>($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:274:14+6
    $t4 := $ResourceExists($1_stake_ValidatorFees_$memory, $t3);

    // $t5 := !($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:274:13+1
    call $t5 := $Not($t4);

    // if ($t5) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:273:9+134
    assume {:print "$at(2,12281,12415)"} true;
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:273:9+134
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:273:9+134
    assume {:print "$at(2,12281,12415)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:273:9+134
L0:

    // $t6 := 19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:275:35+26
    assume {:print "$at(2,12378,12404)"} true;
    $t6 := 19;
    assume $IsValid'u64'($t6);

    // $t7 := error::already_exists($t6) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:275:13+49
    call $t7 := $1_error_already_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(2,12356,12405)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,32):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:273:9+134
    assume {:print "$at(2,12281,12415)"} true;
    assume {:print "$track_abort(38,32):", $t7} $t7 == $t7;

    // $t2 := move($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:273:9+134
    $t2 := $t7;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:273:9+134
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:277:17+15
    assume {:print "$at(2,12433,12448)"} true;
L2:

    // $t8 := table::new<address, coin::Coin<aptos_coin::AptosCoin>>() on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:277:62+12
    assume {:print "$at(2,12478,12490)"} true;
    call $t8 := $1_table_new'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''();
    if ($abort_flag) {
        assume {:print "$at(2,12478,12490)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,32):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t9 := pack stake::ValidatorFees($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:277:34+42
    $t9 := $1_stake_ValidatorFees($t8);

    // move_to<stake::ValidatorFees>($t9, $t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:277:9+7
    if ($ResourceExists($1_stake_ValidatorFees_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_ValidatorFees_$memory := $ResourceUpdate($1_stake_ValidatorFees_$memory, $addr#$signer($t0), $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(2,12425,12432)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,32):", $t2} $t2 == $t2;
        goto L4;
    }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:278:5+1
    assume {:print "$at(2,12499,12500)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:278:5+1
    assume {:print "$at(2,12499,12500)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:278:5+1
L4:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:278:5+1
    assume {:print "$at(2,12499,12500)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::is_allowed [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1347:5+313
procedure {:inline 1} $1_stake_is_allowed(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: bool;
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: $1_stake_AllowedValidators;
    var $t8: int;
    var $t9: Vec (int);
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1347:5+1
    assume {:print "$at(2,64234,64235)"} true;
    assume {:print "$track_local(38,33,0):", $t0} $t0 == $t0;

    // $t2 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:40+16
    assume {:print "$at(2,64341,64357)"} true;
    $t2 := 1;
    assume $IsValid'address'($t2);

    // $t3 := exists<stake::AllowedValidators>($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:14+6
    $t3 := $ResourceExists($1_stake_AllowedValidators_$memory, $t2);

    // $t4 := !($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:13+1
    call $t4 := $Not($t3);

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1349:13+4
    assume {:print "$at(2,64374,64378)"} true;
L1:

    // $t5 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1349:13+4
    assume {:print "$at(2,64374,64378)"} true;
    $t5 := true;
    assume $IsValid'bool'($t5);

    // $t1 := $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    assume {:print "$at(2,64310,64541)"} true;
    $t1 := $t5;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1351:60+16
    assume {:print "$at(2,64455,64471)"} true;
L0:

    // $t6 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1351:60+16
    assume {:print "$at(2,64455,64471)"} true;
    $t6 := 1;
    assume $IsValid'address'($t6);

    // $t7 := get_global<stake::AllowedValidators>($t6) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1351:27+13
    if (!$ResourceExists($1_stake_AllowedValidators_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_stake_AllowedValidators_$memory, $t6);
    }
    if ($abort_flag) {
        assume {:print "$at(2,64422,64435)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(38,33):", $t8} $t8 == $t8;
        goto L4;
    }

    // $t9 := get_field<stake::AllowedValidators>.accounts($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1352:30+17
    assume {:print "$at(2,64503,64520)"} true;
    $t9 := $accounts#$1_stake_AllowedValidators($t7);

    // $t1 := vector::contains<address>($t9, $t0) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1352:13+45
    call $t1 := $1_vector_contains'address'($t9, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,64486,64531)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(38,33):", $t8} $t8 == $t8;
        goto L4;
    }

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    assume {:print "$at(2,64310,64541)"} true;
L2:

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    assume {:print "$at(2,64310,64541)"} true;
    assume {:print "$track_return(38,33,0):", $t1} $t1 == $t1;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1354:5+1
    assume {:print "$at(2,64546,64547)"} true;
L3:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1354:5+1
    assume {:print "$at(2,64546,64547)"} true;
    $ret0 := $t1;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1354:5+1
L4:

    // abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1354:5+1
    assume {:print "$at(2,64546,64547)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun stake::is_allowed [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1347:5+313
procedure {:timeLimit 40} $1_stake_is_allowed$verify(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: bool;
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: $1_stake_AllowedValidators;
    var $t8: int;
    var $t9: Vec (int);
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1347:5+1
    assume {:print "$at(2,64234,64235)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::AllowedValidators>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1347:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AllowedValidators_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AllowedValidators_$memory, $a_0);
    ($IsValid'$1_stake_AllowedValidators'($rsc))));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1347:5+1
    assume {:print "$track_local(38,33,0):", $t0} $t0 == $t0;

    // $t2 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:40+16
    assume {:print "$at(2,64341,64357)"} true;
    $t2 := 1;
    assume $IsValid'address'($t2);

    // $t3 := exists<stake::AllowedValidators>($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:14+6
    $t3 := $ResourceExists($1_stake_AllowedValidators_$memory, $t2);

    // $t4 := !($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:13+1
    call $t4 := $Not($t3);

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1349:13+4
    assume {:print "$at(2,64374,64378)"} true;
L1:

    // $t5 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1349:13+4
    assume {:print "$at(2,64374,64378)"} true;
    $t5 := true;
    assume $IsValid'bool'($t5);

    // $t1 := $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    assume {:print "$at(2,64310,64541)"} true;
    $t1 := $t5;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1351:60+16
    assume {:print "$at(2,64455,64471)"} true;
L0:

    // $t6 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1351:60+16
    assume {:print "$at(2,64455,64471)"} true;
    $t6 := 1;
    assume $IsValid'address'($t6);

    // $t7 := get_global<stake::AllowedValidators>($t6) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1351:27+13
    if (!$ResourceExists($1_stake_AllowedValidators_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_stake_AllowedValidators_$memory, $t6);
    }
    if ($abort_flag) {
        assume {:print "$at(2,64422,64435)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(38,33):", $t8} $t8 == $t8;
        goto L4;
    }

    // $t9 := get_field<stake::AllowedValidators>.accounts($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1352:30+17
    assume {:print "$at(2,64503,64520)"} true;
    $t9 := $accounts#$1_stake_AllowedValidators($t7);

    // $t1 := vector::contains<address>($t9, $t0) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1352:13+45
    call $t1 := $1_vector_contains'address'($t9, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,64486,64531)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(38,33):", $t8} $t8 == $t8;
        goto L4;
    }

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    assume {:print "$at(2,64310,64541)"} true;
L2:

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1348:9+231
    assume {:print "$at(2,64310,64541)"} true;
    assume {:print "$track_return(38,33,0):", $t1} $t1 == $t1;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1354:5+1
    assume {:print "$at(2,64546,64547)"} true;
L3:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1354:5+1
    assume {:print "$at(2,64546,64547)"} true;
    $ret0 := $t1;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1354:5+1
L4:

    // abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1354:5+1
    assume {:print "$at(2,64546,64547)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun stake::is_current_epoch_validator [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
procedure {:inline 1} $1_stake_is_current_epoch_validator(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: $1_stake_ValidatorSet;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume {:print "$at(2,46317,46318)"} true;
    assume {:print "$track_local(38,34,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:980:9+38
    assume {:print "$at(2,46416,46454)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,46416,46454)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,34):", $t3} $t3 == $t3;
        goto L4;
    }

    // assume Identical($t4, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t4 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t5 := stake::get_validator_state($t0) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:981:31+33
    assume {:print "$at(2,46486,46519)"} true;
    call $t5 := $1_stake_get_validator_state($t0);
    if ($abort_flag) {
        assume {:print "$at(2,46486,46519)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,34):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_local[validator_state]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:981:13+15
    assume {:print "$track_local(38,34,2):", $t5} $t5 == $t5;

    // $t6 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:28+23
    assume {:print "$at(2,46548,46571)"} true;
    $t6 := 2;
    assume $IsValid'u64'($t6);

    // $t7 := ==($t5, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:25+2
    $t7 := $IsEqual'u64'($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
L1:

    // $t8 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    assume {:print "$at(2,46529,46627)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    $t1 := $t8;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:55+15
L0:

    // $t9 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:74+33
    assume {:print "$at(2,46594,46627)"} true;
    $t9 := 3;
    assume $IsValid'u64'($t9);

    // $t1 := ==($t5, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:71+2
    $t1 := $IsEqual'u64'($t5, $t9);

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
L2:

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    assume {:print "$at(2,46529,46627)"} true;
    assume {:print "$track_return(38,34,0):", $t1} $t1 == $t1;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:983:5+1
    assume {:print "$at(2,46632,46633)"} true;
L3:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:983:5+1
    assume {:print "$at(2,46632,46633)"} true;
    $ret0 := $t1;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:983:5+1
L4:

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:983:5+1
    assume {:print "$at(2,46632,46633)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun stake::is_current_epoch_validator [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
procedure {:timeLimit 40} $1_stake_is_current_epoch_validator$verify(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: $1_stake_ValidatorSet;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    var $1_stake_StakePool_$memory#40: $Memory $1_stake_StakePool;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume {:print "$at(2,46317,46318)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingRewardsConfig>(): And(WellFormed($rsc), And(And(And(fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.rewards_rate($rsc), fixed_point64::spec_create_from_u128(1)), fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.min_rewards_rate($rsc), select staking_config::StakingRewardsConfig.rewards_rate($rsc))), Eq<u64>(select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($rsc), 31536000)), Le(fixed_point64::spec_ceil(select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($rsc)), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingRewardsConfig'($rsc) && ((($1_fixed_point64_spec_less_or_equal($rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $1_fixed_point64_spec_create_from_u128(1)) && $1_fixed_point64_spec_less_or_equal($min_rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $rewards_rate#$1_staking_config_StakingRewardsConfig($rsc))) && $IsEqual'u64'($rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($rsc), 31536000)) && ($1_fixed_point64_spec_ceil($rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($rsc)) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+316
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // @40 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    $1_stake_StakePool_$memory#40 := $1_stake_StakePool_$memory;

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:979:5+1
    assume {:print "$at(2,46317,46318)"} true;
    assume {:print "$track_local(38,34,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:980:9+38
    assume {:print "$at(2,46416,46454)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,46416,46454)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,34):", $t3} $t3 == $t3;
        goto L4;
    }

    // assume Identical($t4, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t4 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t5 := stake::get_validator_state($t0) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:981:31+33
    assume {:print "$at(2,46486,46519)"} true;
    call $t5 := $1_stake_get_validator_state($t0);
    if ($abort_flag) {
        assume {:print "$at(2,46486,46519)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,34):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_local[validator_state]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:981:13+15
    assume {:print "$track_local(38,34,2):", $t5} $t5 == $t5;

    // $t6 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:28+23
    assume {:print "$at(2,46548,46571)"} true;
    $t6 := 2;
    assume $IsValid'u64'($t6);

    // $t7 := ==($t5, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:25+2
    $t7 := $IsEqual'u64'($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
L1:

    // $t8 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    assume {:print "$at(2,46529,46627)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    $t1 := $t8;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:55+15
L0:

    // $t9 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:74+33
    assume {:print "$at(2,46594,46627)"} true;
    $t9 := 3;
    assume $IsValid'u64'($t9);

    // $t1 := ==($t5, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:71+2
    $t1 := $IsEqual'u64'($t5, $t9);

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
L2:

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:982:9+98
    assume {:print "$at(2,46529,46627)"} true;
    assume {:print "$track_return(38,34,0):", $t1} $t1 == $t1;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:983:5+1
    assume {:print "$at(2,46632,46633)"} true;
L3:

    // assert Not(Not(stake::spec_has_stake_pool[@40]($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:235:9+45
    assume {:print "$at(3,10155,10200)"} true;
    assert {:msg "assert_failed(3,10155,10200): function does not abort under this condition"}
      !!$1_stake_spec_has_stake_pool($1_stake_StakePool_$memory#40, $t0);

    // assert Eq<bool>($t1, stake::spec_is_current_epoch_validator($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:236:9+64
    assume {:print "$at(3,10209,10273)"} true;
    assert {:msg "assert_failed(3,10209,10273): post-condition does not hold"}
      $IsEqual'bool'($t1, $1_stake_spec_is_current_epoch_validator($1_stake_ValidatorSet_$memory, $t0));

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:236:9+64
    $ret0 := $t1;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:983:5+1
    assume {:print "$at(2,46632,46633)"} true;
L4:

    // assert Not(stake::spec_has_stake_pool[@40]($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:233:5+203
    assume {:print "$at(3,10076,10279)"} true;
    assert {:msg "assert_failed(3,10076,10279): abort not covered by any of the `aborts_if` clauses"}
      !$1_stake_spec_has_stake_pool($1_stake_StakePool_$memory#40, $t0);

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:233:5+203
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun stake::join_validator_set [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+415
procedure {:timeLimit 40} $1_stake_join_validator_set$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $1_staking_config_StakingConfig;
    var $t3: $1_staking_config_StakingConfig;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume {:print "$at(2,36285,36286)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+415
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+415
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+415
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // trace_local[operator]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume {:print "$track_local(38,35,0):", $t0} $t0 == $t0;

    // trace_local[pool_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:785:5+1
    assume {:print "$track_local(38,35,1):", $t1} $t1 == $t1;

    // $t3 := staking_config::get() on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:790:61+21
    assume {:print "$at(2,36514,36535)"} true;
    call $t3 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,36514,36535)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,35):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t5 := staking_config::get_allow_validator_set_change($t3) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:790:13+70
    call $t5 := $1_staking_config_get_allow_validator_set_change($t3);
    if ($abort_flag) {
        assume {:print "$at(2,36466,36536)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,35):", $t4} $t4 == $t4;
        goto L4;
    }

    // if ($t5) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:789:9+186
    assume {:print "$at(2,36445,36631)"} true;
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:789:9+186
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:789:9+186
    assume {:print "$at(2,36445,36631)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:789:9+186
L0:

    // $t6 := 10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:791:37+45
    assume {:print "$at(2,36574,36619)"} true;
    $t6 := 10;
    assume $IsValid'u64'($t6);

    // $t7 := error::invalid_argument($t6) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:791:13+70
    call $t7 := $1_error_invalid_argument($t6);
    if ($abort_flag) {
        assume {:print "$at(2,36550,36620)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,35):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:789:9+186
    assume {:print "$at(2,36445,36631)"} true;
    assume {:print "$track_abort(38,35):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:789:9+186
    $t4 := $t7;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:789:9+186
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:794:37+8
    assume {:print "$at(2,36670,36678)"} true;
L2:

    // stake::join_validator_set_internal($t0, $t1) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:794:9+51
    assume {:print "$at(2,36642,36693)"} true;
    call $1_stake_join_validator_set_internal($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,36642,36693)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,35):", $t4} $t4 == $t4;
        goto L4;
    }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:795:5+1
    assume {:print "$at(2,36699,36700)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:795:5+1
    assume {:print "$at(2,36699,36700)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:795:5+1
L4:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:795:5+1
    assume {:print "$at(2,36699,36700)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::join_validator_set_internal [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+2016
procedure {:inline 1} $1_stake_join_validator_set_internal(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_stake_StakePool);
    var $t4: $1_stake_ValidatorConfig;
    var $t5: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t6: $1_staking_config_StakingConfig;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_stake_StakePool);
    var $t10: $Mutation ($1_stake_ValidatorConfig);
    var $t11: $Mutation ($1_stake_ValidatorSet);
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation ($1_stake_StakePool);
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: $1_stake_ValidatorSet;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: $1_staking_config_StakingConfig;
    var $t27: int;
    var $t28: int;
    var $t29: $1_stake_StakePool;
    var $t30: int;
    var $t31: bool;
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: $1_stake_ValidatorSet;
    var $t39: $1_staking_config_StakingConfig;
    var $t40: int;
    var $t41: $Mutation ($1_stake_ValidatorConfig);
    var $t42: Vec (int);
    var $t43: bool;
    var $t44: bool;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: $Mutation ($1_stake_ValidatorSet);
    var $t49: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t50: $1_stake_ValidatorConfig;
    var $t51: $1_stake_StakePool;
    var $t52: $1_stake_ValidatorInfo;
    var $t53: Vec ($1_stake_ValidatorInfo);
    var $t54: int;
    var $t55: Vec ($1_stake_ValidatorInfo);
    var $t56: int;
    var $t57: int;
    var $t58: int;
    var $t59: bool;
    var $t60: int;
    var $t61: int;
    var $t62: $Mutation ($1_event_EventHandle'$1_stake_JoinValidatorSetEvent');
    var $t63: $1_stake_JoinValidatorSetEvent;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[operator]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume {:print "$at(2,37205,37206)"} true;
    assume {:print "$track_local(38,36,0):", $t0} $t0 == $t0;

    // trace_local[pool_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume {:print "$track_local(38,36,1):", $t1} $t1 == $t1;

    // stake::assert_stake_pool_exists($t1) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:807:9+38
    assume {:print "$at(2,37376,37414)"} true;
    call $1_stake_assert_stake_pool_exists($t1);
    if ($abort_flag) {
        assume {:print "$at(2,37376,37414)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t14 := borrow_global<stake::StakePool>($t1) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:808:26+17
    assume {:print "$at(2,37441,37458)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,37441,37458)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[stake_pool]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:808:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t14);
    assume {:print "$track_local(38,36,9):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t15 := signer::address_of($t0) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:17+28
    assume {:print "$at(2,37501,37529)"} true;
    call $t15 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,37501,37529)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t16 := get_field<stake::StakePool>.operator_address($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:49+27
    $t16 := $operator_address#$1_stake_StakePool($Dereference($t14));

    // $t17 := ==($t15, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:46+2
    $t17 := $IsEqual'address'($t15, $t16);

    // if ($t17) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    if ($t17) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    assume {:print "$at(2,37493,37600)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
L0:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    assume {:print "$at(2,37493,37600)"} true;

    // $t18 := 9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:101+13
    $t18 := 9;
    assume $IsValid'u64'($t18);

    // $t19 := error::unauthenticated($t18) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:78+37
    call $t19 := $1_error_unauthenticated($t18);
    if ($abort_flag) {
        assume {:print "$at(2,37562,37599)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    assume {:print "$at(2,37493,37600)"} true;
    assume {:print "$track_abort(38,36):", $t19} $t19 == $t19;

    // $t13 := move($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    $t13 := $t19;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    goto L19;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:811:33+12
    assume {:print "$at(2,37651,37663)"} true;
L2:

    // assume Identical($t20, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t20 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t21 := stake::get_validator_state($t1) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:811:13+33
    assume {:print "$at(2,37631,37664)"} true;
    call $t21 := $1_stake_get_validator_state($t1);
    if ($abort_flag) {
        assume {:print "$at(2,37631,37664)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t22 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:811:50+25
    $t22 := 4;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:811:47+2
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    assume {:print "$at(2,37610,37765)"} true;
    if ($t23) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    assume {:print "$at(2,37610,37765)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
L3:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    assume {:print "$at(2,37610,37765)"} true;

    // $t24 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:812:34+25
    assume {:print "$at(2,37728,37753)"} true;
    $t24 := 4;
    assume $IsValid'u64'($t24);

    // $t25 := error::invalid_state($t24) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:812:13+47
    call $t25 := $1_error_invalid_state($t24);
    if ($abort_flag) {
        assume {:print "$at(2,37707,37754)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    assume {:print "$at(2,37610,37765)"} true;
    assume {:print "$track_abort(38,36):", $t25} $t25 == $t25;

    // $t13 := move($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    $t13 := $t25;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    goto L19;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:815:22+21
    assume {:print "$at(2,37789,37810)"} true;
L5:

    // $t26 := staking_config::get() on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:815:22+21
    assume {:print "$at(2,37789,37810)"} true;
    call $t26 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,37789,37810)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[config]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:815:13+6
    assume {:print "$track_local(38,36,6):", $t26} $t26 == $t26;

    // ($t27, $t28) := staking_config::get_required_stake($t26) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:816:46+43
    assume {:print "$at(2,37857,37900)"} true;
    call $t27,$t28 := $1_staking_config_get_required_stake($t26);
    if ($abort_flag) {
        assume {:print "$at(2,37857,37900)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[maximum_stake]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:816:29+13
    assume {:print "$track_local(38,36,7):", $t28} $t28 == $t28;

    // trace_local[minimum_stake]($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:816:14+13
    assume {:print "$track_local(38,36,8):", $t27} $t27 == $t27;

    // $t29 := read_ref($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:817:56+10
    assume {:print "$at(2,37957,37967)"} true;
    $t29 := $Dereference($t14);

    // $t30 := stake::get_next_epoch_voting_power($t29) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:817:28+39
    call $t30 := $1_stake_get_next_epoch_voting_power($t29);
    if ($abort_flag) {
        assume {:print "$at(2,37929,37968)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[voting_power]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:817:13+12
    assume {:print "$track_local(38,36,12):", $t30} $t30 == $t30;

    // $t31 := >=($t30, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:30+2
    assume {:print "$at(2,37999,38001)"} true;
    call $t31 := $Ge($t30, $t27);

    // if ($t31) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    if ($t31) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
L7:

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    assume {:print "$at(2,37978,38057)"} true;
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
L6:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    assume {:print "$at(2,37978,38057)"} true;

    // $t32 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:72+14
    $t32 := 2;
    assume $IsValid'u64'($t32);

    // $t33 := error::invalid_argument($t32) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:48+39
    call $t33 := $1_error_invalid_argument($t32);
    if ($abort_flag) {
        assume {:print "$at(2,38017,38056)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    assume {:print "$at(2,37978,38057)"} true;
    assume {:print "$track_abort(38,36):", $t33} $t33 == $t33;

    // $t13 := move($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    $t13 := $t33;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    goto L19;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:17+12
    assume {:print "$at(2,38075,38087)"} true;
L8:

    // $t34 := <=($t30, $t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:30+2
    assume {:print "$at(2,38088,38090)"} true;
    call $t34 := $Le($t30, $t28);

    // if ($t34) goto L10 else goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    if ($t34) { goto L10; } else { goto L9; }

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
L10:

    // goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    assume {:print "$at(2,38067,38147)"} true;
    goto L11;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
L9:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    assume {:print "$at(2,38067,38147)"} true;

    // $t35 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:72+15
    $t35 := 3;
    assume $IsValid'u64'($t35);

    // $t36 := error::invalid_argument($t35) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:48+40
    call $t36 := $1_error_invalid_argument($t35);
    if ($abort_flag) {
        assume {:print "$at(2,38106,38146)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    assume {:print "$at(2,38067,38147)"} true;
    assume {:print "$track_abort(38,36):", $t36} $t36 == $t36;

    // $t13 := move($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    $t13 := $t36;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    goto L19;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:822:38+12
    assume {:print "$at(2,38240,38252)"} true;
L11:

    // assume Identical($t37, 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:304:9+29
    assume {:print "$at(3,14055,14084)"} true;
    assume ($t37 == 1);

    // assume Identical($t38, global<stake::ValidatorSet>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:305:9+52
    assume {:print "$at(3,14093,14145)"} true;
    assume ($t38 == $ResourceValue($1_stake_ValidatorSet_$memory, $t37));

    // assume Identical($t39, global<staking_config::StakingConfig>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:307:9+66
    assume {:print "$at(3,14216,14282)"} true;
    assume ($t39 == $ResourceValue($1_staking_config_StakingConfig_$memory, $t37));

    // assume Identical($t40, select staking_config::StakingConfig.voting_power_increase_limit($t39)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:308:9+77
    assume {:print "$at(3,14291,14368)"} true;
    assume ($t40 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t39));

    // stake::update_voting_power_increase($t30) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:822:9+42
    assume {:print "$at(2,38211,38253)"} true;
    call $1_stake_update_voting_power_increase($t30);
    if ($abort_flag) {
        assume {:print "$at(2,38211,38253)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t41 := borrow_global<stake::ValidatorConfig>($t1) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:825:32+17
    assume {:print "$at(2,38366,38383)"} true;
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t41 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_ValidatorConfig_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,38366,38383)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[validator_config]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:825:13+16
    $temp_0'$1_stake_ValidatorConfig' := $Dereference($t41);
    assume {:print "$track_local(38,36,10):", $temp_0'$1_stake_ValidatorConfig'} $temp_0'$1_stake_ValidatorConfig' == $temp_0'$1_stake_ValidatorConfig';

    // $t42 := get_field<stake::ValidatorConfig>.consensus_pubkey($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:35+34
    assume {:print "$at(2,38450,38484)"} true;
    $t42 := $consensus_pubkey#$1_stake_ValidatorConfig($Dereference($t41));

    // $t43 := vector::is_empty<u8>($t42) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:18+52
    call $t43 := $1_vector_is_empty'u8'($t42);
    if ($abort_flag) {
        assume {:print "$at(2,38433,38485)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t44 := !($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:17+1
    call $t44 := $Not($t43);

    // if ($t44) goto L13 else goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    if ($t44) { goto L13; } else { goto L12; }

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
L13:

    // goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    assume {:print "$at(2,38424,38532)"} true;
    goto L14;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
L12:

    // destroy($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    assume {:print "$at(2,38424,38532)"} true;

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108

    // $t45 := 11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:96+19
    $t45 := 11;
    assume $IsValid'u64'($t45);

    // $t46 := error::invalid_argument($t45) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:72+44
    call $t46 := $1_error_invalid_argument($t45);
    if ($abort_flag) {
        assume {:print "$at(2,38487,38531)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    assume {:print "$at(2,38424,38532)"} true;
    assume {:print "$track_abort(38,36):", $t46} $t46 == $t46;

    // $t13 := move($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    $t13 := $t46;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    goto L19;

    // label L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:829:61+16
    assume {:print "$at(2,38674,38690)"} true;
L14:

    // $t47 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:829:61+16
    assume {:print "$at(2,38674,38690)"} true;
    $t47 := 1;
    assume $IsValid'address'($t47);

    // $t48 := borrow_global<stake::ValidatorSet>($t47) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:829:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t47)) {
        call $ExecFailureAbort();
    } else {
        $t48 := $Mutation($Global($t47), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t47));
    }
    if ($abort_flag) {
        assume {:print "$at(2,38642,38659)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[validator_set]($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:829:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t48);
    assume {:print "$track_local(38,36,11):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t49 := borrow_field<stake::ValidatorSet>.pending_active($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:27+33
    assume {:print "$at(2,38719,38752)"} true;
    $t49 := $ChildMutation($t48, 3, $pending_active#$1_stake_ValidatorSet($Dereference($t48)));

    // $t50 := read_ref($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:112+17
    $t50 := $Dereference($t41);

    // $t51 := read_ref($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:85+45
    $t51 := $Dereference($t14);

    // $t52 := stake::generate_validator_info($t1, $t51, $t50) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:62+68
    call $t52 := $1_stake_generate_validator_info($t1, $t51, $t50);
    if ($abort_flag) {
        assume {:print "$at(2,38754,38822)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // vector::push_back<stake::ValidatorInfo>($t49, $t52) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:9+122
    call $t49 := $1_vector_push_back'$1_stake_ValidatorInfo'($t49, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,38701,38823)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // write_back[Reference($t48).pending_active (vector<stake::ValidatorInfo>)]($t49) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:9+122
    $t48 := $UpdateMutation($t48, $Update'$1_stake_ValidatorSet'_pending_active($Dereference($t48), $Dereference($t49)));

    // $t53 := get_field<stake::ValidatorSet>.active_validators($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:49+32
    assume {:print "$at(2,38873,38905)"} true;
    $t53 := $active_validators#$1_stake_ValidatorSet($Dereference($t48));

    // $t54 := vector::length<stake::ValidatorInfo>($t53) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:34+48
    call $t54 := $1_vector_length'$1_stake_ValidatorInfo'($t53);
    if ($abort_flag) {
        assume {:print "$at(2,38858,38906)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t55 := get_field<stake::ValidatorSet>.pending_active($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:100+29
    $t55 := $pending_active#$1_stake_ValidatorSet($Dereference($t48));

    // write_back[stake::ValidatorSet@]($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:100+29
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t48),
        $Dereference($t48));

    // $t56 := vector::length<stake::ValidatorInfo>($t55) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:85+45
    call $t56 := $1_vector_length'$1_stake_ValidatorInfo'($t55);
    if ($abort_flag) {
        assume {:print "$at(2,38909,38954)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t57 := +($t54, $t56) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:83+1
    call $t57 := $AddU64($t54, $t56);
    if ($abort_flag) {
        assume {:print "$at(2,38907,38908)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t58 := 65536 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:39+22
    assume {:print "$at(2,38994,39016)"} true;
    $t58 := 65536;
    assume $IsValid'u64'($t58);

    // $t59 := <=($t57, $t58) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:36+2
    call $t59 := $Le($t57, $t58);

    // if ($t59) goto L16 else goto L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    if ($t59) { goto L16; } else { goto L15; }

    // label L16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
L16:

    // goto L17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    assume {:print "$at(2,38964,39068)"} true;
    goto L17;

    // label L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
L15:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    assume {:print "$at(2,38964,39068)"} true;

    // $t60 := 12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:87+24
    $t60 := 12;
    assume $IsValid'u64'($t60);

    // $t61 := error::invalid_argument($t60) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:63+49
    call $t61 := $1_error_invalid_argument($t60);
    if ($abort_flag) {
        assume {:print "$at(2,39018,39067)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t61) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    assume {:print "$at(2,38964,39068)"} true;
    assume {:print "$track_abort(38,36):", $t61} $t61 == $t61;

    // $t13 := move($t61) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    $t13 := $t61;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    goto L19;

    // label L17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:835:18+10
    assume {:print "$at(2,39115,39125)"} true;
L17:

    // $t62 := borrow_field<stake::StakePool>.join_validator_set_events($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:835:13+41
    assume {:print "$at(2,39110,39151)"} true;
    $t62 := $ChildMutation($t14, 14, $join_validator_set_events#$1_stake_StakePool($Dereference($t14)));

    // $t63 := pack stake::JoinValidatorSetEvent($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:836:13+38
    assume {:print "$at(2,39165,39203)"} true;
    $t63 := $1_stake_JoinValidatorSetEvent($t1);

    // opaque begin: event::emit_event<stake::JoinValidatorSetEvent>($t62, $t63) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:834:9+135
    assume {:print "$at(2,39079,39214)"} true;

    // opaque end: event::emit_event<stake::JoinValidatorSetEvent>($t62, $t63) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:834:9+135

    // write_back[Reference($t14).join_validator_set_events (event::EventHandle<stake::JoinValidatorSetEvent>)]($t62) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:834:9+135
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_join_validator_set_events($Dereference($t14), $Dereference($t62)));

    // write_back[stake::StakePool@]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:834:9+135
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t14),
        $Dereference($t14));

    // label L18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:838:5+1
    assume {:print "$at(2,39220,39221)"} true;
L18:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:838:5+1
    assume {:print "$at(2,39220,39221)"} true;
    return;

    // label L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:838:5+1
L19:

    // abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:838:5+1
    assume {:print "$at(2,39220,39221)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun stake::join_validator_set_internal [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+2016
procedure {:timeLimit 40} $1_stake_join_validator_set_internal$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_stake_StakePool);
    var $t4: $1_stake_ValidatorConfig;
    var $t5: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t6: $1_staking_config_StakingConfig;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_stake_StakePool);
    var $t10: $Mutation ($1_stake_ValidatorConfig);
    var $t11: $Mutation ($1_stake_ValidatorSet);
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation ($1_stake_StakePool);
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: $1_stake_ValidatorSet;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: $1_staking_config_StakingConfig;
    var $t27: int;
    var $t28: int;
    var $t29: $1_stake_StakePool;
    var $t30: int;
    var $t31: bool;
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: $1_stake_ValidatorSet;
    var $t39: $1_staking_config_StakingConfig;
    var $t40: int;
    var $t41: $Mutation ($1_stake_ValidatorConfig);
    var $t42: Vec (int);
    var $t43: bool;
    var $t44: bool;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: $Mutation ($1_stake_ValidatorSet);
    var $t49: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t50: $1_stake_ValidatorConfig;
    var $t51: $1_stake_StakePool;
    var $t52: $1_stake_ValidatorInfo;
    var $t53: Vec ($1_stake_ValidatorInfo);
    var $t54: int;
    var $t55: Vec ($1_stake_ValidatorInfo);
    var $t56: int;
    var $t57: int;
    var $t58: int;
    var $t59: bool;
    var $t60: int;
    var $t61: int;
    var $t62: $Mutation ($1_event_EventHandle'$1_stake_JoinValidatorSetEvent');
    var $t63: $1_stake_JoinValidatorSetEvent;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume {:print "$at(2,37205,37206)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+2016
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+2016
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+2016
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // trace_local[operator]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume {:print "$track_local(38,36,0):", $t0} $t0 == $t0;

    // trace_local[pool_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:803:5+1
    assume {:print "$track_local(38,36,1):", $t1} $t1 == $t1;

    // stake::assert_stake_pool_exists($t1) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:807:9+38
    assume {:print "$at(2,37376,37414)"} true;
    call $1_stake_assert_stake_pool_exists($t1);
    if ($abort_flag) {
        assume {:print "$at(2,37376,37414)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t14 := borrow_global<stake::StakePool>($t1) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:808:26+17
    assume {:print "$at(2,37441,37458)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,37441,37458)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[stake_pool]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:808:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t14);
    assume {:print "$track_local(38,36,9):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t15 := signer::address_of($t0) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:17+28
    assume {:print "$at(2,37501,37529)"} true;
    call $t15 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,37501,37529)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t16 := get_field<stake::StakePool>.operator_address($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:49+27
    $t16 := $operator_address#$1_stake_StakePool($Dereference($t14));

    // $t17 := ==($t15, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:46+2
    $t17 := $IsEqual'address'($t15, $t16);

    // if ($t17) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    if ($t17) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    assume {:print "$at(2,37493,37600)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
L0:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    assume {:print "$at(2,37493,37600)"} true;

    // $t18 := 9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:101+13
    $t18 := 9;
    assume $IsValid'u64'($t18);

    // $t19 := error::unauthenticated($t18) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:78+37
    call $t19 := $1_error_unauthenticated($t18);
    if ($abort_flag) {
        assume {:print "$at(2,37562,37599)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    assume {:print "$at(2,37493,37600)"} true;
    assume {:print "$track_abort(38,36):", $t19} $t19 == $t19;

    // $t13 := move($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    $t13 := $t19;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:809:9+107
    goto L19;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:811:33+12
    assume {:print "$at(2,37651,37663)"} true;
L2:

    // assume Identical($t20, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t20 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t21 := stake::get_validator_state($t1) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:811:13+33
    assume {:print "$at(2,37631,37664)"} true;
    call $t21 := $1_stake_get_validator_state($t1);
    if ($abort_flag) {
        assume {:print "$at(2,37631,37664)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t22 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:811:50+25
    $t22 := 4;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:811:47+2
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    assume {:print "$at(2,37610,37765)"} true;
    if ($t23) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    assume {:print "$at(2,37610,37765)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
L3:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    assume {:print "$at(2,37610,37765)"} true;

    // $t24 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:812:34+25
    assume {:print "$at(2,37728,37753)"} true;
    $t24 := 4;
    assume $IsValid'u64'($t24);

    // $t25 := error::invalid_state($t24) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:812:13+47
    call $t25 := $1_error_invalid_state($t24);
    if ($abort_flag) {
        assume {:print "$at(2,37707,37754)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    assume {:print "$at(2,37610,37765)"} true;
    assume {:print "$track_abort(38,36):", $t25} $t25 == $t25;

    // $t13 := move($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    $t13 := $t25;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:810:9+155
    goto L19;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:815:22+21
    assume {:print "$at(2,37789,37810)"} true;
L5:

    // $t26 := staking_config::get() on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:815:22+21
    assume {:print "$at(2,37789,37810)"} true;
    call $t26 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,37789,37810)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[config]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:815:13+6
    assume {:print "$track_local(38,36,6):", $t26} $t26 == $t26;

    // ($t27, $t28) := staking_config::get_required_stake($t26) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:816:46+43
    assume {:print "$at(2,37857,37900)"} true;
    call $t27,$t28 := $1_staking_config_get_required_stake($t26);
    if ($abort_flag) {
        assume {:print "$at(2,37857,37900)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[maximum_stake]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:816:29+13
    assume {:print "$track_local(38,36,7):", $t28} $t28 == $t28;

    // trace_local[minimum_stake]($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:816:14+13
    assume {:print "$track_local(38,36,8):", $t27} $t27 == $t27;

    // $t29 := read_ref($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:817:56+10
    assume {:print "$at(2,37957,37967)"} true;
    $t29 := $Dereference($t14);

    // $t30 := stake::get_next_epoch_voting_power($t29) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:817:28+39
    call $t30 := $1_stake_get_next_epoch_voting_power($t29);
    if ($abort_flag) {
        assume {:print "$at(2,37929,37968)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[voting_power]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:817:13+12
    assume {:print "$track_local(38,36,12):", $t30} $t30 == $t30;

    // $t31 := >=($t30, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:30+2
    assume {:print "$at(2,37999,38001)"} true;
    call $t31 := $Ge($t30, $t27);

    // if ($t31) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    if ($t31) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
L7:

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    assume {:print "$at(2,37978,38057)"} true;
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
L6:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    assume {:print "$at(2,37978,38057)"} true;

    // $t32 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:72+14
    $t32 := 2;
    assume $IsValid'u64'($t32);

    // $t33 := error::invalid_argument($t32) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:48+39
    call $t33 := $1_error_invalid_argument($t32);
    if ($abort_flag) {
        assume {:print "$at(2,38017,38056)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    assume {:print "$at(2,37978,38057)"} true;
    assume {:print "$track_abort(38,36):", $t33} $t33 == $t33;

    // $t13 := move($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    $t13 := $t33;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:818:9+79
    goto L19;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:17+12
    assume {:print "$at(2,38075,38087)"} true;
L8:

    // $t34 := <=($t30, $t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:30+2
    assume {:print "$at(2,38088,38090)"} true;
    call $t34 := $Le($t30, $t28);

    // if ($t34) goto L10 else goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    if ($t34) { goto L10; } else { goto L9; }

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
L10:

    // goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    assume {:print "$at(2,38067,38147)"} true;
    goto L11;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
L9:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    assume {:print "$at(2,38067,38147)"} true;

    // $t35 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:72+15
    $t35 := 3;
    assume $IsValid'u64'($t35);

    // $t36 := error::invalid_argument($t35) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:48+40
    call $t36 := $1_error_invalid_argument($t35);
    if ($abort_flag) {
        assume {:print "$at(2,38106,38146)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    assume {:print "$at(2,38067,38147)"} true;
    assume {:print "$track_abort(38,36):", $t36} $t36 == $t36;

    // $t13 := move($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    $t13 := $t36;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:819:9+80
    goto L19;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:822:38+12
    assume {:print "$at(2,38240,38252)"} true;
L11:

    // assume Identical($t37, 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:304:9+29
    assume {:print "$at(3,14055,14084)"} true;
    assume ($t37 == 1);

    // assume Identical($t38, global<stake::ValidatorSet>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:305:9+52
    assume {:print "$at(3,14093,14145)"} true;
    assume ($t38 == $ResourceValue($1_stake_ValidatorSet_$memory, $t37));

    // assume Identical($t39, global<staking_config::StakingConfig>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:307:9+66
    assume {:print "$at(3,14216,14282)"} true;
    assume ($t39 == $ResourceValue($1_staking_config_StakingConfig_$memory, $t37));

    // assume Identical($t40, select staking_config::StakingConfig.voting_power_increase_limit($t39)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:308:9+77
    assume {:print "$at(3,14291,14368)"} true;
    assume ($t40 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t39));

    // stake::update_voting_power_increase($t30) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:822:9+42
    assume {:print "$at(2,38211,38253)"} true;
    call $1_stake_update_voting_power_increase($t30);
    if ($abort_flag) {
        assume {:print "$at(2,38211,38253)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t41 := borrow_global<stake::ValidatorConfig>($t1) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:825:32+17
    assume {:print "$at(2,38366,38383)"} true;
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t41 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_ValidatorConfig_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,38366,38383)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[validator_config]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:825:13+16
    $temp_0'$1_stake_ValidatorConfig' := $Dereference($t41);
    assume {:print "$track_local(38,36,10):", $temp_0'$1_stake_ValidatorConfig'} $temp_0'$1_stake_ValidatorConfig' == $temp_0'$1_stake_ValidatorConfig';

    // $t42 := get_field<stake::ValidatorConfig>.consensus_pubkey($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:35+34
    assume {:print "$at(2,38450,38484)"} true;
    $t42 := $consensus_pubkey#$1_stake_ValidatorConfig($Dereference($t41));

    // $t43 := vector::is_empty<u8>($t42) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:18+52
    call $t43 := $1_vector_is_empty'u8'($t42);
    if ($abort_flag) {
        assume {:print "$at(2,38433,38485)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t44 := !($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:17+1
    call $t44 := $Not($t43);

    // if ($t44) goto L13 else goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    if ($t44) { goto L13; } else { goto L12; }

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
L13:

    // goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    assume {:print "$at(2,38424,38532)"} true;
    goto L14;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
L12:

    // destroy($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    assume {:print "$at(2,38424,38532)"} true;

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108

    // $t45 := 11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:96+19
    $t45 := 11;
    assume $IsValid'u64'($t45);

    // $t46 := error::invalid_argument($t45) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:72+44
    call $t46 := $1_error_invalid_argument($t45);
    if ($abort_flag) {
        assume {:print "$at(2,38487,38531)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    assume {:print "$at(2,38424,38532)"} true;
    assume {:print "$track_abort(38,36):", $t46} $t46 == $t46;

    // $t13 := move($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    $t13 := $t46;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:826:9+108
    goto L19;

    // label L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:829:61+16
    assume {:print "$at(2,38674,38690)"} true;
L14:

    // $t47 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:829:61+16
    assume {:print "$at(2,38674,38690)"} true;
    $t47 := 1;
    assume $IsValid'address'($t47);

    // $t48 := borrow_global<stake::ValidatorSet>($t47) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:829:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t47)) {
        call $ExecFailureAbort();
    } else {
        $t48 := $Mutation($Global($t47), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t47));
    }
    if ($abort_flag) {
        assume {:print "$at(2,38642,38659)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[validator_set]($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:829:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t48);
    assume {:print "$track_local(38,36,11):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t49 := borrow_field<stake::ValidatorSet>.pending_active($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:27+33
    assume {:print "$at(2,38719,38752)"} true;
    $t49 := $ChildMutation($t48, 3, $pending_active#$1_stake_ValidatorSet($Dereference($t48)));

    // $t50 := read_ref($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:112+17
    $t50 := $Dereference($t41);

    // $t51 := read_ref($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:85+45
    $t51 := $Dereference($t14);

    // $t52 := stake::generate_validator_info($t1, $t51, $t50) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:62+68
    call $t52 := $1_stake_generate_validator_info($t1, $t51, $t50);
    if ($abort_flag) {
        assume {:print "$at(2,38754,38822)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // vector::push_back<stake::ValidatorInfo>($t49, $t52) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:9+122
    call $t49 := $1_vector_push_back'$1_stake_ValidatorInfo'($t49, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,38701,38823)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // write_back[Reference($t48).pending_active (vector<stake::ValidatorInfo>)]($t49) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:830:9+122
    $t48 := $UpdateMutation($t48, $Update'$1_stake_ValidatorSet'_pending_active($Dereference($t48), $Dereference($t49)));

    // $t53 := get_field<stake::ValidatorSet>.active_validators($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:49+32
    assume {:print "$at(2,38873,38905)"} true;
    $t53 := $active_validators#$1_stake_ValidatorSet($Dereference($t48));

    // $t54 := vector::length<stake::ValidatorInfo>($t53) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:34+48
    call $t54 := $1_vector_length'$1_stake_ValidatorInfo'($t53);
    if ($abort_flag) {
        assume {:print "$at(2,38858,38906)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t55 := get_field<stake::ValidatorSet>.pending_active($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:100+29
    $t55 := $pending_active#$1_stake_ValidatorSet($Dereference($t48));

    // write_back[stake::ValidatorSet@]($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:100+29
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t48),
        $Dereference($t48));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // $t56 := vector::length<stake::ValidatorInfo>($t55) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:85+45
    assume {:print "$at(2,38909,38954)"} true;
    call $t56 := $1_vector_length'$1_stake_ValidatorInfo'($t55);
    if ($abort_flag) {
        assume {:print "$at(2,38909,38954)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t57 := +($t54, $t56) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:831:83+1
    call $t57 := $AddU64($t54, $t56);
    if ($abort_flag) {
        assume {:print "$at(2,38907,38908)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t58 := 65536 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:39+22
    assume {:print "$at(2,38994,39016)"} true;
    $t58 := 65536;
    assume $IsValid'u64'($t58);

    // $t59 := <=($t57, $t58) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:36+2
    call $t59 := $Le($t57, $t58);

    // if ($t59) goto L16 else goto L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    if ($t59) { goto L16; } else { goto L15; }

    // label L16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
L16:

    // goto L17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    assume {:print "$at(2,38964,39068)"} true;
    goto L17;

    // label L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
L15:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    assume {:print "$at(2,38964,39068)"} true;

    // $t60 := 12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:87+24
    $t60 := 12;
    assume $IsValid'u64'($t60);

    // $t61 := error::invalid_argument($t60) on_abort goto L19 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:63+49
    call $t61 := $1_error_invalid_argument($t60);
    if ($abort_flag) {
        assume {:print "$at(2,39018,39067)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(38,36):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t61) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    assume {:print "$at(2,38964,39068)"} true;
    assume {:print "$track_abort(38,36):", $t61} $t61 == $t61;

    // $t13 := move($t61) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    $t13 := $t61;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:832:9+104
    goto L19;

    // label L17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:835:18+10
    assume {:print "$at(2,39115,39125)"} true;
L17:

    // $t62 := borrow_field<stake::StakePool>.join_validator_set_events($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:835:13+41
    assume {:print "$at(2,39110,39151)"} true;
    $t62 := $ChildMutation($t14, 14, $join_validator_set_events#$1_stake_StakePool($Dereference($t14)));

    // $t63 := pack stake::JoinValidatorSetEvent($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:836:13+38
    assume {:print "$at(2,39165,39203)"} true;
    $t63 := $1_stake_JoinValidatorSetEvent($t1);

    // opaque begin: event::emit_event<stake::JoinValidatorSetEvent>($t62, $t63) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:834:9+135
    assume {:print "$at(2,39079,39214)"} true;

    // opaque end: event::emit_event<stake::JoinValidatorSetEvent>($t62, $t63) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:834:9+135

    // write_back[Reference($t14).join_validator_set_events (event::EventHandle<stake::JoinValidatorSetEvent>)]($t62) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:834:9+135
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_join_validator_set_events($Dereference($t14), $Dereference($t62)));

    // write_back[stake::StakePool@]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:834:9+135
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t14),
        $Dereference($t14));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:838:5+1
    assume {:print "$at(2,39220,39221)"} true;
L18:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:838:5+1
    assume {:print "$at(2,39220,39221)"} true;
    return;

    // label L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:838:5+1
L19:

    // abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:838:5+1
    assume {:print "$at(2,39220,39221)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun stake::leave_validator_set [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+2831
procedure {:timeLimit 40} $1_stake_leave_validator_set$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $1_staking_config_StakingConfig;
    var $t3: $1_option_Option'u64';
    var $t4: $1_option_Option'u64';
    var $t5: $Mutation ($1_stake_StakePool);
    var $t6: $1_stake_ValidatorInfo;
    var $t7: $Mutation ($1_stake_ValidatorSet);
    var $t8: int;
    var $t9: $1_staking_config_StakingConfig;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation ($1_stake_StakePool);
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: $Mutation ($1_stake_ValidatorSet);
    var $t22: Vec ($1_stake_ValidatorInfo);
    var $t23: $1_option_Option'u64';
    var $t24: bool;
    var $t25: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t26: $Mutation ($1_option_Option'u64');
    var $t27: int;
    var $t28: $1_option_Option'u64';
    var $t29: bool;
    var $t30: $1_stake_ValidatorInfo;
    var $t31: $1_stake_StakePool;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: bool;
    var $t36: int;
    var $t37: int;
    var $t38: $Mutation (int);
    var $t39: int;
    var $t40: $Mutation (int);
    var $t41: Vec ($1_stake_ValidatorInfo);
    var $t42: $1_option_Option'u64';
    var $t43: bool;
    var $t44: int;
    var $t45: int;
    var $t46: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t47: $Mutation ($1_option_Option'u64');
    var $t48: int;
    var $t49: $1_option_Option'u64';
    var $t50: bool;
    var $t51: $1_stake_ValidatorInfo;
    var $t52: Vec ($1_stake_ValidatorInfo);
    var $t53: int;
    var $t54: int;
    var $t55: bool;
    var $t56: int;
    var $t57: int;
    var $t58: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t59: $Mutation ($1_event_EventHandle'$1_stake_LeaveValidatorSetEvent');
    var $t60: $1_stake_LeaveValidatorSetEvent;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorInfo': $1_stake_ValidatorInfo;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume {:print "$at(2,43245,43246)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+2831
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+2831
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+2831
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // trace_local[operator]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume {:print "$track_local(38,37,0):", $t0} $t0 == $t0;

    // trace_local[pool_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:924:5+1
    assume {:print "$track_local(38,37,1):", $t1} $t1 == $t1;

    // $t9 := staking_config::get() on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:928:22+21
    assume {:print "$at(2,43402,43423)"} true;
    call $t9 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,43402,43423)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // trace_local[config]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:928:13+6
    assume {:print "$track_local(38,37,2):", $t9} $t9 == $t9;

    // $t11 := staking_config::get_allow_validator_set_change($t9) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:930:13+55
    assume {:print "$at(2,43454,43509)"} true;
    call $t11 := $1_staking_config_get_allow_validator_set_change($t9);
    if ($abort_flag) {
        assume {:print "$at(2,43454,43509)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // if ($t11) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:929:9+171
    assume {:print "$at(2,43433,43604)"} true;
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:929:9+171
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:929:9+171
    assume {:print "$at(2,43433,43604)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:929:9+171
L0:

    // $t12 := 10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:931:37+45
    assume {:print "$at(2,43547,43592)"} true;
    $t12 := 10;
    assume $IsValid'u64'($t12);

    // $t13 := error::invalid_argument($t12) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:931:13+70
    call $t13 := $1_error_invalid_argument($t12);
    if ($abort_flag) {
        assume {:print "$at(2,43523,43593)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // trace_abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:929:9+171
    assume {:print "$at(2,43433,43604)"} true;
    assume {:print "$track_abort(38,37):", $t13} $t13 == $t13;

    // $t10 := move($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:929:9+171
    $t10 := $t13;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:929:9+171
    goto L19;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:934:34+12
    assume {:print "$at(2,43640,43652)"} true;
L2:

    // stake::assert_stake_pool_exists($t1) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:934:9+38
    assume {:print "$at(2,43615,43653)"} true;
    call $1_stake_assert_stake_pool_exists($t1);
    if ($abort_flag) {
        assume {:print "$at(2,43615,43653)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // $t14 := borrow_global<stake::StakePool>($t1) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:935:26+17
    assume {:print "$at(2,43680,43697)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,43680,43697)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // trace_local[stake_pool]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:935:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t14);
    assume {:print "$track_local(38,37,5):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t15 := signer::address_of($t0) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:17+28
    assume {:print "$at(2,43783,43811)"} true;
    call $t15 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,43783,43811)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // $t16 := get_field<stake::StakePool>.operator_address($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:49+27
    $t16 := $operator_address#$1_stake_StakePool($Dereference($t14));

    // $t17 := ==($t15, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:46+2
    $t17 := $IsEqual'address'($t15, $t16);

    // if ($t17) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:9+107
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:9+107
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:9+107
    assume {:print "$at(2,43775,43882)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:9+107
L3:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:9+107
    assume {:print "$at(2,43775,43882)"} true;

    // $t18 := 9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:101+13
    $t18 := 9;
    assume $IsValid'u64'($t18);

    // $t19 := error::unauthenticated($t18) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:78+37
    call $t19 := $1_error_unauthenticated($t18);
    if ($abort_flag) {
        assume {:print "$at(2,43844,43881)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // trace_abort($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:9+107
    assume {:print "$at(2,43775,43882)"} true;
    assume {:print "$track_abort(38,37):", $t19} $t19 == $t19;

    // $t10 := move($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:9+107
    $t10 := $t19;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:937:9+107
    goto L19;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:939:61+16
    assume {:print "$at(2,43945,43961)"} true;
L5:

    // $t20 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:939:61+16
    assume {:print "$at(2,43945,43961)"} true;
    $t20 := 1;
    assume $IsValid'address'($t20);

    // $t21 := borrow_global<stake::ValidatorSet>($t20) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:939:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t21 := $Mutation($Global($t20), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t20));
    }
    if ($abort_flag) {
        assume {:print "$at(2,43913,43930)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // trace_local[validator_set]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:939:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t21);
    assume {:print "$track_local(38,37,7):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t22 := get_field<stake::ValidatorSet>.pending_active($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:941:57+29
    assume {:print "$at(2,44106,44135)"} true;
    $t22 := $pending_active#$1_stake_ValidatorSet($Dereference($t21));

    // $t4 := opaque begin: stake::find_validator($t22, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:941:42+59

    // assume And(WellFormed($t4), Le(Len<u64>(select option::Option.vec($t4)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:941:42+59
    assume ($IsValid'$1_option_Option'u64''($t4) && (LenVec($vec#$1_option_Option'u64'($t4)) <= 1));

    // assume Implies(option::$is_none<u64>($t4), forall i: Range(0, Len<stake::ValidatorInfo>($t22)): Neq<address>(select stake::ValidatorInfo.addr(Index($t22, i)), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:941:42+59
    assume ($1_option_$is_none'u64'($t4) ==> (var $range_0 := $Range(0, LenVec($t22)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t22, i)), $t1))))));

    // assume Implies(option::$is_some<u64>($t4), Eq<address>(select stake::ValidatorInfo.addr(Index($t22, option::$borrow<u64>($t4))), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:941:42+59
    assume ($1_option_$is_some'u64'($t4) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t22, $1_option_$borrow'u64'($t4))), $t1));

    // assume Implies(option::$is_some<u64>($t4), stake::spec_contains($t22, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:941:42+59
    assume ($1_option_$is_some'u64'($t4) ==> $1_stake_spec_contains($t22, $t1));

    // $t4 := opaque end: stake::find_validator($t22, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:941:42+59

    // trace_local[maybe_pending_active_index]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:941:13+26
    assume {:print "$track_local(38,37,4):", $t4} $t4 == $t4;

    // $t23 := copy($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:942:29+27
    assume {:print "$at(2,44180,44207)"} true;
    $t23 := $t4;

    // $t24 := opaque begin: option::is_some<u64>($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:942:13+44

    // assume WellFormed($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:942:13+44
    assume $IsValid'bool'($t24);

    // assume Eq<bool>($t24, option::spec_is_some<u64>($t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:942:13+44
    assume $IsEqual'bool'($t24, $1_option_spec_is_some'u64'($t23));

    // $t24 := opaque end: option::is_some<u64>($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:942:13+44

    // if ($t24) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:942:9+1909
    if ($t24) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:22+13
    assume {:print "$at(2,44266,44279)"} true;
L7:

    // $t25 := borrow_field<stake::ValidatorSet>.pending_active($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:17+33
    assume {:print "$at(2,44261,44294)"} true;
    $t25 := $ChildMutation($t21, 3, $pending_active#$1_stake_ValidatorSet($Dereference($t21)));

    // $t26 := borrow_local($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:68+31
    $t26 := $Mutation($Local(4), EmptyVec(), $t4);

    // $t27 := opaque begin: option::extract<u64>($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48

    // $t28 := read_ref($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    $t28 := $Dereference($t26);

    // assume Identical($t29, option::spec_is_none<u64>($t26)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume ($t29 == $1_option_spec_is_none'u64'($Dereference($t26)));

    // if ($t29) goto L24 else goto L25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    if ($t29) { goto L24; } else { goto L25; }

    // label L21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
L21:

    // assume And(option::spec_is_none<u64>($t26), Eq(262145, $t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume {:print "$at(2,44296,44344)"} true;
    assume ($1_option_spec_is_none'u64'($Dereference($t26)) && $IsEqual'num'(262145, $t10));

    // trace_abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume {:print "$at(2,44296,44344)"} true;
    assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    goto L19;

    // label L20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
L20:

    // $t26 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume {:print "$at(2,44296,44344)"} true;
    havoc $temp_0'$1_option_Option'u64'';
    $t26 := $UpdateMutation($t26, $temp_0'$1_option_Option'u64'');

    // assume And(WellFormed($t26), Le(Len<u64>(select option::Option.vec($t26)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume ($IsValid'$1_option_Option'u64''($Dereference($t26)) && (LenVec($vec#$1_option_Option'u64'($Dereference($t26))) <= 1));

    // assume WellFormed($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume $IsValid'u64'($t27);

    // assume Eq<u64>($t27, option::spec_borrow<u64>($t28)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume $IsEqual'u64'($t27, $1_option_spec_borrow'u64'($t28));

    // assume option::spec_is_none<u64>($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume $1_option_spec_is_none'u64'($Dereference($t26));

    // $t27 := opaque end: option::extract<u64>($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48

    // assert Le(Len<u64>(select option::Option.vec($t26)), 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(13,530,554)"} true;
    assert {:msg "assert_failed(13,530,554): data invariant does not hold"}
      (LenVec($vec#$1_option_Option'u64'($Dereference($t26))) <= 1);

    // write_back[LocalRoot($t4)@]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume {:print "$at(2,44296,44344)"} true;
    $t4 := $Dereference($t26);

    // trace_local[maybe_pending_active_index]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:944:52+48
    assume {:print "$track_local(38,37,4):", $t4} $t4 == $t4;

    // $t30 := vector::swap_remove<stake::ValidatorInfo>($t25, $t27) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:943:13+121
    assume {:print "$at(2,44224,44345)"} true;
    call $t30,$t25 := $1_vector_swap_remove'$1_stake_ValidatorInfo'($t25, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,44224,44345)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // write_back[Reference($t21).pending_active (vector<stake::ValidatorInfo>)]($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:943:13+121
    $t21 := $UpdateMutation($t21, $Update'$1_stake_ValidatorSet'_pending_active($Dereference($t21), $Dereference($t25)));

    // destroy($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:943:13+121

    // $t31 := read_ref($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:949:64+10
    assume {:print "$at(2,44674,44684)"} true;
    $t31 := $Dereference($t14);

    // $t32 := stake::get_next_epoch_voting_power($t31) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:949:36+39
    call $t32 := $1_stake_get_next_epoch_voting_power($t31);
    if ($abort_flag) {
        assume {:print "$at(2,44646,44685)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // $t33 := (u128)($t32) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:949:35+49
    call $t33 := $CastU128($t32);
    if ($abort_flag) {
        assume {:print "$at(2,44645,44694)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // trace_local[validator_stake]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:949:17+15
    assume {:print "$track_local(38,37,8):", $t33} $t33 == $t33;

    // $t34 := get_field<stake::ValidatorSet>.total_joining_power($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:953:17+33
    assume {:print "$at(2,44963,44996)"} true;
    $t34 := $total_joining_power#$1_stake_ValidatorSet($Dereference($t21));

    // $t35 := >($t34, $t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:953:51+1
    call $t35 := $Gt($t34, $t33);

    // if ($t35) goto L9 else goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:953:13+253
    if ($t35) { goto L9; } else { goto L8; }

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:954:53+13
    assume {:print "$at(2,45070,45083)"} true;
L9:

    // $t36 := get_field<stake::ValidatorSet>.total_joining_power($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:954:53+33
    assume {:print "$at(2,45070,45103)"} true;
    $t36 := $total_joining_power#$1_stake_ValidatorSet($Dereference($t21));

    // $t37 := -($t36, $t33) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:954:87+1
    call $t37 := $Sub($t36, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,45104,45105)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // $t38 := borrow_field<stake::ValidatorSet>.total_joining_power($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:954:17+33
    $t38 := $ChildMutation($t21, 5, $total_joining_power#$1_stake_ValidatorSet($Dereference($t21)));

    // write_ref($t38, $t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:954:17+87
    $t38 := $UpdateMutation($t38, $t37);

    // write_back[Reference($t21).total_joining_power (u128)]($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:954:17+87
    $t21 := $UpdateMutation($t21, $Update'$1_stake_ValidatorSet'_total_joining_power($Dereference($t21), $Dereference($t38)));

    // write_back[stake::ValidatorSet@]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:954:17+87
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:954:104+1
    assume {:print "$at(2,45121,45122)"} true;
    goto L10;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:956:53+1
    assume {:print "$at(2,45196,45197)"} true;
L8:

    // $t39 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:956:53+1
    assume {:print "$at(2,45196,45197)"} true;
    $t39 := 0;
    assume $IsValid'u128'($t39);

    // $t40 := borrow_field<stake::ValidatorSet>.total_joining_power($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:956:17+33
    $t40 := $ChildMutation($t21, 5, $total_joining_power#$1_stake_ValidatorSet($Dereference($t21)));

    // write_ref($t40, $t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:956:17+37
    $t40 := $UpdateMutation($t40, $t39);

    // write_back[Reference($t21).total_joining_power (u128)]($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:956:17+37
    $t21 := $UpdateMutation($t21, $Update'$1_stake_ValidatorSet'_total_joining_power($Dereference($t21), $Dereference($t40)));

    // write_back[stake::ValidatorSet@]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:956:17+37
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:957:14+1
    assume {:print "$at(2,45212,45213)"} true;
L10:

    // goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:957:14+1
    assume {:print "$at(2,45212,45213)"} true;
    goto L11;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:54+13
    assume {:print "$at(2,45365,45378)"} true;
L6:

    // $t41 := get_field<stake::ValidatorSet>.active_validators($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:53+32
    assume {:print "$at(2,45364,45396)"} true;
    $t41 := $active_validators#$1_stake_ValidatorSet($Dereference($t21));

    // $t3 := opaque begin: stake::find_validator($t41, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:38+62

    // assume And(WellFormed($t3), Le(Len<u64>(select option::Option.vec($t3)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:38+62
    assume ($IsValid'$1_option_Option'u64''($t3) && (LenVec($vec#$1_option_Option'u64'($t3)) <= 1));

    // assume Implies(option::$is_none<u64>($t3), forall i: Range(0, Len<stake::ValidatorInfo>($t41)): Neq<address>(select stake::ValidatorInfo.addr(Index($t41, i)), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:38+62
    assume ($1_option_$is_none'u64'($t3) ==> (var $range_0 := $Range(0, LenVec($t41)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t41, i)), $t1))))));

    // assume Implies(option::$is_some<u64>($t3), Eq<address>(select stake::ValidatorInfo.addr(Index($t41, option::$borrow<u64>($t3))), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:38+62
    assume ($1_option_$is_some'u64'($t3) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t41, $1_option_$borrow'u64'($t3))), $t1));

    // assume Implies(option::$is_some<u64>($t3), stake::spec_contains($t41, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:38+62
    assume ($1_option_$is_some'u64'($t3) ==> $1_stake_spec_contains($t41, $t1));

    // $t3 := opaque end: stake::find_validator($t41, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:38+62

    // trace_local[maybe_active_index]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:960:17+18
    assume {:print "$track_local(38,37,3):", $t3} $t3 == $t3;

    // $t42 := copy($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:37+19
    assume {:print "$at(2,45449,45468)"} true;
    $t42 := $t3;

    // $t43 := opaque begin: option::is_some<u64>($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:21+36

    // assume WellFormed($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:21+36
    assume $IsValid'bool'($t43);

    // assume Eq<bool>($t43, option::spec_is_some<u64>($t42)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:21+36
    assume $IsEqual'bool'($t43, $1_option_spec_is_some'u64'($t42));

    // $t43 := opaque end: option::is_some<u64>($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:21+36

    // if ($t43) goto L13 else goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83
    if ($t43) { goto L13; } else { goto L12; }

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83
L13:

    // goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83
    assume {:print "$at(2,45425,45508)"} true;
    goto L14;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83
L12:

    // destroy($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83
    assume {:print "$at(2,45425,45508)"} true;

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83

    // $t44 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:80+14
    $t44 := 5;
    assume $IsValid'u64'($t44);

    // $t45 := error::invalid_state($t44) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:59+36
    call $t45 := $1_error_invalid_state($t44);
    if ($abort_flag) {
        assume {:print "$at(2,45471,45507)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // trace_abort($t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83
    assume {:print "$at(2,45425,45508)"} true;
    assume {:print "$track_abort(38,37):", $t45} $t45 == $t45;

    // $t10 := move($t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83
    $t10 := $t45;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:961:13+83
    goto L19;

    // label L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:22+13
    assume {:print "$at(2,45585,45598)"} true;
L14:

    // $t46 := borrow_field<stake::ValidatorSet>.active_validators($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:17+36
    assume {:print "$at(2,45580,45616)"} true;
    $t46 := $ChildMutation($t21, 1, $active_validators#$1_stake_ValidatorSet($Dereference($t21)));

    // $t47 := borrow_local($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:71+23
    $t47 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t48 := opaque begin: option::extract<u64>($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40

    // $t49 := read_ref($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    $t49 := $Dereference($t47);

    // assume Identical($t50, option::spec_is_none<u64>($t47)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume ($t50 == $1_option_spec_is_none'u64'($Dereference($t47)));

    // if ($t50) goto L26 else goto L27 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    if ($t50) { goto L26; } else { goto L27; }

    // label L23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
L23:

    // assume And(option::spec_is_none<u64>($t47), Eq(262145, $t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume {:print "$at(2,45618,45658)"} true;
    assume ($1_option_spec_is_none'u64'($Dereference($t47)) && $IsEqual'num'(262145, $t10));

    // trace_abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume {:print "$at(2,45618,45658)"} true;
    assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    goto L19;

    // label L22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
L22:

    // $t47 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume {:print "$at(2,45618,45658)"} true;
    havoc $temp_0'$1_option_Option'u64'';
    $t47 := $UpdateMutation($t47, $temp_0'$1_option_Option'u64'');

    // assume And(WellFormed($t47), Le(Len<u64>(select option::Option.vec($t47)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume ($IsValid'$1_option_Option'u64''($Dereference($t47)) && (LenVec($vec#$1_option_Option'u64'($Dereference($t47))) <= 1));

    // assume WellFormed($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume $IsValid'u64'($t48);

    // assume Eq<u64>($t48, option::spec_borrow<u64>($t49)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume $IsEqual'u64'($t48, $1_option_spec_borrow'u64'($t49));

    // assume option::spec_is_none<u64>($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume $1_option_spec_is_none'u64'($Dereference($t47));

    // $t48 := opaque end: option::extract<u64>($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40

    // assert Le(Len<u64>(select option::Option.vec($t47)), 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(13,530,554)"} true;
    assert {:msg "assert_failed(13,530,554): data invariant does not hold"}
      (LenVec($vec#$1_option_Option'u64'($Dereference($t47))) <= 1);

    // write_back[LocalRoot($t3)@]($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume {:print "$at(2,45618,45658)"} true;
    $t3 := $Dereference($t47);

    // trace_local[maybe_active_index]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:963:55+40
    assume {:print "$track_local(38,37,3):", $t3} $t3 == $t3;

    // $t51 := vector::swap_remove<stake::ValidatorInfo>($t46, $t48) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:962:34+116
    assume {:print "$at(2,45543,45659)"} true;
    call $t51,$t46 := $1_vector_swap_remove'$1_stake_ValidatorInfo'($t46, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,45543,45659)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // write_back[Reference($t21).active_validators (vector<stake::ValidatorInfo>)]($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:962:34+116
    $t21 := $UpdateMutation($t21, $Update'$1_stake_ValidatorSet'_active_validators($Dereference($t21), $Dereference($t46)));

    // trace_local[validator_info]($t51) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:962:17+14
    assume {:print "$track_local(38,37,6):", $t51} $t51 == $t51;

    // $t52 := get_field<stake::ValidatorSet>.active_validators($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:36+32
    assume {:print "$at(2,45696,45728)"} true;
    $t52 := $active_validators#$1_stake_ValidatorSet($Dereference($t21));

    // $t53 := vector::length<stake::ValidatorInfo>($t52) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:21+48
    call $t53 := $1_vector_length'$1_stake_ValidatorInfo'($t52);
    if ($abort_flag) {
        assume {:print "$at(2,45681,45729)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // $t54 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:72+1
    $t54 := 0;
    assume $IsValid'u64'($t54);

    // $t55 := >($t53, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:70+1
    call $t55 := $Gt($t53, $t54);

    // if ($t55) goto L16 else goto L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
    if ($t55) { goto L16; } else { goto L15; }

    // label L16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
L16:

    // goto L17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
    assume {:print "$at(2,45673,45773)"} true;
    goto L17;

    // label L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
L15:

    // write_back[stake::ValidatorSet@]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
    assume {:print "$at(2,45673,45773)"} true;
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // destroy($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
    assume {:print "$at(2,45673,45773)"} true;

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100

    // $t56 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:96+15
    $t56 := 6;
    assume $IsValid'u64'($t56);

    // $t57 := error::invalid_state($t56) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:75+37
    call $t57 := $1_error_invalid_state($t56);
    if ($abort_flag) {
        assume {:print "$at(2,45735,45772)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // trace_abort($t57) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
    assume {:print "$at(2,45673,45773)"} true;
    assume {:print "$track_abort(38,37):", $t57} $t57 == $t57;

    // $t10 := move($t57) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
    $t10 := $t57;

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:964:13+100
    goto L19;

    // label L17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:965:36+13
    assume {:print "$at(2,45810,45823)"} true;
L17:

    // $t58 := borrow_field<stake::ValidatorSet>.pending_inactive($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:965:31+35
    assume {:print "$at(2,45805,45840)"} true;
    $t58 := $ChildMutation($t21, 2, $pending_inactive#$1_stake_ValidatorSet($Dereference($t21)));

    // vector::push_back<stake::ValidatorInfo>($t58, $t51) on_abort goto L19 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:965:13+70
    call $t58 := $1_vector_push_back'$1_stake_ValidatorInfo'($t58, $t51);
    if ($abort_flag) {
        assume {:print "$at(2,45787,45857)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,37):", $t10} $t10 == $t10;
        goto L19;
    }

    // write_back[Reference($t21).pending_inactive (vector<stake::ValidatorInfo>)]($t58) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:965:13+70
    $t21 := $UpdateMutation($t21, $Update'$1_stake_ValidatorSet'_pending_inactive($Dereference($t21), $Dereference($t58)));

    // write_back[stake::ValidatorSet@]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:965:13+70
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // $t59 := borrow_field<stake::StakePool>.leave_validator_set_events($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:968:17+42
    assume {:print "$at(2,45907,45949)"} true;
    $t59 := $ChildMutation($t14, 18, $leave_validator_set_events#$1_stake_StakePool($Dereference($t14)));

    // $t60 := pack stake::LeaveValidatorSetEvent($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:969:17+76
    assume {:print "$at(2,45967,46043)"} true;
    $t60 := $1_stake_LeaveValidatorSetEvent($t1);

    // opaque begin: event::emit_event<stake::LeaveValidatorSetEvent>($t59, $t60) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:967:13+186
    assume {:print "$at(2,45872,46058)"} true;

    // opaque end: event::emit_event<stake::LeaveValidatorSetEvent>($t59, $t60) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:967:13+186

    // write_back[Reference($t14).leave_validator_set_events (event::EventHandle<stake::LeaveValidatorSetEvent>)]($t59) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:967:13+186
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_leave_validator_set_events($Dereference($t14), $Dereference($t59)));

    // write_back[stake::StakePool@]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:967:13+186
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t14),
        $Dereference($t14));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:973:10+1
    assume {:print "$at(2,46069,46070)"} true;
L11:

    // label L18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:974:5+1
    assume {:print "$at(2,46075,46076)"} true;
L18:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:974:5+1
    assume {:print "$at(2,46075,46076)"} true;
    return;

    // label L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:974:5+1
L19:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:974:5+1
    assume {:print "$at(2,46075,46076)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

    // label L24 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L24:

    // destroy($t14) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // destroy($t21) at <internal>:1:1+10

    // destroy($t25) at <internal>:1:1+10

    // goto L21 at <internal>:1:1+10
    goto L21;

    // label L25 at <internal>:1:1+10
L25:

    // destroy($t26) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L20 at <internal>:1:1+10
    goto L20;

    // label L26 at <internal>:1:1+10
L26:

    // destroy($t14) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // destroy($t21) at <internal>:1:1+10

    // destroy($t46) at <internal>:1:1+10

    // goto L23 at <internal>:1:1+10
    goto L23;

    // label L27 at <internal>:1:1+10
L27:

    // destroy($t47) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L22 at <internal>:1:1+10
    goto L22;

}

// fun stake::on_new_epoch [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+5820
procedure {:timeLimit 40} $1_stake_on_new_epoch$verify() returns ()
{
    // declare local variables
    var $t0: $1_stake_ValidatorConfig;
    var $t1: int;
    var $t2: $1_staking_config_StakingConfig;
    var $t3: int;
    var $t4: $1_staking_config_StakingConfig;
    var $t5: $1_staking_config_StakingConfig;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: $1_stake_ValidatorInfo;
    var $t13: Vec ($1_stake_ValidatorInfo);
    var $t14: int;
    var $t15: int;
    var $t16: $Mutation ($1_stake_StakePool);
    var $t17: $Mutation ($1_stake_StakePool);
    var $t18: int;
    var $t19: $1_stake_ValidatorInfo;
    var $t20: $1_stake_ValidatorInfo;
    var $t21: $Mutation ($1_stake_ValidatorConfig);
    var $t22: $Mutation ($1_stake_ValidatorConfig);
    var $t23: int;
    var $t24: $Mutation ($1_stake_ValidatorInfo);
    var $t25: $Mutation ($1_stake_ValidatorPerformance);
    var $t26: $Mutation ($1_stake_ValidatorSet);
    var $t27: int;
    var $t28: int;
    var $t29: $1_staking_config_StakingRewardsConfig;
    var $t30: $1_fixed_point64_FixedPoint64;
    var $t31: $1_fixed_point64_FixedPoint64;
    var $t32: int;
    var $t33: int;
    var $t34: $1_fixed_point64_FixedPoint64;
    var $t35: int;
    var $t36: $Mutation ($1_stake_ValidatorSet);
    var $t37: int;
    var $t38: $1_staking_config_StakingConfig;
    var $t39: int;
    var $t40: $Mutation ($1_stake_ValidatorPerformance);
    var $t41: int;
    var $t42: Vec ($1_stake_ValidatorInfo);
    var $t43: int;
    var $t44: bool;
    var $t45: Vec ($1_stake_ValidatorInfo);
    var $t46: $1_stake_ValidatorInfo;
    var $t47: int;
    var $t48: $1_stake_ValidatorPerformance;
    var $t49: int;
    var $t50: int;
    var $t51: $1_staking_config_StakingRewardsConfig;
    var $t52: $1_fixed_point64_FixedPoint64;
    var $t53: $1_fixed_point64_FixedPoint64;
    var $t54: int;
    var $t55: int;
    var $t56: $1_fixed_point64_FixedPoint64;
    var $t57: int;
    var $t58: Vec ($1_stake_ValidatorInfo);
    var $t59: int;
    var $t60: bool;
    var $t61: Vec ($1_stake_ValidatorInfo);
    var $t62: $1_stake_ValidatorInfo;
    var $t63: int;
    var $t64: $1_stake_ValidatorPerformance;
    var $t65: int;
    var $t66: int;
    var $t67: $1_staking_config_StakingRewardsConfig;
    var $t68: $1_fixed_point64_FixedPoint64;
    var $t69: $1_fixed_point64_FixedPoint64;
    var $t70: int;
    var $t71: int;
    var $t72: $1_fixed_point64_FixedPoint64;
    var $t73: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t74: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t75: Vec ($1_stake_ValidatorInfo);
    var $t76: Vec ($1_stake_ValidatorInfo);
    var $t77: Vec ($1_stake_ValidatorInfo);
    var $t78: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t79: int;
    var $t80: int;
    var $t81: Vec ($1_stake_ValidatorInfo);
    var $t82: int;
    var $t83: int;
    var $t84: int;
    var $t85: bool;
    var $t86: int;
    var $t87: $1_stake_ValidatorConfig;
    var $t88: $1_stake_StakePool;
    var $t89: $1_stake_ValidatorInfo;
    var $t90: int;
    var $t91: bool;
    var $t92: int;
    var $t93: int;
    var $t94: int;
    var $t95: int;
    var $t96: int;
    var $t97: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t98: $Mutation ($1_stake_ValidatorInfo);
    var $t99: $Mutation ($1_stake_ValidatorConfig);
    var $t100: $Mutation ($1_stake_StakePool);
    var $t101: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t102: Vec ($1_stake_ValidatorInfo);
    var $t103: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t104: $Mutation (int);
    var $t105: int;
    var $t106: $Mutation (int);
    var $t107: Vec ($1_stake_IndividualValidatorPerformance);
    var $t108: $Mutation (Vec ($1_stake_IndividualValidatorPerformance));
    var $t109: int;
    var $t110: Vec ($1_stake_ValidatorInfo);
    var $t111: int;
    var $t112: int;
    var $t113: bool;
    var $t114: int;
    var $t115: int;
    var $t116: int;
    var $t117: $1_stake_IndividualValidatorPerformance;
    var $t118: int;
    var $t119: int;
    var $t120: int;
    var $t121: bool;
    var $t122: int;
    var $t123: int;
    var $t124: int;
    var $t125: int;
    var $t126: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t127: $Mutation ($1_stake_ValidatorInfo);
    var $t128: $Mutation ($1_stake_ValidatorConfig);
    var $t129: $Mutation (int);
    var $t130: $Mutation ($1_stake_ValidatorConfig);
    var $t131: $Mutation (int);
    var $t132: $Mutation (Vec ($1_stake_IndividualValidatorPerformance));
    var $t133: $Mutation ($1_stake_StakePool);
    var $t134: $Mutation (int);
    var $t135: bool;
    var $t136: $1_staking_config_StakingRewardsConfig;
    var $t137: $1_fixed_point64_FixedPoint64;
    var $t138: $1_fixed_point64_FixedPoint64;
    var $t139: int;
    var $t140: int;
    var $t141: $1_fixed_point64_FixedPoint64;
    var $t142: $1_fixed_point64_FixedPoint64;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_ValidatorInfo': $1_stake_ValidatorInfo;
    var $temp_0'$1_stake_ValidatorPerformance': $1_stake_ValidatorPerformance;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'address': int;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_stake_ValidatorInfo'': Vec ($1_stake_ValidatorInfo);

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume forall $rsc: ResourceDomain<features::Features>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume {:print "$at(2,49544,49545)"} true;
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingRewardsConfig>(): And(WellFormed($rsc), And(And(And(fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.rewards_rate($rsc), fixed_point64::spec_create_from_u128(1)), fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.min_rewards_rate($rsc), select staking_config::StakingRewardsConfig.rewards_rate($rsc))), Eq<u64>(select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($rsc), 31536000)), Le(fixed_point64::spec_ceil(select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($rsc)), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingRewardsConfig'($rsc) && ((($1_fixed_point64_spec_less_or_equal($rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $1_fixed_point64_spec_create_from_u128(1)) && $1_fixed_point64_spec_less_or_equal($min_rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $rewards_rate#$1_staking_config_StakingRewardsConfig($rsc))) && $IsEqual'u64'($rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($rsc), 31536000)) && ($1_fixed_point64_spec_ceil($rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($rsc)) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+5820
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+5820
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+5820
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+5820
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+5820
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+5820
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1037:5+5820
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume Identical($t29, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t29 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t30, select staking_config::StakingRewardsConfig.rewards_rate($t29)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t30 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t29));

    // assume Identical($t31, select staking_config::StakingRewardsConfig.min_rewards_rate($t29)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t31 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t29));

    // assume Identical($t32, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t29)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t32 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t29));

    // assume Identical($t33, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t29)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t33 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t29));

    // assume Identical($t34, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t29)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t34 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t29));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t30, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t30, $1_fixed_point64_spec_create_from_u128(1)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t31, $t30)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t31, $t30));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t32, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t32, 31536000));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t33, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t33 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t34), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t34) <= 1));

    // $t35 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1038:61+16
    assume {:print "$at(2,49750,49766)"} true;
    $t35 := 1;
    assume $IsValid'address'($t35);

    // $t36 := borrow_global<stake::ValidatorSet>($t35) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1038:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t35)) {
        call $ExecFailureAbort();
    } else {
        $t36 := $Mutation($Global($t35), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t35));
    }
    if ($abort_flag) {
        assume {:print "$at(2,49718,49735)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[validator_set]($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1038:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t36);
    assume {:print "$track_local(38,38,26):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t38 := staking_config::get() on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1039:22+21
    assume {:print "$at(2,49790,49811)"} true;
    call $t38 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,49790,49811)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[config]($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1039:13+6
    assume {:print "$track_local(38,38,5):", $t38} $t38 == $t38;

    // $t39 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1040:70+16
    assume {:print "$at(2,49882,49898)"} true;
    $t39 := 1;
    assume $IsValid'address'($t39);

    // $t40 := borrow_global<stake::ValidatorPerformance>($t39) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1040:30+17
    if (!$ResourceExists($1_stake_ValidatorPerformance_$memory, $t39)) {
        call $ExecFailureAbort();
    } else {
        $t40 := $Mutation($Global($t39), EmptyVec(), $ResourceValue($1_stake_ValidatorPerformance_$memory, $t39));
    }
    if ($abort_flag) {
        assume {:print "$at(2,49842,49859)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[validator_perf]($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1040:13+14
    $temp_0'$1_stake_ValidatorPerformance' := $Dereference($t40);
    assume {:print "$track_local(38,38,25):", $temp_0'$1_stake_ValidatorPerformance'} $temp_0'$1_stake_ValidatorPerformance' == $temp_0'$1_stake_ValidatorPerformance';

    // $t41 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1043:17+1
    assume {:print "$at(2,50032,50033)"} true;
    $t41 := 0;
    assume $IsValid'u64'($t41);

    // trace_local[i]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1043:13+1
    assume {:print "$track_local(38,38,6):", $t41} $t41 == $t41;

    // $t42 := get_field<stake::ValidatorSet>.active_validators($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1044:34+32
    assume {:print "$at(2,50068,50100)"} true;
    $t42 := $active_validators#$1_stake_ValidatorSet($Dereference($t36));

    // $t43 := vector::length<stake::ValidatorInfo>($t42) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1044:19+48
    call $t43 := $1_vector_length'$1_stake_ValidatorInfo'($t42);
    if ($abort_flag) {
        assume {:print "$at(2,50053,50101)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[len]($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1044:13+3
    assume {:print "$track_local(38,38,9):", $t43} $t43 == $t43;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume {:print "$at(2,50118,50119)"} true;
L3:

    // $t6 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume {:print "$at(2,50118,50119)"} true;
    havoc $t6;

    // assume WellFormed($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume $IsValid'u64'($t6);

    // $t44 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    havoc $t44;

    // assume WellFormed($t44) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume $IsValid'bool'($t44);

    // $t45 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    havoc $t45;

    // assume WellFormed($t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume $IsValid'vec'$1_stake_ValidatorInfo''($t45);

    // $t46 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    havoc $t46;

    // assume WellFormed($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume $IsValid'$1_stake_ValidatorInfo'($t46);

    // $t47 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    havoc $t47;

    // assume WellFormed($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume $IsValid'address'($t47);

    // $t48 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    havoc $t48;

    // assume WellFormed($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume $IsValid'$1_stake_ValidatorPerformance'($t48);

    // $t49 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    havoc $t49;

    // assume WellFormed($t49) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume $IsValid'u64'($t49);

    // $t50 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    havoc $t50;

    // assume WellFormed($t50) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume $IsValid'u64'($t50);

    // trace_local[i]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(38,38,6):", $t6} $t6 == $t6;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:16+1
    assume !$abort_flag;

    // $t44 := <($t6, $t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:18+1
    call $t44 := $Lt($t6, $t43);

    // if ($t44) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:9+203
    if ($t44) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1045:9+203
L1:

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1046:45+13
    assume {:print "$at(2,50173,50186)"} true;
L2:

    // $t45 := get_field<stake::ValidatorSet>.active_validators($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1046:44+32
    assume {:print "$at(2,50172,50204)"} true;
    $t45 := $active_validators#$1_stake_ValidatorSet($Dereference($t36));

    // $t46 := vector::borrow<stake::ValidatorInfo>($t45, $t6) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1046:29+51
    call $t46 := $1_vector_borrow'$1_stake_ValidatorInfo'($t45, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,50157,50208)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[validator]($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1046:17+9
    assume {:print "$track_local(38,38,19):", $t46} $t46 == $t46;

    // $t47 := get_field<stake::ValidatorInfo>.addr($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1047:47+14
    assume {:print "$at(2,50256,50270)"} true;
    $t47 := $addr#$1_stake_ValidatorInfo($t46);

    // $t48 := read_ref($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1047:30+41
    $t48 := $Dereference($t40);

    // assume Identical($t51, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t51 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t52, select staking_config::StakingRewardsConfig.rewards_rate($t51)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t52 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t51));

    // assume Identical($t53, select staking_config::StakingRewardsConfig.min_rewards_rate($t51)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t53 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t51));

    // assume Identical($t54, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t51)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t54 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t51));

    // assume Identical($t55, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t51)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t55 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t51));

    // assume Identical($t56, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t51)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t56 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t51));

    // assert exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assert {:msg "assert_failed(3,17638,17695): precondition does not hold at this call"}
      $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assert exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assert {:msg "assert_failed(3,17704,17760): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assert exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assert {:msg "assert_failed(3,17769,17817): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assert exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assert {:msg "assert_failed(3,17826,17875): precondition does not hold at this call"}
      $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assert Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assert {:msg "assert_failed(3,17884,18001): precondition does not hold at this call"}
      ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assert {:msg "assert_failed(3,18010,18080): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assert {:msg "assert_failed(3,18089,18138): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assert {:msg "assert_failed(103,9307,9377): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assert {:msg "assert_failed(103,9567,9623): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t52, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assert {:msg "assert_failed(103,10156,10285): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t52, $1_fixed_point64_spec_create_from_u128(1)));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t53, $t52)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assert {:msg "assert_failed(103,10294,10369): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t53, $t52));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t54, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assert {:msg "assert_failed(103,10378,10435): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t54, 31536000));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t55, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assert {:msg "assert_failed(103,10444,10525): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t55 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t56), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assert {:msg "assert_failed(103,10534,10601): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t56) <= 1));

    // stake::update_stake_pool($t48, $t47, $t38) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1047:13+58
    assume {:print "$at(2,50222,50280)"} true;
    call $1_stake_update_stake_pool($t48, $t47, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,50222,50280)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t49 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1048:21+1
    assume {:print "$at(2,50302,50303)"} true;
    $t49 := 1;
    assume $IsValid'u64'($t49);

    // $t50 := +($t6, $t49) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1048:19+1
    call $t50 := $AddU64($t6, $t49);
    if ($abort_flag) {
        assume {:print "$at(2,50300,50301)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[i]($t50) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1048:13+1
    assume {:print "$track_local(38,38,6):", $t50} $t50 == $t50;

    // goto L23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1048:22+1
    goto L23;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1053:17+1
    assume {:print "$at(2,50509,50510)"} true;
L0:

    // $t57 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1053:17+1
    assume {:print "$at(2,50509,50510)"} true;
    $t57 := 0;
    assume $IsValid'u64'($t57);

    // trace_local[i#4]($t57) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1053:13+1
    assume {:print "$track_local(38,38,8):", $t57} $t57 == $t57;

    // $t58 := get_field<stake::ValidatorSet>.pending_inactive($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1054:34+31
    assume {:print "$at(2,50545,50576)"} true;
    $t58 := $pending_inactive#$1_stake_ValidatorSet($Dereference($t36));

    // $t59 := vector::length<stake::ValidatorInfo>($t58) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1054:19+47
    call $t59 := $1_vector_length'$1_stake_ValidatorInfo'($t58);
    if ($abort_flag) {
        assume {:print "$at(2,50530,50577)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[len#5]($t59) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1054:13+3
    assume {:print "$track_local(38,38,10):", $t59} $t59 == $t59;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume {:print "$at(2,50594,50595)"} true;
L7:

    // $t8 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume {:print "$at(2,50594,50595)"} true;
    havoc $t8;

    // assume WellFormed($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume $IsValid'u64'($t8);

    // $t60 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    havoc $t60;

    // assume WellFormed($t60) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume $IsValid'bool'($t60);

    // $t61 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    havoc $t61;

    // assume WellFormed($t61) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume $IsValid'vec'$1_stake_ValidatorInfo''($t61);

    // $t62 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    havoc $t62;

    // assume WellFormed($t62) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume $IsValid'$1_stake_ValidatorInfo'($t62);

    // $t63 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    havoc $t63;

    // assume WellFormed($t63) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume $IsValid'address'($t63);

    // $t64 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    havoc $t64;

    // assume WellFormed($t64) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume $IsValid'$1_stake_ValidatorPerformance'($t64);

    // $t65 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    havoc $t65;

    // assume WellFormed($t65) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume $IsValid'u64'($t65);

    // $t66 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    havoc $t66;

    // assume WellFormed($t66) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume $IsValid'u64'($t66);

    // trace_local[i#4]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume {:print "$info(): enter loop, variable(s) i#4 havocked and reassigned"} true;
    assume {:print "$track_local(38,38,8):", $t8} $t8 == $t8;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:16+1
    assume !$abort_flag;

    // $t60 := <($t8, $t59) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:18+1
    call $t60 := $Lt($t8, $t59);

    // if ($t60) goto L5 else goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:9+202
    if ($t60) { goto L5; } else { goto L4; }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1055:9+202
L5:

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1056:45+13
    assume {:print "$at(2,50649,50662)"} true;
L6:

    // $t61 := get_field<stake::ValidatorSet>.pending_inactive($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1056:44+31
    assume {:print "$at(2,50648,50679)"} true;
    $t61 := $pending_inactive#$1_stake_ValidatorSet($Dereference($t36));

    // $t62 := vector::borrow<stake::ValidatorInfo>($t61, $t8) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1056:29+50
    call $t62 := $1_vector_borrow'$1_stake_ValidatorInfo'($t61, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,50633,50683)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[validator#6]($t62) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1056:17+9
    assume {:print "$track_local(38,38,20):", $t62} $t62 == $t62;

    // $t63 := get_field<stake::ValidatorInfo>.addr($t62) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1057:47+14
    assume {:print "$at(2,50731,50745)"} true;
    $t63 := $addr#$1_stake_ValidatorInfo($t62);

    // $t64 := read_ref($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1057:30+41
    $t64 := $Dereference($t40);

    // assume Identical($t67, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t67 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t68, select staking_config::StakingRewardsConfig.rewards_rate($t67)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t68 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t67));

    // assume Identical($t69, select staking_config::StakingRewardsConfig.min_rewards_rate($t67)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t69 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t67));

    // assume Identical($t70, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t67)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t70 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t67));

    // assume Identical($t71, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t67)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t71 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t67));

    // assume Identical($t72, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t67)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t72 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t67));

    // assert exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assert {:msg "assert_failed(3,17638,17695): precondition does not hold at this call"}
      $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assert exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assert {:msg "assert_failed(3,17704,17760): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assert exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assert {:msg "assert_failed(3,17769,17817): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assert exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assert {:msg "assert_failed(3,17826,17875): precondition does not hold at this call"}
      $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assert Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assert {:msg "assert_failed(3,17884,18001): precondition does not hold at this call"}
      ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assert {:msg "assert_failed(3,18010,18080): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assert {:msg "assert_failed(3,18089,18138): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assert {:msg "assert_failed(103,9307,9377): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assert {:msg "assert_failed(103,9567,9623): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t68, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assert {:msg "assert_failed(103,10156,10285): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t68, $1_fixed_point64_spec_create_from_u128(1)));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t69, $t68)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assert {:msg "assert_failed(103,10294,10369): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t69, $t68));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t70, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assert {:msg "assert_failed(103,10378,10435): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t70, 31536000));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t71, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assert {:msg "assert_failed(103,10444,10525): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t71 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t72), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assert {:msg "assert_failed(103,10534,10601): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t72) <= 1));

    // stake::update_stake_pool($t64, $t63, $t38) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1057:13+58
    assume {:print "$at(2,50697,50755)"} true;
    call $1_stake_update_stake_pool($t64, $t63, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,50697,50755)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t65 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1058:21+1
    assume {:print "$at(2,50777,50778)"} true;
    $t65 := 1;
    assume $IsValid'u64'($t65);

    // $t66 := +($t8, $t65) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1058:19+1
    call $t66 := $AddU64($t8, $t65);
    if ($abort_flag) {
        assume {:print "$at(2,50775,50776)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[i#4]($t66) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1058:13+1
    assume {:print "$track_local(38,38,8):", $t66} $t66 == $t66;

    // goto L24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1058:22+1
    goto L24;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:21+13
    assume {:print "$at(2,50869,50882)"} true;
L4:

    // $t73 := borrow_field<stake::ValidatorSet>.active_validators($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:16+36
    assume {:print "$at(2,50864,50900)"} true;
    $t73 := $ChildMutation($t36, 1, $active_validators#$1_stake_ValidatorSet($Dereference($t36)));

    // $t74 := borrow_field<stake::ValidatorSet>.pending_active($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:54+33
    $t74 := $ChildMutation($t36, 3, $pending_active#$1_stake_ValidatorSet($Dereference($t36)));

    // opaque begin: stake::append<stake::ValidatorInfo>($t73, $t74) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79

    // $t75 := read_ref($t73) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    $t75 := $Dereference($t73);

    // $t76 := read_ref($t74) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    $t76 := $Dereference($t74);

    // $t73 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    havoc $temp_0'vec'$1_stake_ValidatorInfo'';
    $t73 := $UpdateMutation($t73, $temp_0'vec'$1_stake_ValidatorInfo'');

    // $t74 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    havoc $temp_0'vec'$1_stake_ValidatorInfo'';
    $t74 := $UpdateMutation($t74, $temp_0'vec'$1_stake_ValidatorInfo'');

    // assume WellFormed($t73) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    assume $IsValid'vec'$1_stake_ValidatorInfo''($Dereference($t73));

    // assume WellFormed($t74) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    assume $IsValid'vec'$1_stake_ValidatorInfo''($Dereference($t74));

    // assume Eq<num>(Len<stake::ValidatorInfo>($t73), Add(Len<stake::ValidatorInfo>($t75), Len<stake::ValidatorInfo>($t76))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    assume $IsEqual'num'(LenVec($Dereference($t73)), (LenVec($t75) + LenVec($t76)));

    // assume Eq<num>(Len<stake::ValidatorInfo>($t74), 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    assume $IsEqual'num'(LenVec($Dereference($t74)), 0);

    // assume forall i: Range(0, Len<stake::ValidatorInfo>($t75)): Eq<stake::ValidatorInfo>(Index($t73, i), Index($t75, i)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    assume (var $range_0 := $Range(0, LenVec($t75)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    ($IsEqual'$1_stake_ValidatorInfo'(ReadVec($Dereference($t73), i), ReadVec($t75, i))))));

    // assume forall i: Range(Len<stake::ValidatorInfo>($t75), Len<stake::ValidatorInfo>($t73)): Eq<stake::ValidatorInfo>(Index($t73, i), Index($t76, Sub(Sub(Len<stake::ValidatorInfo>($t76), Sub(i, Len<stake::ValidatorInfo>($t75))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    assume (var $range_0 := $Range(LenVec($t75), LenVec($Dereference($t73))); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    ($IsEqual'$1_stake_ValidatorInfo'(ReadVec($Dereference($t73), i), ReadVec($t76, ((LenVec($t76) - (i - LenVec($t75))) - 1)))))));

    // opaque end: stake::append<stake::ValidatorInfo>($t73, $t74) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79

    // write_back[Reference($t36).active_validators (vector<stake::ValidatorInfo>)]($t73) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    $t36 := $UpdateMutation($t36, $Update'$1_stake_ValidatorSet'_active_validators($Dereference($t36), $Dereference($t73)));

    // write_back[Reference($t36).pending_active (vector<stake::ValidatorInfo>)]($t74) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1062:9+79
    $t36 := $UpdateMutation($t36, $Update'$1_stake_ValidatorSet'_pending_active($Dereference($t36), $Dereference($t74)));

    // $t77 := vector::empty<stake::ValidatorInfo>() on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1065:42+15
    assume {:print "$at(2,51087,51102)"} true;
    call $t77 := $1_vector_empty'$1_stake_ValidatorInfo'();
    if ($abort_flag) {
        assume {:print "$at(2,51087,51102)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t78 := borrow_field<stake::ValidatorSet>.pending_inactive($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1065:9+30
    $t78 := $ChildMutation($t36, 2, $pending_inactive#$1_stake_ValidatorSet($Dereference($t36)));

    // write_ref($t78, $t77) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1065:9+48
    $t78 := $UpdateMutation($t78, $t77);

    // write_back[Reference($t36).pending_inactive (vector<stake::ValidatorInfo>)]($t78) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1065:9+48
    $t36 := $UpdateMutation($t36, $Update'$1_stake_ValidatorSet'_pending_inactive($Dereference($t36), $Dereference($t78)));

    // $t13 := vector::empty<stake::ValidatorInfo>() on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1070:37+15
    assume {:print "$at(2,51393,51408)"} true;
    call $t13 := $1_vector_empty'$1_stake_ValidatorInfo'();
    if ($abort_flag) {
        assume {:print "$at(2,51393,51408)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[next_epoch_validators]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1070:13+21
    assume {:print "$track_local(38,38,13):", $t13} $t13 == $t13;

    // ($t79, $t80) := staking_config::get_required_stake($t38) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1071:34+43
    assume {:print "$at(2,51443,51486)"} true;
    call $t79,$t80 := $1_staking_config_get_required_stake($t38);
    if ($abort_flag) {
        assume {:print "$at(2,51443,51486)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // destroy($t80) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1071:29+1

    // trace_local[minimum_stake]($t79) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1071:14+13
    assume {:print "$track_local(38,38,11):", $t79} $t79 == $t79;

    // $t81 := get_field<stake::ValidatorSet>.active_validators($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1072:35+32
    assume {:print "$at(2,51522,51554)"} true;
    $t81 := $active_validators#$1_stake_ValidatorSet($Dereference($t36));

    // $t82 := vector::length<stake::ValidatorInfo>($t81) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1072:20+48
    call $t82 := $1_vector_length'$1_stake_ValidatorInfo'($t81);
    if ($abort_flag) {
        assume {:print "$at(2,51507,51555)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[vlen]($t82) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1072:13+4
    assume {:print "$track_local(38,38,27):", $t82} $t82 == $t82;

    // $t83 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1073:34+1
    assume {:print "$at(2,51590,51591)"} true;
    $t83 := 0;
    assume $IsValid'u128'($t83);

    // trace_local[total_voting_power]($t83) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1073:13+18
    assume {:print "$track_local(38,38,18):", $t83} $t83 == $t83;

    // $t84 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1074:17+1
    assume {:print "$at(2,51609,51610)"} true;
    $t84 := 0;
    assume $IsValid'u64'($t84);

    // trace_local[i#10]($t84) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1074:13+1
    assume {:print "$track_local(38,38,7):", $t84} $t84 == $t84;

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1076:13+102
    assume {:print "$at(2,51641,51743)"} true;
L13:

    // assert stake::spec_validators_are_initialized($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume {:print "$at(2,51664,51729)"} true;
    assert {:msg "assert_failed(2,51664,51729): base case of the loop invariant does not hold"}
      $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $t13);

    // $t7 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t7;

    // assume WellFormed($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'u64'($t7);

    // $t13 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t13;

    // assume WellFormed($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'vec'$1_stake_ValidatorInfo''($t13);

    // $t18 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t18;

    // assume WellFormed($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'u128'($t18);

    // $t85 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t85;

    // assume WellFormed($t85) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'bool'($t85);

    // $t86 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t86;

    // assume WellFormed($t86) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'address'($t86);

    // $t87 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t87;

    // assume WellFormed($t87) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'$1_stake_ValidatorConfig'($t87);

    // $t88 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t88;

    // assume WellFormed($t88) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'$1_stake_StakePool'($t88);

    // $t89 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t89;

    // assume WellFormed($t89) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'$1_stake_ValidatorInfo'($t89);

    // $t90 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t90;

    // assume WellFormed($t90) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'u64'($t90);

    // $t91 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t91;

    // assume WellFormed($t91) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'bool'($t91);

    // $t92 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t92;

    // assume WellFormed($t92) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'u64'($t92);

    // $t93 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t93;

    // assume WellFormed($t93) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'u128'($t93);

    // $t94 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t94;

    // assume WellFormed($t94) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'u128'($t94);

    // $t95 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t95;

    // assume WellFormed($t95) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'u64'($t95);

    // $t96 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t96;

    // assume WellFormed($t96) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'u64'($t96);

    // $t97 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t97;

    // assume WellFormed($t97) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'vec'$1_stake_ValidatorInfo''($Dereference($t97));

    // $t98 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t98;

    // assume WellFormed($t98) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'$1_stake_ValidatorInfo'($Dereference($t98));

    // $t99 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t99;

    // assume WellFormed($t99) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'$1_stake_ValidatorConfig'($Dereference($t99));

    // $t100 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t100;

    // assume WellFormed($t100) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'$1_stake_StakePool'($Dereference($t100));

    // $t101 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    havoc $t101;

    // assume WellFormed($t101) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $IsValid'vec'$1_stake_ValidatorInfo''($Dereference($t101));

    // trace_local[i#10]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume {:print "$info(): enter loop, variable(s) i#10, next_epoch_validators, total_voting_power havocked and reassigned"} true;
    assume {:print "$track_local(38,38,7):", $t7} $t7 == $t7;

    // trace_local[next_epoch_validators]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume {:print "$track_local(38,38,13):", $t13} $t13 == $t13;

    // trace_local[total_voting_power]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume {:print "$track_local(38,38,18):", $t18} $t18 == $t18;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume {:print "$info(): loop invariant holds at current state"} true;
    assume !$abort_flag;

    // assume stake::spec_validators_are_initialized($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $t13);

    // $t85 := <($t7, $t82) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1079:15+1
    assume {:print "$at(2,51759,51760)"} true;
    call $t85 := $Lt($t7, $t82);

    // if ($t85) goto L29 else goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1075:9+1105
    assume {:print "$at(2,51620,52725)"} true;
    if ($t85) { goto L29; } else { goto L8; }

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1075:9+1105
L9:

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1081:62+13
    assume {:print "$at(2,51840,51853)"} true;
L10:

    // $t97 := borrow_field<stake::ValidatorSet>.active_validators($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1081:57+36
    assume {:print "$at(2,51835,51871)"} true;
    $t97 := $ChildMutation($t36, 1, $active_validators#$1_stake_ValidatorSet($Dereference($t36)));

    // $t98 := vector::borrow_mut<stake::ValidatorInfo>($t97, $t7) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1081:38+59
    call $t98,$t97 := $1_vector_borrow_mut'$1_stake_ValidatorInfo'($t97, $t7);
    if ($abort_flag) {
        assume {:print "$at(2,51816,51875)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t86 := get_field<stake::ValidatorInfo>.addr($t98) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1082:32+23
    assume {:print "$at(2,51908,51931)"} true;
    $t86 := $addr#$1_stake_ValidatorInfo($Dereference($t98));

    // trace_local[pool_address]($t86) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1082:17+12
    assume {:print "$track_local(38,38,14):", $t86} $t86 == $t86;

    // $t99 := borrow_global<stake::ValidatorConfig>($t86) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1083:36+17
    assume {:print "$at(2,51968,51985)"} true;
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t86)) {
        call $ExecFailureAbort();
    } else {
        $t99 := $Mutation($Global($t86), EmptyVec(), $ResourceValue($1_stake_ValidatorConfig_$memory, $t86));
    }
    if ($abort_flag) {
        assume {:print "$at(2,51968,51985)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[validator_config]($t99) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1083:17+16
    $temp_0'$1_stake_ValidatorConfig' := $Dereference($t99);
    assume {:print "$track_local(38,38,21):", $temp_0'$1_stake_ValidatorConfig'} $temp_0'$1_stake_ValidatorConfig' == $temp_0'$1_stake_ValidatorConfig';

    // $t100 := borrow_global<stake::StakePool>($t86) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1084:30+17
    assume {:print "$at(2,52047,52064)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t86)) {
        call $ExecFailureAbort();
    } else {
        $t100 := $Mutation($Global($t86), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t86));
    }
    if ($abort_flag) {
        assume {:print "$at(2,52047,52064)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[stake_pool]($t100) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1084:17+10
    $temp_0'$1_stake_StakePool' := $Dereference($t100);
    assume {:print "$track_local(38,38,16):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t87 := read_ref($t99) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1085:88+17
    assume {:print "$at(2,52178,52195)"} true;
    $t87 := $Dereference($t99);

    // $t88 := read_ref($t100) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1085:61+45
    $t88 := $Dereference($t100);

    // $t89 := stake::generate_validator_info($t86, $t88, $t87) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1085:38+68
    call $t89 := $1_stake_generate_validator_info($t86, $t88, $t87);
    if ($abort_flag) {
        assume {:print "$at(2,52128,52196)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[new_validator_info]($t89) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1085:17+18
    assume {:print "$track_local(38,38,12):", $t89} $t89 == $t89;

    // $t90 := get_field<stake::ValidatorInfo>.voting_power($t89) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1088:17+31
    assume {:print "$at(2,52307,52338)"} true;
    $t90 := $voting_power#$1_stake_ValidatorInfo($t89);

    // $t91 := >=($t90, $t79) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1088:49+2
    call $t91 := $Ge($t90, $t79);

    // if ($t91) goto L12 else goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1088:13+388
    if ($t91) { goto L12; } else { goto L11; }

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1089:17+117
    assume {:print "$at(2,52375,52492)"} true;
L12:

    // assume Le(Add($t18, select stake::ValidatorInfo.voting_power($t89)), 340282366920938463463374607431768211455) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1090:21+72
    assume {:print "$at(2,52402,52474)"} true;
    assume (($t18 + $voting_power#$1_stake_ValidatorInfo($t89)) <= 340282366920938463463374607431768211455);

    // $t92 := get_field<stake::ValidatorInfo>.voting_power($t89) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1092:60+31
    assume {:print "$at(2,52553,52584)"} true;
    $t92 := $voting_power#$1_stake_ValidatorInfo($t89);

    // $t93 := (u128)($t92) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1092:59+41
    call $t93 := $CastU128($t92);
    if ($abort_flag) {
        assume {:print "$at(2,52552,52593)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t94 := +($t18, $t93) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1092:57+1
    call $t94 := $AddU128($t18, $t93);
    if ($abort_flag) {
        assume {:print "$at(2,52550,52551)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[total_voting_power]($t94) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1092:17+18
    assume {:print "$track_local(38,38,18):", $t94} $t94 == $t94;

    // $t101 := borrow_local($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1093:35+26
    assume {:print "$at(2,52629,52655)"} true;
    $t101 := $Mutation($Local(13), EmptyVec(), $t13);

    // vector::push_back<stake::ValidatorInfo>($t101, $t89) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1093:17+65
    call $t101 := $1_vector_push_back'$1_stake_ValidatorInfo'($t101, $t89);
    if ($abort_flag) {
        assume {:print "$at(2,52611,52676)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // write_back[LocalRoot($t13)@]($t101) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1093:17+65
    $t13 := $Dereference($t101);

    // trace_local[next_epoch_validators]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1093:17+65
    assume {:print "$track_local(38,38,13):", $t13} $t13 == $t13;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1095:17+1
    assume {:print "$at(2,52709,52710)"} true;
L11:

    // $t95 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1095:21+1
    assume {:print "$at(2,52713,52714)"} true;
    $t95 := 1;
    assume $IsValid'u64'($t95);

    // $t96 := +($t7, $t95) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1095:19+1
    call $t96 := $AddU64($t7, $t95);
    if ($abort_flag) {
        assume {:print "$at(2,52711,52712)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[i#10]($t96) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1095:13+1
    assume {:print "$track_local(38,38,7):", $t96} $t96 == $t96;

    // goto L25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1095:22+1
    goto L25;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1098:43+21
    assume {:print "$at(2,52770,52791)"} true;
L8:

    // $t102 := move($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1098:43+21
    assume {:print "$at(2,52770,52791)"} true;
    $t102 := $t13;

    // $t103 := borrow_field<stake::ValidatorSet>.active_validators($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1098:9+31
    $t103 := $ChildMutation($t36, 1, $active_validators#$1_stake_ValidatorSet($Dereference($t36)));

    // write_ref($t103, $t102) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1098:9+55
    $t103 := $UpdateMutation($t103, $t102);

    // write_back[Reference($t36).active_validators (vector<stake::ValidatorInfo>)]($t103) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1098:9+55
    $t36 := $UpdateMutation($t36, $Update'$1_stake_ValidatorSet'_active_validators($Dereference($t36), $Dereference($t103)));

    // $t104 := borrow_field<stake::ValidatorSet>.total_voting_power($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1099:9+32
    assume {:print "$at(2,52801,52833)"} true;
    $t104 := $ChildMutation($t36, 4, $total_voting_power#$1_stake_ValidatorSet($Dereference($t36)));

    // write_ref($t104, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1099:9+53
    $t104 := $UpdateMutation($t104, $t18);

    // write_back[Reference($t36).total_voting_power (u128)]($t104) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1099:9+53
    $t36 := $UpdateMutation($t36, $Update'$1_stake_ValidatorSet'_total_voting_power($Dereference($t36), $Dereference($t104)));

    // $t105 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1100:45+1
    assume {:print "$at(2,52900,52901)"} true;
    $t105 := 0;
    assume $IsValid'u128'($t105);

    // $t106 := borrow_field<stake::ValidatorSet>.total_joining_power($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1100:9+33
    $t106 := $ChildMutation($t36, 5, $total_joining_power#$1_stake_ValidatorSet($Dereference($t36)));

    // write_ref($t106, $t105) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1100:9+37
    $t106 := $UpdateMutation($t106, $t105);

    // write_back[Reference($t36).total_joining_power (u128)]($t106) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1100:9+37
    $t36 := $UpdateMutation($t36, $Update'$1_stake_ValidatorSet'_total_joining_power($Dereference($t36), $Dereference($t106)));

    // $t107 := vector::empty<stake::IndividualValidatorPerformance>() on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1103:37+15
    assume {:print "$at(2,53022,53037)"} true;
    call $t107 := $1_vector_empty'$1_stake_IndividualValidatorPerformance'();
    if ($abort_flag) {
        assume {:print "$at(2,53022,53037)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t108 := borrow_field<stake::ValidatorPerformance>.validators($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1103:9+25
    $t108 := $ChildMutation($t40, 0, $validators#$1_stake_ValidatorPerformance($Dereference($t40)));

    // write_ref($t108, $t107) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1103:9+43
    $t108 := $UpdateMutation($t108, $t107);

    // write_back[Reference($t40).validators (vector<stake::IndividualValidatorPerformance>)]($t108) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1103:9+43
    $t40 := $UpdateMutation($t40, $Update'$1_stake_ValidatorPerformance'_validators($Dereference($t40), $Dereference($t108)));

    // $t109 := staking_config::get_recurring_lockup_duration($t38) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1104:46+54
    assume {:print "$at(2,53084,53138)"} true;
    call $t109 := $1_staking_config_get_recurring_lockup_duration($t38);
    if ($abort_flag) {
        assume {:print "$at(2,53084,53138)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[recurring_lockup_duration_secs]($t109) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1104:13+30
    assume {:print "$track_local(38,38,15):", $t109} $t109 == $t109;

    // $t110 := get_field<stake::ValidatorSet>.active_validators($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1105:35+32
    assume {:print "$at(2,53174,53206)"} true;
    $t110 := $active_validators#$1_stake_ValidatorSet($Dereference($t36));

    // $t111 := vector::length<stake::ValidatorInfo>($t110) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1105:20+48
    call $t111 := $1_vector_length'$1_stake_ValidatorInfo'($t110);
    if ($abort_flag) {
        assume {:print "$at(2,53159,53207)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[vlen#14]($t111) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1105:13+4
    assume {:print "$track_local(38,38,28):", $t111} $t111 == $t111;

    // $t112 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1106:31+1
    assume {:print "$at(2,53239,53240)"} true;
    $t112 := 0;
    assume $IsValid'u64'($t112);

    // trace_local[validator_index]($t112) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1106:13+15
    assume {:print "$track_local(38,38,23):", $t112} $t112 == $t112;

    // label L20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1108:13+648
    assume {:print "$at(2,53271,53919)"} true;
L20:

    // assert stake::spec_validators_are_initialized(select stake::ValidatorSet.active_validators($t36)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1109:17+75
    assume {:print "$at(2,53294,53369)"} true;
    assert {:msg "assert_failed(2,53294,53369): base case of the loop invariant does not hold"}
      $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $active_validators#$1_stake_ValidatorSet($Dereference($t36)));

    // assert Eq<num>(Len<stake::ValidatorInfo>(select stake::ValidatorSet.pending_active($t36)), 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1110:17+49
    assume {:print "$at(2,53386,53435)"} true;
    assert {:msg "assert_failed(2,53386,53435): base case of the loop invariant does not hold"}
      $IsEqual'num'(LenVec($pending_active#$1_stake_ValidatorSet($Dereference($t36))), 0);

    // assert Eq<num>(Len<stake::ValidatorInfo>(select stake::ValidatorSet.pending_inactive($t36)), 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1111:17+51
    assume {:print "$at(2,53452,53503)"} true;
    assert {:msg "assert_failed(2,53452,53503): base case of the loop invariant does not hold"}
      $IsEqual'num'(LenVec($pending_inactive#$1_stake_ValidatorSet($Dereference($t36))), 0);

    // assert And(Le(0, $t112), Le($t112, $t111)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1112:17+58
    assume {:print "$at(2,53520,53578)"} true;
    assert {:msg "assert_failed(2,53520,53578): base case of the loop invariant does not hold"}
      ((0 <= $t112) && ($t112 <= $t111));

    // assert Eq<u64>($t111, Len<stake::ValidatorInfo>(select stake::ValidatorSet.active_validators($t36))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1113:17+55
    assume {:print "$at(2,53595,53650)"} true;
    assert {:msg "assert_failed(2,53595,53650): base case of the loop invariant does not hold"}
      $IsEqual'u64'($t111, LenVec($active_validators#$1_stake_ValidatorSet($Dereference($t36))));

    // assert forall i: Range(0, $t112): Lt(select stake::ValidatorConfig.validator_index(global<stake::ValidatorConfig>(select stake::ValidatorInfo.addr(Index(select stake::ValidatorSet.active_validators($t36), i)))), $t112) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1114:17+161
    assume {:print "$at(2,53667,53828)"} true;
    assert {:msg "assert_failed(2,53667,53828): base case of the loop invariant does not hold"}
      (var $range_0 := $Range(0, $t112); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($validator_index#$1_stake_ValidatorConfig($ResourceValue($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec($active_validators#$1_stake_ValidatorSet($Dereference($t36)), i)))) < $t112)))));

    // assert Eq<num>(Len<stake::IndividualValidatorPerformance>(select stake::ValidatorPerformance.validators($t40)), $t112) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume {:print "$at(2,53845,53905)"} true;
    assert {:msg "assert_failed(2,53845,53905): base case of the loop invariant does not hold"}
      $IsEqual'num'(LenVec($validators#$1_stake_ValidatorPerformance($Dereference($t40))), $t112);

    // $t23 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t23;

    // assume WellFormed($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t23);

    // $t113 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t113;

    // assume WellFormed($t113) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'bool'($t113);

    // $t114 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t114;

    // assume WellFormed($t114) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'address'($t114);

    // $t115 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t115;

    // assume WellFormed($t115) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t115);

    // $t116 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t116;

    // assume WellFormed($t116) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t116);

    // $t117 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t117;

    // assume WellFormed($t117) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'$1_stake_IndividualValidatorPerformance'($t117);

    // $t118 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t118;

    // assume WellFormed($t118) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'address'($t118);

    // $t119 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t119;

    // assume WellFormed($t119) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t119);

    // $t120 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t120;

    // assume WellFormed($t120) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t120);

    // $t121 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t121;

    // assume WellFormed($t121) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'bool'($t121);

    // $t122 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t122;

    // assume WellFormed($t122) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t122);

    // $t123 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t123;

    // assume WellFormed($t123) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t123);

    // $t124 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t124;

    // assume WellFormed($t124) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t124);

    // $t125 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t125;

    // assume WellFormed($t125) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($t125);

    // $t36 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $temp_0'$1_stake_ValidatorSet';
    $t36 := $UpdateMutation($t36, $temp_0'$1_stake_ValidatorSet');

    // assume WellFormed($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'$1_stake_ValidatorSet'($Dereference($t36));

    // $t40 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $temp_0'$1_stake_ValidatorPerformance';
    $t40 := $UpdateMutation($t40, $temp_0'$1_stake_ValidatorPerformance');

    // assume WellFormed($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'$1_stake_ValidatorPerformance'($Dereference($t40));

    // $t126 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t126;

    // assume WellFormed($t126) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'vec'$1_stake_ValidatorInfo''($Dereference($t126));

    // $t127 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t127;

    // assume WellFormed($t127) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'$1_stake_ValidatorInfo'($Dereference($t127));

    // $t128 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t128;

    // assume WellFormed($t128) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'$1_stake_ValidatorConfig'($Dereference($t128));

    // $t129 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t129;

    // assume WellFormed($t129) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($Dereference($t129));

    // $t130 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t130;

    // assume WellFormed($t130) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'$1_stake_ValidatorConfig'($Dereference($t130));

    // $t131 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t131;

    // assume WellFormed($t131) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($Dereference($t131));

    // $t132 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t132;

    // assume WellFormed($t132) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'vec'$1_stake_IndividualValidatorPerformance''($Dereference($t132));

    // $t133 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t133;

    // assume WellFormed($t133) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'$1_stake_StakePool'($Dereference($t133));

    // $t134 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    havoc $t134;

    // assume WellFormed($t134) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume $IsValid'u64'($Dereference($t134));

    // trace_local[validator_index]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume {:print "$info(): enter loop, variable(s) validator_index havocked and reassigned"} true;
    assume {:print "$track_local(38,38,23):", $t23} $t23 == $t23;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume {:print "$info(): loop invariant holds at current state"} true;
    assume !$abort_flag;

    // assume stake::spec_validators_are_initialized(select stake::ValidatorSet.active_validators($t36)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1109:17+75
    assume {:print "$at(2,53294,53369)"} true;
    assume $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $active_validators#$1_stake_ValidatorSet($Dereference($t36)));

    // assume Eq<num>(Len<stake::ValidatorInfo>(select stake::ValidatorSet.pending_active($t36)), 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1110:17+49
    assume {:print "$at(2,53386,53435)"} true;
    assume $IsEqual'num'(LenVec($pending_active#$1_stake_ValidatorSet($Dereference($t36))), 0);

    // assume Eq<num>(Len<stake::ValidatorInfo>(select stake::ValidatorSet.pending_inactive($t36)), 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1111:17+51
    assume {:print "$at(2,53452,53503)"} true;
    assume $IsEqual'num'(LenVec($pending_inactive#$1_stake_ValidatorSet($Dereference($t36))), 0);

    // assume And(Le(0, $t23), Le($t23, $t111)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1112:17+58
    assume {:print "$at(2,53520,53578)"} true;
    assume ((0 <= $t23) && ($t23 <= $t111));

    // assume Eq<u64>($t111, Len<stake::ValidatorInfo>(select stake::ValidatorSet.active_validators($t36))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1113:17+55
    assume {:print "$at(2,53595,53650)"} true;
    assume $IsEqual'u64'($t111, LenVec($active_validators#$1_stake_ValidatorSet($Dereference($t36))));

    // assume forall i: Range(0, $t23): Lt(select stake::ValidatorConfig.validator_index(global<stake::ValidatorConfig>(select stake::ValidatorInfo.addr(Index(select stake::ValidatorSet.active_validators($t36), i)))), $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1114:17+161
    assume {:print "$at(2,53667,53828)"} true;
    assume (var $range_0 := $Range(0, $t23); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($validator_index#$1_stake_ValidatorConfig($ResourceValue($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec($active_validators#$1_stake_ValidatorSet($Dereference($t36)), i)))) < $t23)))));

    // assume Eq<num>(Len<stake::IndividualValidatorPerformance>(select stake::ValidatorPerformance.validators($t40)), $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume {:print "$at(2,53845,53905)"} true;
    assume $IsEqual'num'(LenVec($validators#$1_stake_ValidatorPerformance($Dereference($t40))), $t23);

    // $t113 := <($t23, $t111) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1118:29+1
    assume {:print "$at(2,53949,53950)"} true;
    call $t113 := $Lt($t23, $t111);

    // if ($t113) goto L15 else goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1107:9+1890
    assume {:print "$at(2,53250,55140)"} true;
    if ($t113) { goto L15; } else { goto L14; }

    // label L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1107:9+1890
L15:

    // label L16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1120:58+13
    assume {:print "$at(2,54026,54039)"} true;
L16:

    // $t126 := borrow_field<stake::ValidatorSet>.active_validators($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1120:53+36
    assume {:print "$at(2,54021,54057)"} true;
    $t126 := $ChildMutation($t36, 1, $active_validators#$1_stake_ValidatorSet($Dereference($t36)));

    // $t127 := vector::borrow_mut<stake::ValidatorInfo>($t126, $t23) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1120:34+73
    call $t127,$t126 := $1_vector_borrow_mut'$1_stake_ValidatorInfo'($t126, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,54002,54075)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[validator_info]($t127) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1120:17+14
    $temp_0'$1_stake_ValidatorInfo' := $Dereference($t127);
    assume {:print "$track_local(38,38,24):", $temp_0'$1_stake_ValidatorInfo'} $temp_0'$1_stake_ValidatorInfo' == $temp_0'$1_stake_ValidatorInfo';

    // $t128 := borrow_field<stake::ValidatorInfo>.config($t127) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1121:13+21
    assume {:print "$at(2,54089,54110)"} true;
    $t128 := $ChildMutation($t127, 2, $config#$1_stake_ValidatorInfo($Dereference($t127)));

    // $t129 := borrow_field<stake::ValidatorConfig>.validator_index($t128) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1121:13+37
    $t129 := $ChildMutation($t128, 3, $validator_index#$1_stake_ValidatorConfig($Dereference($t128)));

    // write_ref($t129, $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1121:13+55
    $t129 := $UpdateMutation($t129, $t23);

    // write_back[Reference($t128).validator_index (u64)]($t129) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1121:13+55
    $t128 := $UpdateMutation($t128, $Update'$1_stake_ValidatorConfig'_validator_index($Dereference($t128), $Dereference($t129)));

    // write_back[Reference($t127).config (stake::ValidatorConfig)]($t128) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1121:13+55
    $t127 := $UpdateMutation($t127, $Update'$1_stake_ValidatorInfo'_config($Dereference($t127), $Dereference($t128)));

    // $t114 := get_field<stake::ValidatorInfo>.addr($t127) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1122:71+19
    assume {:print "$at(2,54216,54235)"} true;
    $t114 := $addr#$1_stake_ValidatorInfo($Dereference($t127));

    // $t130 := borrow_global<stake::ValidatorConfig>($t114) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1122:36+17
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t114)) {
        call $ExecFailureAbort();
    } else {
        $t130 := $Mutation($Global($t114), EmptyVec(), $ResourceValue($1_stake_ValidatorConfig_$memory, $t114));
    }
    if ($abort_flag) {
        assume {:print "$at(2,54181,54198)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[validator_config#15]($t130) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1122:17+16
    $temp_0'$1_stake_ValidatorConfig' := $Dereference($t130);
    assume {:print "$track_local(38,38,22):", $temp_0'$1_stake_ValidatorConfig'} $temp_0'$1_stake_ValidatorConfig' == $temp_0'$1_stake_ValidatorConfig';

    // $t131 := borrow_field<stake::ValidatorConfig>.validator_index($t130) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1123:13+32
    assume {:print "$at(2,54250,54282)"} true;
    $t131 := $ChildMutation($t130, 3, $validator_index#$1_stake_ValidatorConfig($Dereference($t130)));

    // write_ref($t131, $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1123:13+50
    $t131 := $UpdateMutation($t131, $t23);

    // write_back[Reference($t130).validator_index (u64)]($t131) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1123:13+50
    $t130 := $UpdateMutation($t130, $Update'$1_stake_ValidatorConfig'_validator_index($Dereference($t130), $Dereference($t131)));

    // write_back[stake::ValidatorConfig@]($t130) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1123:13+50
    $1_stake_ValidatorConfig_$memory := $ResourceUpdate($1_stake_ValidatorConfig_$memory, $GlobalLocationAddress($t130),
        $Dereference($t130));

    // $t132 := borrow_field<stake::ValidatorPerformance>.validators($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1125:31+30
    assume {:print "$at(2,54333,54363)"} true;
    $t132 := $ChildMutation($t40, 0, $validators#$1_stake_ValidatorPerformance($Dereference($t40)));

    // $t115 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1126:39+1
    assume {:print "$at(2,54436,54437)"} true;
    $t115 := 0;
    assume $IsValid'u64'($t115);

    // $t116 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1127:35+1
    assume {:print "$at(2,54473,54474)"} true;
    $t116 := 0;
    assume $IsValid'u64'($t116);

    // $t117 := pack stake::IndividualValidatorPerformance($t115, $t116) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1125:63+124
    assume {:print "$at(2,54365,54489)"} true;
    $t117 := $1_stake_IndividualValidatorPerformance($t115, $t116);

    // vector::push_back<stake::IndividualValidatorPerformance>($t132, $t117) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1125:13+175
    call $t132 := $1_vector_push_back'$1_stake_IndividualValidatorPerformance'($t132, $t117);
    if ($abort_flag) {
        assume {:print "$at(2,54315,54490)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // write_back[Reference($t40).validators (vector<stake::IndividualValidatorPerformance>)]($t132) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1125:13+175
    $t40 := $UpdateMutation($t40, $Update'$1_stake_ValidatorPerformance'_validators($Dereference($t40), $Dereference($t132)));

    // $t118 := get_field<stake::ValidatorInfo>.addr($t127) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1132:59+19
    assume {:print "$at(2,54696,54715)"} true;
    $t118 := $addr#$1_stake_ValidatorInfo($Dereference($t127));

    // write_back[Reference($t126)[]]($t127) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1132:59+19
    $t126 := $UpdateMutation($t126, UpdateVec($Dereference($t126), ReadVec(p#$Mutation($t127), LenVec(p#$Mutation($t126))), $Dereference($t127)));

    // write_back[Reference($t36).active_validators (vector<stake::ValidatorInfo>)]($t126) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1132:59+19
    $t36 := $UpdateMutation($t36, $Update'$1_stake_ValidatorSet'_active_validators($Dereference($t36), $Dereference($t126)));

    // $t133 := borrow_global<stake::StakePool>($t118) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1132:30+17
    if (!$ResourceExists($1_stake_StakePool_$memory, $t118)) {
        call $ExecFailureAbort();
    } else {
        $t133 := $Mutation($Global($t118), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t118));
    }
    if ($abort_flag) {
        assume {:print "$at(2,54667,54684)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[stake_pool#16]($t133) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1132:17+10
    $temp_0'$1_stake_StakePool' := $Dereference($t133);
    assume {:print "$track_local(38,38,17):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t119 := get_field<stake::StakePool>.locked_until_secs($t133) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1133:17+28
    assume {:print "$at(2,54734,54762)"} true;
    $t119 := $locked_until_secs#$1_stake_StakePool($Dereference($t133));

    // $t120 := timestamp::now_seconds() on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1133:49+24
    call $t120 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,54766,54790)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t121 := <=($t119, $t120) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1133:46+2
    call $t121 := $Le($t119, $t120);

    // if ($t121) goto L18 else goto L17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1133:13+347
    if ($t121) { goto L18; } else { goto L17; }

    // label L18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1134:17+126
    assume {:print "$at(2,54810,54936)"} true;
L18:

    // assume Le(Add(timestamp::spec_now_seconds(), $t109), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1135:21+81
    assume {:print "$at(2,54837,54918)"} true;
    assume (($1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory) + $t109) <= 18446744073709551615);

    // $t122 := timestamp::now_seconds() on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1138:21+24
    assume {:print "$at(2,55005,55029)"} true;
    call $t122 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,55005,55029)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t123 := +($t122, $t109) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1138:46+1
    call $t123 := $AddU64($t122, $t109);
    if ($abort_flag) {
        assume {:print "$at(2,55030,55031)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // $t134 := borrow_field<stake::StakePool>.locked_until_secs($t133) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1137:17+28
    assume {:print "$at(2,54954,54982)"} true;
    $t134 := $ChildMutation($t133, 4, $locked_until_secs#$1_stake_StakePool($Dereference($t133)));

    // write_ref($t134, $t123) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1137:17+108
    $t134 := $UpdateMutation($t134, $t123);

    // write_back[Reference($t133).locked_until_secs (u64)]($t134) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1137:17+108
    $t133 := $UpdateMutation($t133, $Update'$1_stake_StakePool'_locked_until_secs($Dereference($t133), $Dereference($t134)));

    // write_back[stake::StakePool@]($t133) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1137:17+108
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t133),
        $Dereference($t133));

    // goto L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1138:78+1
    assume {:print "$at(2,55062,55063)"} true;
    goto L19;

    // label L17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1133:13+347
    assume {:print "$at(2,54730,55077)"} true;
L17:

    // write_back[stake::StakePool@]($t133) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1133:13+347
    assume {:print "$at(2,54730,55077)"} true;
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t133),
        $Dereference($t133));

    // destroy($t133) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1133:13+347

    // label L19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1141:31+15
    assume {:print "$at(2,55110,55125)"} true;
L19:

    // $t124 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1141:49+1
    assume {:print "$at(2,55128,55129)"} true;
    $t124 := 1;
    assume $IsValid'u64'($t124);

    // $t125 := +($t23, $t124) on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1141:47+1
    call $t125 := $AddU64($t23, $t124);
    if ($abort_flag) {
        assume {:print "$at(2,55126,55127)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // trace_local[validator_index]($t125) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1141:13+15
    assume {:print "$track_local(38,38,23):", $t125} $t125 == $t125;

    // goto L26 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1141:50+1
    goto L26;

    // label L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:9+206
    assume {:print "$at(2,55151,55357)"} true;
L14:

    // write_back[stake::ValidatorSet@]($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:9+206
    assume {:print "$at(2,55151,55357)"} true;
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t36),
        $Dereference($t36));

    // destroy($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:9+206

    // write_back[stake::ValidatorPerformance@]($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:9+206
    $1_stake_ValidatorPerformance_$memory := $ResourceUpdate($1_stake_ValidatorPerformance_$memory, $GlobalLocationAddress($t40),
        $Dereference($t40));

    // destroy($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:9+206

    // $t135 := opaque begin: features::periodical_reward_rate_decrease_enabled() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:13+51

    // assume WellFormed($t135) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:13+51
    assume $IsValid'bool'($t135);

    // assume Eq<bool>($t135, features::spec_periodical_reward_rate_decrease_enabled()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:13+51
    assume $IsEqual'bool'($t135, $1_features_spec_periodical_reward_rate_decrease_enabled());

    // $t135 := opaque end: features::periodical_reward_rate_decrease_enabled() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:13+51

    // if ($t135) goto L22 else goto L21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1144:9+206
    if ($t135) { goto L22; } else { goto L21; }

    // label L22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1146:13+62
    assume {:print "$at(2,55284,55346)"} true;
L22:

    // assume Identical($t136, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t136 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t137, select staking_config::StakingRewardsConfig.rewards_rate($t136)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t137 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t136));

    // assume Identical($t138, select staking_config::StakingRewardsConfig.min_rewards_rate($t136)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t138 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t136));

    // assume Identical($t139, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t136)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t139 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t136));

    // assume Identical($t140, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t136)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t140 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t136));

    // assume Identical($t141, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t136)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t141 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t136));

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assert {:msg "assert_failed(103,9307,9377): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assert {:msg "assert_failed(103,9567,9623): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t137, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assert {:msg "assert_failed(103,10156,10285): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t137, $1_fixed_point64_spec_create_from_u128(1)));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t138, $t137)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assert {:msg "assert_failed(103,10294,10369): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t138, $t137));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t139, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assert {:msg "assert_failed(103,10378,10435): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t139, 31536000));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t140, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assert {:msg "assert_failed(103,10444,10525): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t140 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t141), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assert {:msg "assert_failed(103,10534,10601): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t141) <= 1));

    // $t142 := staking_config::calculate_and_save_latest_epoch_rewards_rate() on_abort goto L28 with $t37 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1146:13+62
    assume {:print "$at(2,55284,55346)"} true;
    call $t142 := $1_staking_config_calculate_and_save_latest_epoch_rewards_rate();
    if ($abort_flag) {
        assume {:print "$at(2,55284,55346)"} true;
        $t37 := $abort_code;
        assume {:print "$track_abort(38,38):", $t37} $t37 == $t37;
        goto L28;
    }

    // destroy($t142) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1146:13+62

    // label L21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1147:10+1
    assume {:print "$at(2,55357,55358)"} true;
L21:

    // goto L27 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1147:10+1
    assume {:print "$at(2,55357,55358)"} true;
    goto L27;

    // label L23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1147:10+1
    // Loop invariant checking block for the loop started with header: L3
L23:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1147:10+1
    assume {:print "$at(2,55357,55358)"} true;
    assume false;
    return;

    // label L24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1147:10+1
    // Loop invariant checking block for the loop started with header: L7
L24:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1147:10+1
    assume {:print "$at(2,55357,55358)"} true;
    assume false;
    return;

    // label L25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1147:10+1
    // Loop invariant checking block for the loop started with header: L13
L25:

    // assert stake::spec_validators_are_initialized($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume {:print "$at(2,51664,51729)"} true;
    assert {:msg "assert_failed(2,51664,51729): induction case of the loop invariant does not hold"}
      $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $t13);

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    assume false;
    return;

    // label L26 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1077:17+65
    // Loop invariant checking block for the loop started with header: L20
L26:

    // assert stake::spec_validators_are_initialized(select stake::ValidatorSet.active_validators($t36)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1109:17+75
    assume {:print "$at(2,53294,53369)"} true;
    assert {:msg "assert_failed(2,53294,53369): induction case of the loop invariant does not hold"}
      $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $active_validators#$1_stake_ValidatorSet($Dereference($t36)));

    // assert Eq<num>(Len<stake::ValidatorInfo>(select stake::ValidatorSet.pending_active($t36)), 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1110:17+49
    assume {:print "$at(2,53386,53435)"} true;
    assert {:msg "assert_failed(2,53386,53435): induction case of the loop invariant does not hold"}
      $IsEqual'num'(LenVec($pending_active#$1_stake_ValidatorSet($Dereference($t36))), 0);

    // assert Eq<num>(Len<stake::ValidatorInfo>(select stake::ValidatorSet.pending_inactive($t36)), 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1111:17+51
    assume {:print "$at(2,53452,53503)"} true;
    assert {:msg "assert_failed(2,53452,53503): induction case of the loop invariant does not hold"}
      $IsEqual'num'(LenVec($pending_inactive#$1_stake_ValidatorSet($Dereference($t36))), 0);

    // assert And(Le(0, $t125), Le($t125, $t111)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1112:17+58
    assume {:print "$at(2,53520,53578)"} true;
    assert {:msg "assert_failed(2,53520,53578): induction case of the loop invariant does not hold"}
      ((0 <= $t125) && ($t125 <= $t111));

    // assert Eq<u64>($t111, Len<stake::ValidatorInfo>(select stake::ValidatorSet.active_validators($t36))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1113:17+55
    assume {:print "$at(2,53595,53650)"} true;
    assert {:msg "assert_failed(2,53595,53650): induction case of the loop invariant does not hold"}
      $IsEqual'u64'($t111, LenVec($active_validators#$1_stake_ValidatorSet($Dereference($t36))));

    // assert forall i: Range(0, $t125): Lt(select stake::ValidatorConfig.validator_index(global<stake::ValidatorConfig>(select stake::ValidatorInfo.addr(Index(select stake::ValidatorSet.active_validators($t36), i)))), $t125) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1114:17+161
    assume {:print "$at(2,53667,53828)"} true;
    assert {:msg "assert_failed(2,53667,53828): induction case of the loop invariant does not hold"}
      (var $range_0 := $Range(0, $t125); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($validator_index#$1_stake_ValidatorConfig($ResourceValue($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec($active_validators#$1_stake_ValidatorSet($Dereference($t36)), i)))) < $t125)))));

    // assert Eq<num>(Len<stake::IndividualValidatorPerformance>(select stake::ValidatorPerformance.validators($t40)), $t125) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume {:print "$at(2,53845,53905)"} true;
    assert {:msg "assert_failed(2,53845,53905): induction case of the loop invariant does not hold"}
      $IsEqual'num'(LenVec($validators#$1_stake_ValidatorPerformance($Dereference($t40))), $t125);

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1116:17+60
    assume false;
    return;

    // label L27 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1148:5+1
    assume {:print "$at(2,55363,55364)"} true;
L27:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:143:9+16
    assume {:print "$at(3,6453,6469)"} true;
    assert {:msg "assert_failed(3,6453,6469): function does not abort under this condition"}
      !false;

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume {:print "$at(3,548,652)"} true;
    assert {:msg "assert_failed(3,548,652): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:143:9+16
    assume {:print "$at(3,6453,6469)"} true;
    return;

    // label L28 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1148:5+1
    assume {:print "$at(2,55363,55364)"} true;
L28:

    // assert false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:136:5+391
    assume {:print "$at(3,6084,6475)"} true;
    assert {:msg "assert_failed(3,6084,6475): abort not covered by any of the `aborts_if` clauses"}
      false;

    // abort($t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:136:5+391
    $abort_code := $t37;
    $abort_flag := true;
    return;

    // label L29 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L29:

    // destroy($t40) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L9 at <internal>:1:1+10
    goto L9;

}

// fun stake::reactivate_stake [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+342
procedure {:timeLimit 40} $1_stake_reactivate_stake$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume {:print "$at(2,30313,30314)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume $IsValid'u64'($t1);

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+342
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume {:print "$track_local(38,39,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:660:5+1
    assume {:print "$track_local(38,39,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:661:29+25
    assume {:print "$at(2,30442,30467)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,30442,30467)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,39):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:661:13+13
    assume {:print "$track_local(38,39,2):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:662:9+38
    assume {:print "$at(2,30477,30515)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(2,30477,30515)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,39):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_global<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:663:29+13
    assume {:print "$at(2,30545,30558)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,30545,30558)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,39):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:105:9+42
    assume {:print "$at(3,4852,4894)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t5));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:108:9+53
    assume {:print "$at(3,4956,5009)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t1, select coin::Coin.value(select stake::StakePool.pending_inactive($t7)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:111:9+86
    assume {:print "$at(3,5131,5217)"} true;
    assume ($t8 == $1_math64_$min($t1, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t7))));

    // stake::reactivate_stake_with_cap($t5, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:664:9+48
    assume {:print "$at(2,30600,30648)"} true;
    call $1_stake_reactivate_stake_with_cap($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,30600,30648)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,39):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:665:5+1
    assume {:print "$at(2,30654,30655)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:665:5+1
    assume {:print "$at(2,30654,30655)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:665:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:665:5+1
    assume {:print "$at(2,30654,30655)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::reactivate_stake_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1118
procedure {:inline 1} $1_stake_reactivate_stake_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: int;
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $Mutation ($1_stake_StakePool);
    var $t12: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t16: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t17: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t18: $Mutation ($1_event_EventHandle'$1_stake_ReactivateStakeEvent');
    var $t19: $1_stake_ReactivateStakeEvent;
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t6, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:105:9+42
    assume {:print "$at(3,4852,4894)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:108:9+53
    assume {:print "$at(3,4956,5009)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t1, select coin::Coin.value(select stake::StakePool.pending_inactive($t7)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:111:9+86
    assume {:print "$at(3,5131,5217)"} true;
    assume ($t8 == $1_math64_$min($t1, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t7))));

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume {:print "$at(2,30661,30662)"} true;
    assume {:print "$track_local(38,40,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume {:print "$track_local(38,40,1):", $t1} $t1 == $t1;

    // $t9 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:668:28+22
    assume {:print "$at(2,30788,30810)"} true;
    $t9 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:668:13+12
    assume {:print "$track_local(38,40,2):", $t9} $t9 == $t9;

    // stake::assert_stake_pool_exists($t9) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:669:9+38
    assume {:print "$at(2,30820,30858)"} true;
    call $1_stake_assert_stake_pool_exists($t9);
    if ($abort_flag) {
        assume {:print "$at(2,30820,30858)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // $t11 := borrow_global<stake::StakePool>($t9) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:672:26+17
    assume {:print "$at(2,30961,30978)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(2,30961,30978)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[stake_pool]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:672:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t11);
    assume {:print "$track_local(38,40,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t12 := get_field<stake::StakePool>.pending_inactive($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:50+28
    assume {:print "$at(2,31054,31082)"} true;
    $t12 := $pending_inactive#$1_stake_StakePool($Dereference($t11));

    // $t13 := coin::value<aptos_coin::AptosCoin>($t12) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:38+41
    call $t13 := $1_coin_value'$1_aptos_coin_AptosCoin'($t12);
    if ($abort_flag) {
        assume {:print "$at(2,31042,31083)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[total_pending_inactive]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:13+22
    assume {:print "$track_local(38,40,5):", $t13} $t13 == $t13;

    // $t14 := math64::min($t1, $t13) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:674:18+35
    assume {:print "$at(2,31102,31137)"} true;
    call $t14 := $1_math64_min($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,31102,31137)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[amount]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:674:9+6
    assume {:print "$track_local(38,40,1):", $t14} $t14 == $t14;

    // $t15 := borrow_field<stake::StakePool>.pending_inactive($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:47+32
    assume {:print "$at(2,31471,31503)"} true;
    $t15 := $ChildMutation($t11, 3, $pending_inactive#$1_stake_StakePool($Dereference($t11)));

    // $t16 := coin::extract<aptos_coin::AptosCoin>($t15, $t14) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:33+55
    call $t16,$t15 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t15, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,31457,31512)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // write_back[Reference($t11).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:33+55
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t11), $Dereference($t15)));

    // trace_local[reactivated_coins]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:13+17
    assume {:print "$track_local(38,40,3):", $t16} $t16 == $t16;

    // $t17 := borrow_field<stake::StakePool>.active($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:680:21+22
    assume {:print "$at(2,31534,31556)"} true;
    $t17 := $ChildMutation($t11, 0, $active#$1_stake_StakePool($Dereference($t11)));

    // coin::merge<aptos_coin::AptosCoin>($t17, $t16) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:680:9+54
    call $t17 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t17, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,31522,31576)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // write_back[Reference($t11).active (coin::Coin<aptos_coin::AptosCoin>)]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:680:9+54
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_active($Dereference($t11), $Dereference($t17)));

    // $t18 := borrow_field<stake::StakePool>.reactivate_stake_events($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:683:13+39
    assume {:print "$at(2,31618,31657)"} true;
    $t18 := $ChildMutation($t11, 10, $reactivate_stake_events#$1_stake_StakePool($Dereference($t11)));

    // $t19 := pack stake::ReactivateStakeEvent($t9, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:684:13+90
    assume {:print "$at(2,31671,31761)"} true;
    $t19 := $1_stake_ReactivateStakeEvent($t9, $t14);

    // opaque begin: event::emit_event<stake::ReactivateStakeEvent>($t18, $t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:682:9+185
    assume {:print "$at(2,31587,31772)"} true;

    // opaque end: event::emit_event<stake::ReactivateStakeEvent>($t18, $t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:682:9+185

    // write_back[Reference($t11).reactivate_stake_events (event::EventHandle<stake::ReactivateStakeEvent>)]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:682:9+185
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_reactivate_stake_events($Dereference($t11), $Dereference($t18)));

    // write_back[stake::StakePool@]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:682:9+185
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:689:5+1
    assume {:print "$at(2,31778,31779)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:689:5+1
    assume {:print "$at(2,31778,31779)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:689:5+1
L2:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:689:5+1
    assume {:print "$at(2,31778,31779)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun stake::reactivate_stake_with_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1118
procedure {:timeLimit 40} $1_stake_reactivate_stake_with_cap$verify(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: int;
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $Mutation ($1_stake_StakePool);
    var $t12: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t16: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t17: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t18: $Mutation ($1_event_EventHandle'$1_stake_ReactivateStakeEvent');
    var $t19: $1_stake_ReactivateStakeEvent;
    var $t20: $1_stake_StakePool;
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_stake_StakePool_$memory#33: $Memory $1_stake_StakePool;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume {:print "$at(2,30661,30662)"} true;
    assume $IsValid'$1_stake_OwnerCapability'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume $IsValid'u64'($t1);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1118
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:105:9+42
    assume {:print "$at(3,4852,4894)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:108:9+53
    assume {:print "$at(3,4956,5009)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t1, select coin::Coin.value(select stake::StakePool.pending_inactive($t7)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:111:9+86
    assume {:print "$at(3,5131,5217)"} true;
    assume ($t8 == $1_math64_$min($t1, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t7))));

    // assume CanModify<stake::StakePool>($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:110:9+41
    assume {:print "$at(3,5081,5122)"} true;
    assume $1_stake_StakePool_$modifies[$t6];

    // @33 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:110:9+41
    $1_stake_StakePool_$memory#33 := $1_stake_StakePool_$memory;

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume {:print "$at(2,30661,30662)"} true;
    assume {:print "$track_local(38,40,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:5+1
    assume {:print "$track_local(38,40,1):", $t1} $t1 == $t1;

    // $t9 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:668:28+22
    assume {:print "$at(2,30788,30810)"} true;
    $t9 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:668:13+12
    assume {:print "$track_local(38,40,2):", $t9} $t9 == $t9;

    // stake::assert_stake_pool_exists($t9) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:669:9+38
    assume {:print "$at(2,30820,30858)"} true;
    call $1_stake_assert_stake_pool_exists($t9);
    if ($abort_flag) {
        assume {:print "$at(2,30820,30858)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // assert CanModify<stake::StakePool>($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:672:26+17
    assume {:print "$at(2,30961,30978)"} true;
    assert {:msg "assert_failed(2,30961,30978): caller does not have permission to modify `stake::StakePool` at given address"}
      $1_stake_StakePool_$modifies[$t9];

    // $t11 := borrow_global<stake::StakePool>($t9) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:672:26+17
    if (!$ResourceExists($1_stake_StakePool_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(2,30961,30978)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[stake_pool]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:672:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t11);
    assume {:print "$track_local(38,40,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t12 := get_field<stake::StakePool>.pending_inactive($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:50+28
    assume {:print "$at(2,31054,31082)"} true;
    $t12 := $pending_inactive#$1_stake_StakePool($Dereference($t11));

    // $t13 := coin::value<aptos_coin::AptosCoin>($t12) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:38+41
    call $t13 := $1_coin_value'$1_aptos_coin_AptosCoin'($t12);
    if ($abort_flag) {
        assume {:print "$at(2,31042,31083)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[total_pending_inactive]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:13+22
    assume {:print "$track_local(38,40,5):", $t13} $t13 == $t13;

    // $t14 := math64::min($t1, $t13) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:674:18+35
    assume {:print "$at(2,31102,31137)"} true;
    call $t14 := $1_math64_min($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,31102,31137)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[amount]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:674:9+6
    assume {:print "$track_local(38,40,1):", $t14} $t14 == $t14;

    // $t15 := borrow_field<stake::StakePool>.pending_inactive($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:47+32
    assume {:print "$at(2,31471,31503)"} true;
    $t15 := $ChildMutation($t11, 3, $pending_inactive#$1_stake_StakePool($Dereference($t11)));

    // $t16 := coin::extract<aptos_coin::AptosCoin>($t15, $t14) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:33+55
    call $t16,$t15 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t15, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,31457,31512)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // write_back[Reference($t11).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:33+55
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t11), $Dereference($t15)));

    // trace_local[reactivated_coins]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:13+17
    assume {:print "$track_local(38,40,3):", $t16} $t16 == $t16;

    // $t17 := borrow_field<stake::StakePool>.active($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:680:21+22
    assume {:print "$at(2,31534,31556)"} true;
    $t17 := $ChildMutation($t11, 0, $active#$1_stake_StakePool($Dereference($t11)));

    // coin::merge<aptos_coin::AptosCoin>($t17, $t16) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:680:9+54
    call $t17 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t17, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,31522,31576)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,40):", $t10} $t10 == $t10;
        goto L2;
    }

    // write_back[Reference($t11).active (coin::Coin<aptos_coin::AptosCoin>)]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:680:9+54
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_active($Dereference($t11), $Dereference($t17)));

    // $t18 := borrow_field<stake::StakePool>.reactivate_stake_events($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:683:13+39
    assume {:print "$at(2,31618,31657)"} true;
    $t18 := $ChildMutation($t11, 10, $reactivate_stake_events#$1_stake_StakePool($Dereference($t11)));

    // $t19 := pack stake::ReactivateStakeEvent($t9, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:684:13+90
    assume {:print "$at(2,31671,31761)"} true;
    $t19 := $1_stake_ReactivateStakeEvent($t9, $t14);

    // opaque begin: event::emit_event<stake::ReactivateStakeEvent>($t18, $t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:682:9+185
    assume {:print "$at(2,31587,31772)"} true;

    // opaque end: event::emit_event<stake::ReactivateStakeEvent>($t18, $t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:682:9+185

    // write_back[Reference($t11).reactivate_stake_events (event::EventHandle<stake::ReactivateStakeEvent>)]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:682:9+185
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_reactivate_stake_events($Dereference($t11), $Dereference($t18)));

    // write_back[stake::StakePool@]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:682:9+185
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:689:5+1
    assume {:print "$at(2,31778,31779)"} true;
L1:

    // assume Identical($t20, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:109:9+54
    assume {:print "$at(3,5018,5072)"} true;
    assume ($t20 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assert Not(Not(stake::$stake_pool_exists[@33]($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:106:9+43
    assume {:print "$at(3,4903,4946)"} true;
    assert {:msg "assert_failed(3,4903,4946): function does not abort under this condition"}
      !!$1_stake_$stake_pool_exists($1_stake_StakePool_$memory#33, $t6);

    // assert Eq<u64>(select coin::Coin.value(select stake::StakePool.active($t20)), Add(select coin::Coin.value(select stake::StakePool.active($t7)), $t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:113:9+76
    assume {:print "$at(3,5227,5303)"} true;
    assert {:msg "assert_failed(3,5227,5303): post-condition does not hold"}
      $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t20)), ($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t7)) + $t8));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:113:9+76
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:689:5+1
    assume {:print "$at(2,31778,31779)"} true;
L2:

    // assert Not(stake::$stake_pool_exists[@33]($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:104:5+540
    assume {:print "$at(3,4769,5309)"} true;
    assert {:msg "assert_failed(3,4769,5309): abort not covered by any of the `aborts_if` clauses"}
      !$1_stake_$stake_pool_exists($1_stake_StakePool_$memory#33, $t6);

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:104:5+540
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun stake::remove_validators [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
procedure {:timeLimit 40} $1_stake_remove_validators$verify(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t4: int;
    var $t5: int;
    var $t6: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t7: int;
    var $t8: $1_option_Option'u64';
    var $t9: $1_stake_ValidatorInfo;
    var $t10: $Mutation ($1_stake_ValidatorSet);
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation ($1_stake_ValidatorSet);
    var $t15: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t16: $Mutation (Vec ($1_stake_ValidatorInfo));
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: Vec ($1_stake_ValidatorInfo);
    var $t22: $1_option_Option'u64';
    var $t23: bool;
    var $t24: int;
    var $t25: $1_stake_ValidatorInfo;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$1_stake_ValidatorInfo': $1_stake_ValidatorInfo;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_stake_ValidatorInfo'': Vec ($1_stake_ValidatorInfo);
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume {:print "$at(2,19434,19435)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume $IsValid'vec'address''($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<transaction_fee::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_transaction_fee_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_transaction_fee_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_transaction_fee_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<state_storage::GasParameter>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_state_storage_GasParameter_$memory, $a_0)}(var $rsc := $ResourceValue($1_state_storage_GasParameter_$memory, $a_0);
    ($IsValid'$1_state_storage_GasParameter'($rsc))));

    // assume forall $rsc: ResourceDomain<state_storage::StateStorageUsage>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_state_storage_StateStorageUsage_$memory, $a_0)}(var $rsc := $ResourceValue($1_state_storage_StateStorageUsage_$memory, $a_0);
    ($IsValid'$1_state_storage_StateStorageUsage'($rsc))));

    // assume forall $rsc: ResourceDomain<storage_gas::StorageGas>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_storage_gas_StorageGas_$memory, $a_0)}(var $rsc := $ResourceValue($1_storage_gas_StorageGas_$memory, $a_0);
    ($IsValid'$1_storage_gas_StorageGas'($rsc))));

    // assume forall $rsc: ResourceDomain<storage_gas::StorageGasConfig>(): And(WellFormed($rsc), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Gt(select storage_gas::UsageGasConfig.target_usage(select storage_gas::StorageGasConfig.item_config($rsc)), 0), Le(select storage_gas::UsageGasConfig.target_usage(select storage_gas::StorageGasConfig.item_config($rsc)), Div(18446744073709551615, 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Gt(select storage_gas::UsageGasConfig.target_usage(select storage_gas::StorageGasConfig.byte_config($rsc)), 0)), Le(select storage_gas::UsageGasConfig.target_usage(select storage_gas::StorageGasConfig.byte_config($rsc)), Div(18446744073709551615, 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_storage_gas_StorageGasConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_storage_gas_StorageGasConfig_$memory, $a_0);
    (($IsValid'$1_storage_gas_StorageGasConfig'($rsc) && (((((((((((((((((((((((((((($target_usage#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)) > 0) && ($target_usage#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)) <= (18446744073709551615 div 10000))) && ($min_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_1 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_2: int :: $InRange($range_1, $i_2) ==> (var i := $i_2;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_3 := $points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_4: int :: InRangeVec($range_3, $i_4) ==> (var $elem := ReadVec($range_3, $i_4);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($min_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_5 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_6: int :: $InRange($range_5, $i_6) ==> (var i := $i_6;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_7 := $points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_8: int :: InRangeVec($range_7, $i_8) ==> (var $elem := ReadVec($range_7, $i_8);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($min_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_9 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_10: int :: $InRange($range_9, $i_10) ==> (var i := $i_10;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_11 := $points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_12: int :: InRangeVec($range_11, $i_12) ==> (var $elem := ReadVec($range_11, $i_12);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($target_usage#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)) > 0)) && ($target_usage#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)) <= (18446744073709551615 div 10000))) && ($min_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_13 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_14: int :: $InRange($range_13, $i_14) ==> (var i := $i_14;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_15 := $points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_16: int :: InRangeVec($range_15, $i_16) ==> (var $elem := ReadVec($range_15, $i_16);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($min_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_17 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_18: int :: $InRange($range_17, $i_18) ==> (var i := $i_18;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_19 := $points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_20: int :: InRangeVec($range_19, $i_20) ==> (var $elem := ReadVec($range_19, $i_20);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($min_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_21 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_22: int :: $InRange($range_21, $i_22) ==> (var i := $i_22;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_23 := $points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_24: int :: InRangeVec($range_23, $i_24) ==> (var $elem := ReadVec($range_23, $i_24);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000)))))))))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<block::BlockResource>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_block_BlockResource_$memory, $a_0)}(var $rsc := $ResourceValue($1_block_BlockResource_$memory, $a_0);
    ($IsValid'$1_block_BlockResource'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<transaction_fee::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/transaction_fee.spec.move:7:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_transaction_fee_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<state_storage::StateStorageUsage>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/state_storage.spec.move:7:9+101
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_state_storage_StateStorageUsage_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<state_storage::GasParameter>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/state_storage.spec.move:8:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_state_storage_GasParameter_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<storage_gas::StorageGasConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.spec.move:34:9+100
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_storage_gas_StorageGasConfig_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<storage_gas::StorageGas>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.spec.move:35:9+94
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_storage_gas_StorageGas_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<reconfiguration::Configuration>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:7:9+97
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_reconfiguration_Configuration_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume Implies(chain_status::$is_operating(), exists<block::BlockResource>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1363
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/block.spec.move:5:9+97
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_block_BlockResource_$memory, 1));

    // assume chain_status::$is_operating() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:230:9+38
    assume {:print "$at(3,10026,10064)"} true;
    assume $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory);

    // trace_local[aptos_framework]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume {:print "$at(2,19434,19435)"} true;
    assume {:print "$track_local(38,41,0):", $t0} $t0 == $t0;

    // trace_local[validators]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:430:5+1
    assume {:print "$track_local(38,41,1):", $t1} $t1 == $t1;

    // opaque begin: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
    assume {:print "$at(2,19574,19631)"} true;

    // assume Identical($t11, Neq<address>(signer::$address_of($t0), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
    assume ($t11 == !$IsEqual'address'($1_signer_$address_of($t0), 1));

    // if ($t11) goto L10 else goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
    if ($t11) { goto L10; } else { goto L9; }

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
L10:

    // assume And(Neq<address>(signer::$address_of($t0), 1), Eq(5, $t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
    assume {:print "$at(2,19574,19631)"} true;
    assume (!$IsEqual'address'($1_signer_$address_of($t0), 1) && $IsEqual'num'(5, $t12));

    // trace_abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
    assume {:print "$at(2,19574,19631)"} true;
    assume {:print "$track_abort(38,41):", $t12} $t12 == $t12;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
    goto L8;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
L9:

    // opaque end: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:434:9+57
    assume {:print "$at(2,19574,19631)"} true;

    // $t13 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:436:61+16
    assume {:print "$at(2,19694,19710)"} true;
    $t13 := 1;
    assume $IsValid'address'($t13);

    // $t14 := borrow_global<stake::ValidatorSet>($t13) on_abort goto L8 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:436:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $Mutation($Global($t13), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t13));
    }
    if ($abort_flag) {
        assume {:print "$at(2,19662,19679)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,41):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[validator_set]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:436:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t14);
    assume {:print "$track_local(38,41,10):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t15 := borrow_field<stake::ValidatorSet>.active_validators($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:437:33+36
    assume {:print "$at(2,19745,19781)"} true;
    $t15 := $ChildMutation($t14, 1, $active_validators#$1_stake_ValidatorSet($Dereference($t14)));

    // trace_local[active_validators]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:437:13+17
    $temp_0'vec'$1_stake_ValidatorInfo'' := $Dereference($t15);
    assume {:print "$track_local(38,41,3):", $temp_0'vec'$1_stake_ValidatorInfo''} $temp_0'vec'$1_stake_ValidatorInfo'' == $temp_0'vec'$1_stake_ValidatorInfo'';

    // $t16 := borrow_field<stake::ValidatorSet>.pending_inactive($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:438:32+35
    assume {:print "$at(2,19814,19849)"} true;
    $t16 := $ChildMutation($t14, 2, $pending_inactive#$1_stake_ValidatorSet($Dereference($t14)));

    // trace_local[pending_inactive]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:438:13+16
    $temp_0'vec'$1_stake_ValidatorInfo'' := $Dereference($t16);
    assume {:print "$track_local(38,41,6):", $temp_0'vec'$1_stake_ValidatorInfo''} $temp_0'vec'$1_stake_ValidatorInfo'' == $temp_0'vec'$1_stake_ValidatorInfo'';

    // $t17 := vector::length<address>($t1) on_abort goto L8 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:439:19+26
    assume {:print "$at(2,19869,19895)"} true;
    call $t17 := $1_vector_length'address'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,19869,19895)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,41):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[len]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:439:13+3
    assume {:print "$track_local(38,41,5):", $t17} $t17 == $t17;

    // $t18 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:440:17+1
    assume {:print "$at(2,19913,19914)"} true;
    $t18 := 0;
    assume $IsValid'u64'($t18);

    // trace_local[i]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:440:13+1
    assume {:print "$track_local(38,41,4):", $t18} $t18 == $t18;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:443:13+332
    assume {:print "$at(2,20002,20334)"} true;
L5:

    // assert stake::spec_validators_are_initialized($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:444:17+61
    assume {:print "$at(2,20025,20086)"} true;
    assert {:msg "assert_failed(2,20025,20086): base case of the loop invariant does not hold"}
      $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $Dereference($t15));

    // assert stake::spec_validator_indices_are_valid($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:445:17+62
    assume {:print "$at(2,20103,20165)"} true;
    assert {:msg "assert_failed(2,20103,20165): base case of the loop invariant does not hold"}
      $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $Dereference($t15));

    // assert stake::spec_validators_are_initialized($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:446:17+60
    assume {:print "$at(2,20182,20242)"} true;
    assert {:msg "assert_failed(2,20182,20242): base case of the loop invariant does not hold"}
      $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $Dereference($t16));

    // assert stake::spec_validator_indices_are_valid($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume {:print "$at(2,20259,20320)"} true;
    assert {:msg "assert_failed(2,20259,20320): base case of the loop invariant does not hold"}
      $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $Dereference($t16));

    // $t4 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t4;

    // assume WellFormed($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'u64'($t4);

    // $t19 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t19;

    // assume WellFormed($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'bool'($t19);

    // $t20 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t20;

    // assume WellFormed($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'address'($t20);

    // $t21 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t21;

    // assume WellFormed($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'vec'$1_stake_ValidatorInfo''($t21);

    // $t22 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t22;

    // assume And(WellFormed($t22), Le(Len<u64>(select option::Option.vec($t22)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume ($IsValid'$1_option_Option'u64''($t22) && (LenVec($vec#$1_option_Option'u64'($t22)) <= 1));

    // $t23 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t23;

    // assume WellFormed($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'bool'($t23);

    // $t24 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t24;

    // assume WellFormed($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'u64'($t24);

    // $t25 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t25;

    // assume WellFormed($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'$1_stake_ValidatorInfo'($t25);

    // $t26 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t26;

    // assume WellFormed($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'u64'($t26);

    // $t27 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $t27;

    // assume WellFormed($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'u64'($t27);

    // $t15 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $temp_0'vec'$1_stake_ValidatorInfo'';
    $t15 := $UpdateMutation($t15, $temp_0'vec'$1_stake_ValidatorInfo'');

    // assume WellFormed($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'vec'$1_stake_ValidatorInfo''($Dereference($t15));

    // $t16 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    havoc $temp_0'vec'$1_stake_ValidatorInfo'';
    $t16 := $UpdateMutation($t16, $temp_0'vec'$1_stake_ValidatorInfo'');

    // assume WellFormed($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume $IsValid'vec'$1_stake_ValidatorInfo''($Dereference($t16));

    // trace_local[i]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(38,41,4):", $t4} $t4 == $t4;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume {:print "$info(): loop invariant holds at current state"} true;
    assume !$abort_flag;

    // assume stake::spec_validators_are_initialized($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:444:17+61
    assume {:print "$at(2,20025,20086)"} true;
    assume $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $Dereference($t15));

    // assume stake::spec_validator_indices_are_valid($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:445:17+62
    assume {:print "$at(2,20103,20165)"} true;
    assume $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $Dereference($t15));

    // assume stake::spec_validators_are_initialized($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:446:17+60
    assume {:print "$at(2,20182,20242)"} true;
    assume $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $Dereference($t16));

    // assume stake::spec_validator_indices_are_valid($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume {:print "$at(2,20259,20320)"} true;
    assume $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $Dereference($t16));

    // $t19 := <($t4, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:449:15+1
    assume {:print "$at(2,20350,20351)"} true;
    call $t19 := $Lt($t4, $t17);

    // if ($t19) goto L13 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:442:9+809
    assume {:print "$at(2,19981,20790)"} true;
    if ($t19) { goto L13; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:442:9+809
L1:

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:451:45+10
    assume {:print "$at(2,20413,20423)"} true;
L2:

    // $t20 := vector::borrow<address>($t1, $t4) on_abort goto L8 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:451:30+29
    assume {:print "$at(2,20398,20427)"} true;
    call $t20 := $1_vector_borrow'address'($t1, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,20398,20427)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,41):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[validator]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:451:17+9
    assume {:print "$track_local(38,41,7):", $t20} $t20 == $t20;

    // $t21 := read_ref($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:452:49+30
    assume {:print "$at(2,20477,20507)"} true;
    $t21 := $Dereference($t15);

    // $t22 := opaque begin: stake::find_validator($t21, $t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:452:35+44

    // assume And(WellFormed($t22), Le(Len<u64>(select option::Option.vec($t22)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:452:35+44
    assume ($IsValid'$1_option_Option'u64''($t22) && (LenVec($vec#$1_option_Option'u64'($t22)) <= 1));

    // assume Implies(option::$is_none<u64>($t22), forall i: Range(0, Len<stake::ValidatorInfo>($t21)): Neq<address>(select stake::ValidatorInfo.addr(Index($t21, i)), $t20)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:452:35+44
    assume ($1_option_$is_none'u64'($t22) ==> (var $range_0 := $Range(0, LenVec($t21)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t21, i)), $t20))))));

    // assume Implies(option::$is_some<u64>($t22), Eq<address>(select stake::ValidatorInfo.addr(Index($t21, option::$borrow<u64>($t22))), $t20)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:452:35+44
    assume ($1_option_$is_some'u64'($t22) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t21, $1_option_$borrow'u64'($t22))), $t20));

    // assume Implies(option::$is_some<u64>($t22), stake::spec_contains($t21, $t20)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:452:35+44
    assume ($1_option_$is_some'u64'($t22) ==> $1_stake_spec_contains($t21, $t20));

    // $t22 := opaque end: stake::find_validator($t21, $t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:452:35+44

    // trace_local[validator_index]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:452:17+15
    assume {:print "$track_local(38,41,8):", $t22} $t22 == $t22;

    // $t23 := opaque begin: option::is_some<u64>($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:453:17+33
    assume {:print "$at(2,20525,20558)"} true;

    // assume WellFormed($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:453:17+33
    assume $IsValid'bool'($t23);

    // assume Eq<bool>($t23, option::spec_is_some<u64>($t22)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:453:17+33
    assume $IsEqual'bool'($t23, $1_option_spec_is_some'u64'($t22));

    // $t23 := opaque end: option::is_some<u64>($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:453:17+33

    // if ($t23) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:453:13+235
    if ($t23) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:58+17
    assume {:print "$at(2,20619,20636)"} true;
L4:

    // $t24 := opaque begin: option::borrow<u64>($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
    assume {:print "$at(2,20639,20671)"} true;

    // assume Identical($t28, option::spec_is_none<u64>($t22)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
    assume ($t28 == $1_option_spec_is_none'u64'($t22));

    // if ($t28) goto L14 else goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
    if ($t28) { goto L14; } else { goto L11; }

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
L12:

    // assume And(option::spec_is_none<u64>($t22), Eq(262145, $t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
    assume {:print "$at(2,20639,20671)"} true;
    assume ($1_option_spec_is_none'u64'($t22) && $IsEqual'num'(262145, $t12));

    // trace_abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
    assume {:print "$at(2,20639,20671)"} true;
    assume {:print "$track_abort(38,41):", $t12} $t12 == $t12;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
    goto L8;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
L11:

    // assume WellFormed($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
    assume {:print "$at(2,20639,20671)"} true;
    assume $IsValid'u64'($t24);

    // assume Eq<u64>($t24, option::spec_borrow<u64>($t22)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32
    assume $IsEqual'u64'($t24, $1_option_spec_borrow'u64'($t22));

    // $t24 := opaque end: option::borrow<u64>($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:78+32

    // $t25 := vector::swap_remove<stake::ValidatorInfo>($t15, $t24) on_abort goto L8 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:38+73
    call $t25,$t15 := $1_vector_swap_remove'$1_stake_ValidatorInfo'($t15, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,20599,20672)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,41):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[validator_info]($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:454:21+14
    assume {:print "$track_local(38,41,9):", $t25} $t25 == $t25;

    // vector::push_back<stake::ValidatorInfo>($t16, $t25) on_abort goto L8 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:455:17+51
    assume {:print "$at(2,20690,20741)"} true;
    call $t16 := $1_vector_push_back'$1_stake_ValidatorInfo'($t16, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,20690,20741)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,41):", $t12} $t12 == $t12;
        goto L8;
    }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:457:17+1
    assume {:print "$at(2,20774,20775)"} true;
L3:

    // $t26 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:457:21+1
    assume {:print "$at(2,20778,20779)"} true;
    $t26 := 1;
    assume $IsValid'u64'($t26);

    // $t27 := +($t4, $t26) on_abort goto L8 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:457:19+1
    call $t27 := $AddU64($t4, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,20776,20777)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,41):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[i]($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:457:13+1
    assume {:print "$track_local(38,41,4):", $t27} $t27 == $t27;

    // goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:457:22+1
    goto L6;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:458:10+1
    assume {:print "$at(2,20790,20791)"} true;
L0:

    // write_back[Reference($t14).pending_inactive (vector<stake::ValidatorInfo>)]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:458:10+1
    assume {:print "$at(2,20790,20791)"} true;
    $t14 := $UpdateMutation($t14, $Update'$1_stake_ValidatorSet'_pending_inactive($Dereference($t14), $Dereference($t16)));

    // destroy($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:458:10+1

    // write_back[Reference($t14).active_validators (vector<stake::ValidatorInfo>)]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:458:10+1
    $t14 := $UpdateMutation($t14, $Update'$1_stake_ValidatorSet'_active_validators($Dereference($t14), $Dereference($t15)));

    // write_back[stake::ValidatorSet@]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:458:10+1
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t14),
        $Dereference($t14));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // destroy($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:458:10+1
    assume {:print "$at(2,20790,20791)"} true;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:458:10+1
    goto L7;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:458:10+1
    // Loop invariant checking block for the loop started with header: L5
L6:

    // assert stake::spec_validators_are_initialized($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:444:17+61
    assume {:print "$at(2,20025,20086)"} true;
    assert {:msg "assert_failed(2,20025,20086): induction case of the loop invariant does not hold"}
      $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $Dereference($t15));

    // assert stake::spec_validator_indices_are_valid($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:445:17+62
    assume {:print "$at(2,20103,20165)"} true;
    assert {:msg "assert_failed(2,20103,20165): induction case of the loop invariant does not hold"}
      $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $Dereference($t15));

    // assert stake::spec_validators_are_initialized($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:446:17+60
    assume {:print "$at(2,20182,20242)"} true;
    assert {:msg "assert_failed(2,20182,20242): induction case of the loop invariant does not hold"}
      $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $Dereference($t16));

    // assert stake::spec_validator_indices_are_valid($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume {:print "$at(2,20259,20320)"} true;
    assert {:msg "assert_failed(2,20259,20320): induction case of the loop invariant does not hold"}
      $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $Dereference($t16));

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:447:17+61
    assume false;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:459:5+1
    assume {:print "$at(2,20796,20797)"} true;
L7:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:459:5+1
    assume {:print "$at(2,20796,20797)"} true;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:459:5+1
L8:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:459:5+1
    assume {:print "$at(2,20796,20797)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

    // label L13 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L13:

    // destroy($t14) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L1 at <internal>:1:1+10
    goto L1;

    // label L14 at <internal>:1:1+10
L14:

    // destroy($t15) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // destroy($t16) at <internal>:1:1+10

    // goto L12 at <internal>:1:1+10
    goto L12;

}

// fun stake::rotate_consensus_key [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1402
procedure {:timeLimit 40} $1_stake_rotate_consensus_key$verify(_$t0: $signer, _$t1: int, _$t2: Vec (int), _$t3: Vec (int)) returns ()
{
    // declare local variables
    var $t4: $1_bls12381_ProofOfPossession;
    var $t5: Vec (int);
    var $t6: $1_option_Option'$1_bls12381_PublicKeyWithPoP';
    var $t7: Vec (int);
    var $t8: $Mutation ($1_stake_StakePool);
    var $t9: $Mutation ($1_stake_ValidatorConfig);
    var $t10: $1_stake_StakePool;
    var $t11: int;
    var $t12: $Mutation ($1_stake_StakePool);
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t21: $Mutation ($1_stake_ValidatorConfig);
    var $t22: Vec (int);
    var $t23: $1_bls12381_ProofOfPossession;
    var $t24: $Mutation ($1_option_Option'$1_bls12381_PublicKeyWithPoP');
    var $t25: $1_option_Option'$1_bls12381_PublicKeyWithPoP';
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: $Mutation (Vec (int));
    var $t30: $Mutation ($1_event_EventHandle'$1_stake_RotateConsensusKeyEvent');
    var $t31: $1_stake_RotateConsensusKeyEvent;
    var $t32: $1_stake_ValidatorConfig;
    var $t0: $signer;
    var $t1: int;
    var $t2: Vec (int);
    var $t3: Vec (int);
    var $1_stake_ValidatorConfig_$modifies: [int]bool;
    var $temp_0'$1_option_Option'$1_bls12381_PublicKeyWithPoP'': $1_option_Option'$1_bls12381_PublicKeyWithPoP';
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume {:print "$at(2,31869,31870)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume $IsValid'vec'u8''($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume $IsValid'vec'u8''($t3);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1402
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Identical($t10, global<stake::StakePool>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:122:9+53
    assume {:print "$at(3,5499,5552)"} true;
    assume ($t10 == $ResourceValue($1_stake_StakePool_$memory, $t1));

    // assume CanModify<stake::ValidatorConfig>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:124:9+47
    assume {:print "$at(3,5634,5681)"} true;
    assume $1_stake_ValidatorConfig_$modifies[$t1];

    // trace_local[operator]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume {:print "$at(2,31869,31870)"} true;
    assume {:print "$track_local(38,42,0):", $t0} $t0 == $t0;

    // trace_local[pool_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume {:print "$track_local(38,42,1):", $t1} $t1 == $t1;

    // trace_local[new_consensus_pubkey]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume {:print "$track_local(38,42,2):", $t2} $t2 == $t2;

    // trace_local[proof_of_possession]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:692:5+1
    assume {:print "$track_local(38,42,3):", $t3} $t3 == $t3;

    // stake::assert_stake_pool_exists($t1) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:698:9+38
    assume {:print "$at(2,32101,32139)"} true;
    call $1_stake_assert_stake_pool_exists($t1);
    if ($abort_flag) {
        assume {:print "$at(2,32101,32139)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // $t12 := borrow_global<stake::StakePool>($t1) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:699:26+17
    assume {:print "$at(2,32166,32183)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,32166,32183)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[stake_pool]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:699:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t12);
    assume {:print "$track_local(38,42,8):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t13 := signer::address_of($t0) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:17+28
    assume {:print "$at(2,32226,32254)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,32226,32254)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // $t14 := get_field<stake::StakePool>.operator_address($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:49+27
    $t14 := $operator_address#$1_stake_StakePool($Dereference($t12));

    // $t15 := ==($t13, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:46+2
    $t15 := $IsEqual'address'($t13, $t14);

    // if ($t15) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:9+107
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:9+107
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:9+107
    assume {:print "$at(2,32218,32325)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:9+107
L0:

    // destroy($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:9+107
    assume {:print "$at(2,32218,32325)"} true;

    // $t16 := 9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:101+13
    $t16 := 9;
    assume $IsValid'u64'($t16);

    // $t17 := error::unauthenticated($t16) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:78+37
    call $t17 := $1_error_unauthenticated($t16);
    if ($abort_flag) {
        assume {:print "$at(2,32287,32324)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_abort($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:9+107
    assume {:print "$at(2,32218,32325)"} true;
    assume {:print "$track_abort(38,42):", $t17} $t17 == $t17;

    // $t11 := move($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:9+107
    $t11 := $t17;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:700:9+107
    goto L10;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:41+12
    assume {:print "$at(2,32368,32380)"} true;
L2:

    // $t18 := exists<stake::ValidatorConfig>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:17+6
    assume {:print "$at(2,32344,32350)"} true;
    $t18 := $ResourceExists($1_stake_ValidatorConfig_$memory, $t1);

    // if ($t18) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:9+83
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:9+83
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:9+83
    assume {:print "$at(2,32336,32419)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:9+83
L3:

    // destroy($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:9+83
    assume {:print "$at(2,32336,32419)"} true;

    // $t19 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:73+17
    $t19 := 1;
    assume $IsValid'u64'($t19);

    // $t20 := error::not_found($t19) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:56+35
    call $t20 := $1_error_not_found($t19);
    if ($abort_flag) {
        assume {:print "$at(2,32383,32418)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_abort($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:9+83
    assume {:print "$at(2,32336,32419)"} true;
    assume {:print "$track_abort(38,42):", $t20} $t20 == $t20;

    // $t11 := move($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:9+83
    $t11 := $t20;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:702:9+83
    goto L10;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:703:65+12
    assume {:print "$at(2,32485,32497)"} true;
L5:

    // assert CanModify<stake::ValidatorConfig>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:703:30+17
    assume {:print "$at(2,32450,32467)"} true;
    assert {:msg "assert_failed(2,32450,32467): caller does not have permission to modify `stake::ValidatorConfig` at given address"}
      $1_stake_ValidatorConfig_$modifies[$t1];

    // $t21 := borrow_global<stake::ValidatorConfig>($t1) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:703:30+17
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t21 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_ValidatorConfig_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,32450,32467)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[validator_info]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:703:13+14
    $temp_0'$1_stake_ValidatorConfig' := $Dereference($t21);
    assume {:print "$track_local(38,42,9):", $temp_0'$1_stake_ValidatorConfig'} $temp_0'$1_stake_ValidatorConfig' == $temp_0'$1_stake_ValidatorConfig';

    // $t22 := get_field<stake::ValidatorConfig>.consensus_pubkey($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:704:36+31
    assume {:print "$at(2,32535,32566)"} true;
    $t22 := $consensus_pubkey#$1_stake_ValidatorConfig($Dereference($t21));

    // trace_local[old_consensus_pubkey]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:704:13+20
    assume {:print "$track_local(38,42,7):", $t22} $t22 == $t22;

    // $t23 := bls12381::proof_of_possession_from_bytes($t3) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:708:14+51
    assume {:print "$at(2,32787,32838)"} true;
    call $t23 := $1_bls12381_proof_of_possession_from_bytes($t3);
    if ($abort_flag) {
        assume {:print "$at(2,32787,32838)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // $t6 := bls12381::public_key_from_bytes_with_pop($t2, $t23) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:706:36+150
    assume {:print "$at(2,32698,32848)"} true;
    call $t6 := $1_bls12381_public_key_from_bytes_with_pop($t2, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,32698,32848)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // $t24 := borrow_local($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:706:31+155
    $t24 := $Mutation($Local(6), EmptyVec(), $t6);

    // $t25 := read_ref($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:33+15
    assume {:print "$at(2,32882,32897)"} true;
    $t25 := $Dereference($t24);

    // assert Le(Len<bls12381::PublicKeyWithPoP>(select option::Option.vec($t24)), 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(13,530,554)"} true;
    assert {:msg "assert_failed(13,530,554): data invariant does not hold"}
      (LenVec($vec#$1_option_Option'$1_bls12381_PublicKeyWithPoP'($Dereference($t24))) <= 1);

    // trace_local[tmp#$6]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:33+15
    assume {:print "$at(2,32882,32897)"} true;
    assume {:print "$track_local(38,42,6):", $t6} $t6 == $t6;

    // $t26 := opaque begin: option::is_some<bls12381::PublicKeyWithPoP>($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:17+32

    // assume WellFormed($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:17+32
    assume $IsValid'bool'($t26);

    // assume Eq<bool>($t26, option::spec_is_some<bls12381::PublicKeyWithPoP>($t25)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:17+32
    assume $IsEqual'bool'($t26, $1_option_spec_is_some'$1_bls12381_PublicKeyWithPoP'($t25));

    // $t26 := opaque end: option::is_some<bls12381::PublicKeyWithPoP>($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:17+32

    // if ($t26) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87
    if ($t26) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87
L7:

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87
    assume {:print "$at(2,32858,32945)"} true;
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87
L6:

    // destroy($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87
    assume {:print "$at(2,32858,32945)"} true;

    // destroy($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87

    // $t27 := 11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:75+19
    $t27 := 11;
    assume $IsValid'u64'($t27);

    // $t28 := error::invalid_argument($t27) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:51+44
    call $t28 := $1_error_invalid_argument($t27);
    if ($abort_flag) {
        assume {:print "$at(2,32900,32944)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,42):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_abort($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87
    assume {:print "$at(2,32858,32945)"} true;
    assume {:print "$track_abort(38,42):", $t28} $t28 == $t28;

    // $t11 := move($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87
    $t11 := $t28;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:710:9+87
    goto L10;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:711:43+20
    assume {:print "$at(2,32989,33009)"} true;
L8:

    // $t29 := borrow_field<stake::ValidatorConfig>.consensus_pubkey($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:711:9+31
    assume {:print "$at(2,32955,32986)"} true;
    $t29 := $ChildMutation($t21, 0, $consensus_pubkey#$1_stake_ValidatorConfig($Dereference($t21)));

    // write_ref($t29, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:711:9+54
    $t29 := $UpdateMutation($t29, $t2);

    // write_back[Reference($t21).consensus_pubkey (vector<u8>)]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:711:9+54
    $t21 := $UpdateMutation($t21, $Update'$1_stake_ValidatorConfig'_consensus_pubkey($Dereference($t21), $Dereference($t29)));

    // write_back[stake::ValidatorConfig@]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:711:9+54
    $1_stake_ValidatorConfig_$memory := $ResourceUpdate($1_stake_ValidatorConfig_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // $t30 := borrow_field<stake::StakePool>.rotate_consensus_key_events($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:714:13+43
    assume {:print "$at(2,33051,33094)"} true;
    $t30 := $ChildMutation($t12, 11, $rotate_consensus_key_events#$1_stake_StakePool($Dereference($t12)));

    // $t31 := pack stake::RotateConsensusKeyEvent($t1, $t22, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:715:13+145
    assume {:print "$at(2,33108,33253)"} true;
    $t31 := $1_stake_RotateConsensusKeyEvent($t1, $t22, $t2);

    // opaque begin: event::emit_event<stake::RotateConsensusKeyEvent>($t30, $t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:713:9+244
    assume {:print "$at(2,33020,33264)"} true;

    // opaque end: event::emit_event<stake::RotateConsensusKeyEvent>($t30, $t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:713:9+244

    // write_back[Reference($t12).rotate_consensus_key_events (event::EventHandle<stake::RotateConsensusKeyEvent>)]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:713:9+244
    $t12 := $UpdateMutation($t12, $Update'$1_stake_StakePool'_rotate_consensus_key_events($Dereference($t12), $Dereference($t30)));

    // write_back[stake::StakePool@]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:713:9+244
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:721:5+1
    assume {:print "$at(2,33270,33271)"} true;
L9:

    // assume Identical($t32, global<stake::ValidatorConfig>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:123:9+64
    assume {:print "$at(3,5561,5625)"} true;
    assume ($t32 == $ResourceValue($1_stake_ValidatorConfig_$memory, $t1));

    // assert Eq<vector<u8>>(select stake::ValidatorConfig.consensus_pubkey($t32), $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:126:9+64
    assume {:print "$at(3,5691,5755)"} true;
    assert {:msg "assert_failed(3,5691,5755): post-condition does not hold"}
      $IsEqual'vec'u8''($consensus_pubkey#$1_stake_ValidatorConfig($t32), $t2);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:126:9+64
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:721:5+1
    assume {:print "$at(2,33270,33271)"} true;
L10:

    // abort($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:721:5+1
    assume {:print "$at(2,33270,33271)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun stake::set_delegated_voter [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+358
procedure {:inline 1} $1_stake_set_delegated_voter(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t6: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume {:print "$at(2,26864,26865)"} true;
    assume {:print "$track_local(38,43,0):", $t0} $t0 == $t0;

    // trace_local[new_voter]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume {:print "$track_local(38,43,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:594:29+25
    assume {:print "$at(2,27003,27028)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,27003,27028)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,43):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:594:13+13
    assume {:print "$track_local(38,43,2):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:595:9+38
    assume {:print "$at(2,27038,27076)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(2,27038,27076)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,43):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_global<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:596:29+13
    assume {:print "$at(2,27106,27119)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,27106,27119)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,43):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:130:9+42
    assume {:print "$at(3,5860,5902)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t5));

    // stake::set_delegated_voter_with_cap($t5, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:597:9+54
    assume {:print "$at(2,27161,27215)"} true;
    call $1_stake_set_delegated_voter_with_cap($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,27161,27215)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,43):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:598:5+1
    assume {:print "$at(2,27221,27222)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:598:5+1
    assume {:print "$at(2,27221,27222)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:598:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:598:5+1
    assume {:print "$at(2,27221,27222)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::set_delegated_voter [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+358
procedure {:timeLimit 40} $1_stake_set_delegated_voter$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t6: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume {:print "$at(2,26864,26865)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+358
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume {:print "$track_local(38,43,0):", $t0} $t0 == $t0;

    // trace_local[new_voter]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:593:5+1
    assume {:print "$track_local(38,43,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:594:29+25
    assume {:print "$at(2,27003,27028)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,27003,27028)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,43):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:594:13+13
    assume {:print "$track_local(38,43,2):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:595:9+38
    assume {:print "$at(2,27038,27076)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(2,27038,27076)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,43):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_global<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:596:29+13
    assume {:print "$at(2,27106,27119)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,27106,27119)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,43):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:130:9+42
    assume {:print "$at(3,5860,5902)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t5));

    // stake::set_delegated_voter_with_cap($t5, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:597:9+54
    assume {:print "$at(2,27161,27215)"} true;
    call $1_stake_set_delegated_voter_with_cap($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,27161,27215)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,43):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:598:5+1
    assume {:print "$at(2,27221,27222)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:598:5+1
    assume {:print "$at(2,27221,27222)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:598:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:598:5+1
    assume {:print "$at(2,27221,27222)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::set_delegated_voter_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+331
procedure {:inline 1} $1_stake_set_delegated_voter_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_stake_StakePool);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_stake_StakePool);
    var $t8: $Mutation (int);
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:130:9+42
    assume {:print "$at(3,5860,5902)"} true;
    assume ($t4 == $pool_address#$1_stake_OwnerCapability($t0));

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume {:print "$at(2,27301,27302)"} true;
    assume {:print "$track_local(38,44,0):", $t0} $t0 == $t0;

    // trace_local[new_voter]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume {:print "$track_local(38,44,1):", $t1} $t1 == $t1;

    // $t5 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:602:28+22
    assume {:print "$at(2,27438,27460)"} true;
    $t5 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:602:13+12
    assume {:print "$track_local(38,44,2):", $t5} $t5 == $t5;

    // stake::assert_stake_pool_exists($t5) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:603:9+38
    assume {:print "$at(2,27470,27508)"} true;
    call $1_stake_assert_stake_pool_exists($t5);
    if ($abort_flag) {
        assume {:print "$at(2,27470,27508)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,44):", $t6} $t6 == $t6;
        goto L2;
    }

    // $t7 := borrow_global<stake::StakePool>($t5) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:604:26+17
    assume {:print "$at(2,27535,27552)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(2,27535,27552)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,44):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[stake_pool]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:604:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t7);
    assume {:print "$track_local(38,44,3):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t8 := borrow_field<stake::StakePool>.delegated_voter($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+26
    assume {:print "$at(2,27587,27613)"} true;
    $t8 := $ChildMutation($t7, 6, $delegated_voter#$1_stake_StakePool($Dereference($t7)));

    // write_ref($t8, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $t8 := $UpdateMutation($t8, $t1);

    // write_back[Reference($t7).delegated_voter (address)]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $t7 := $UpdateMutation($t7, $Update'$1_stake_StakePool'_delegated_voter($Dereference($t7), $Dereference($t8)));

    // write_back[stake::StakePool@]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(2,27631,27632)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(2,27631,27632)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(2,27631,27632)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::set_delegated_voter_with_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+331
procedure {:timeLimit 40} $1_stake_set_delegated_voter_with_cap$verify(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_stake_StakePool);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_stake_StakePool);
    var $t8: $Mutation (int);
    var $t9: $1_stake_StakePool;
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume {:print "$at(2,27301,27302)"} true;
    assume $IsValid'$1_stake_OwnerCapability'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+331
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Identical($t4, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:130:9+42
    assume {:print "$at(3,5860,5902)"} true;
    assume ($t4 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume CanModify<stake::StakePool>($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:132:9+41
    assume {:print "$at(3,5974,6015)"} true;
    assume $1_stake_StakePool_$modifies[$t4];

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume {:print "$at(2,27301,27302)"} true;
    assume {:print "$track_local(38,44,0):", $t0} $t0 == $t0;

    // trace_local[new_voter]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume {:print "$track_local(38,44,1):", $t1} $t1 == $t1;

    // $t5 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:602:28+22
    assume {:print "$at(2,27438,27460)"} true;
    $t5 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:602:13+12
    assume {:print "$track_local(38,44,2):", $t5} $t5 == $t5;

    // stake::assert_stake_pool_exists($t5) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:603:9+38
    assume {:print "$at(2,27470,27508)"} true;
    call $1_stake_assert_stake_pool_exists($t5);
    if ($abort_flag) {
        assume {:print "$at(2,27470,27508)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,44):", $t6} $t6 == $t6;
        goto L2;
    }

    // assert CanModify<stake::StakePool>($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:604:26+17
    assume {:print "$at(2,27535,27552)"} true;
    assert {:msg "assert_failed(2,27535,27552): caller does not have permission to modify `stake::StakePool` at given address"}
      $1_stake_StakePool_$modifies[$t5];

    // $t7 := borrow_global<stake::StakePool>($t5) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:604:26+17
    if (!$ResourceExists($1_stake_StakePool_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(2,27535,27552)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,44):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[stake_pool]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:604:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t7);
    assume {:print "$track_local(38,44,3):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t8 := borrow_field<stake::StakePool>.delegated_voter($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+26
    assume {:print "$at(2,27587,27613)"} true;
    $t8 := $ChildMutation($t7, 6, $delegated_voter#$1_stake_StakePool($Dereference($t7)));

    // write_ref($t8, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $t8 := $UpdateMutation($t8, $t1);

    // write_back[Reference($t7).delegated_voter (address)]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $t7 := $UpdateMutation($t7, $Update'$1_stake_StakePool'_delegated_voter($Dereference($t7), $Dereference($t8)));

    // write_back[stake::StakePool@]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(2,27631,27632)"} true;
L1:

    // assume Identical($t9, global<stake::StakePool>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:131:9+54
    assume {:print "$at(3,5911,5965)"} true;
    assume ($t9 == $ResourceValue($1_stake_StakePool_$memory, $t4));

    // assert Eq<address>(select stake::StakePool.delegated_voter($t9), $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:133:9+48
    assume {:print "$at(3,6024,6072)"} true;
    assert {:msg "assert_failed(3,6024,6072): post-condition does not hold"}
      $IsEqual'address'($delegated_voter#$1_stake_StakePool($t9), $t1);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:133:9+48
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(2,27631,27632)"} true;
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(2,27631,27632)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::set_operator [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+350
procedure {:inline 1} $1_stake_set_operator(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t6: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume {:print "$at(2,25724,25725)"} true;
    assume {:print "$track_local(38,45,0):", $t0} $t0 == $t0;

    // trace_local[new_operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume {:print "$track_local(38,45,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:568:29+25
    assume {:print "$at(2,25859,25884)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,25859,25884)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,45):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:568:13+13
    assume {:print "$track_local(38,45,2):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:569:9+38
    assume {:print "$at(2,25894,25932)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(2,25894,25932)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,45):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_global<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:570:29+13
    assume {:print "$at(2,25962,25975)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,25962,25975)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,45):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:98:9+42
    assume {:print "$at(3,4541,4583)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t5));

    // stake::set_operator_with_cap($t5, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:571:9+50
    assume {:print "$at(2,26017,26067)"} true;
    call $1_stake_set_operator_with_cap($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,26017,26067)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,45):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:572:5+1
    assume {:print "$at(2,26073,26074)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:572:5+1
    assume {:print "$at(2,26073,26074)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:572:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:572:5+1
    assume {:print "$at(2,26073,26074)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::set_operator [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+350
procedure {:timeLimit 40} $1_stake_set_operator$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t6: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume {:print "$at(2,25724,25725)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+350
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume {:print "$track_local(38,45,0):", $t0} $t0 == $t0;

    // trace_local[new_operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:567:5+1
    assume {:print "$track_local(38,45,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:568:29+25
    assume {:print "$at(2,25859,25884)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,25859,25884)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,45):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:568:13+13
    assume {:print "$track_local(38,45,2):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:569:9+38
    assume {:print "$at(2,25894,25932)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(2,25894,25932)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,45):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_global<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:570:29+13
    assume {:print "$at(2,25962,25975)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,25962,25975)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,45):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:98:9+42
    assume {:print "$at(3,4541,4583)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t5));

    // stake::set_operator_with_cap($t5, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:571:9+50
    assume {:print "$at(2,26017,26067)"} true;
    call $1_stake_set_operator_with_cap($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,26017,26067)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(38,45):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:572:5+1
    assume {:print "$at(2,26073,26074)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:572:5+1
    assume {:print "$at(2,26073,26074)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:572:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:572:5+1
    assume {:print "$at(2,26073,26074)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::set_operator_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+611
procedure {:inline 1} $1_stake_set_operator_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_stake_StakePool);
    var $t9: int;
    var $t10: $Mutation (int);
    var $t11: $Mutation ($1_event_EventHandle'$1_stake_SetOperatorEvent');
    var $t12: $1_stake_SetOperatorEvent;
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t5, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:98:9+42
    assume {:print "$at(3,4541,4583)"} true;
    assume ($t5 == $pool_address#$1_stake_OwnerCapability($t0));

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume {:print "$at(2,26174,26175)"} true;
    assume {:print "$track_local(38,46,0):", $t0} $t0 == $t0;

    // trace_local[new_operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume {:print "$track_local(38,46,1):", $t1} $t1 == $t1;

    // $t6 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:576:28+22
    assume {:print "$at(2,26307,26329)"} true;
    $t6 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:576:13+12
    assume {:print "$track_local(38,46,3):", $t6} $t6 == $t6;

    // stake::assert_stake_pool_exists($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:577:9+38
    assume {:print "$at(2,26339,26377)"} true;
    call $1_stake_assert_stake_pool_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(2,26339,26377)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,46):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := borrow_global<stake::StakePool>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:578:26+17
    assume {:print "$at(2,26404,26421)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(2,26404,26421)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,46):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[stake_pool]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:578:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t8);
    assume {:print "$track_local(38,46,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t9 := get_field<stake::StakePool>.operator_address($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:579:28+27
    assume {:print "$at(2,26475,26502)"} true;
    $t9 := $operator_address#$1_stake_StakePool($Dereference($t8));

    // trace_local[old_operator]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:579:13+12
    assume {:print "$track_local(38,46,2):", $t9} $t9 == $t9;

    // $t10 := borrow_field<stake::StakePool>.operator_address($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+27
    assume {:print "$at(2,26512,26539)"} true;
    $t10 := $ChildMutation($t8, 5, $operator_address#$1_stake_StakePool($Dereference($t8)));

    // write_ref($t10, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+42
    $t10 := $UpdateMutation($t10, $t1);

    // write_back[Reference($t8).operator_address (address)]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+42
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_operator_address($Dereference($t8), $Dereference($t10)));

    // $t11 := borrow_field<stake::StakePool>.set_operator_events($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:583:13+35
    assume {:print "$at(2,26596,26631)"} true;
    $t11 := $ChildMutation($t8, 8, $set_operator_events#$1_stake_StakePool($Dereference($t8)));

    // $t12 := pack stake::SetOperatorEvent($t6, $t9, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:584:13+122
    assume {:print "$at(2,26645,26767)"} true;
    $t12 := $1_stake_SetOperatorEvent($t6, $t9, $t1);

    // opaque begin: event::emit_event<stake::SetOperatorEvent>($t11, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    assume {:print "$at(2,26565,26778)"} true;

    // opaque end: event::emit_event<stake::SetOperatorEvent>($t11, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213

    // write_back[Reference($t8).set_operator_events (event::EventHandle<stake::SetOperatorEvent>)]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_set_operator_events($Dereference($t8), $Dereference($t11)));

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(2,26784,26785)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(2,26784,26785)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(2,26784,26785)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun stake::set_operator_with_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+611
procedure {:timeLimit 40} $1_stake_set_operator_with_cap$verify(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_stake_StakePool);
    var $t9: int;
    var $t10: $Mutation (int);
    var $t11: $Mutation ($1_event_EventHandle'$1_stake_SetOperatorEvent');
    var $t12: $1_stake_SetOperatorEvent;
    var $t13: $1_stake_StakePool;
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume {:print "$at(2,26174,26175)"} true;
    assume $IsValid'$1_stake_OwnerCapability'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+611
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Identical($t5, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:98:9+42
    assume {:print "$at(3,4541,4583)"} true;
    assume ($t5 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume CanModify<stake::StakePool>($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:100:9+41
    assume {:print "$at(3,4655,4696)"} true;
    assume $1_stake_StakePool_$modifies[$t5];

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume {:print "$at(2,26174,26175)"} true;
    assume {:print "$track_local(38,46,0):", $t0} $t0 == $t0;

    // trace_local[new_operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume {:print "$track_local(38,46,1):", $t1} $t1 == $t1;

    // $t6 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:576:28+22
    assume {:print "$at(2,26307,26329)"} true;
    $t6 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:576:13+12
    assume {:print "$track_local(38,46,3):", $t6} $t6 == $t6;

    // stake::assert_stake_pool_exists($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:577:9+38
    assume {:print "$at(2,26339,26377)"} true;
    call $1_stake_assert_stake_pool_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(2,26339,26377)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,46):", $t7} $t7 == $t7;
        goto L2;
    }

    // assert CanModify<stake::StakePool>($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:578:26+17
    assume {:print "$at(2,26404,26421)"} true;
    assert {:msg "assert_failed(2,26404,26421): caller does not have permission to modify `stake::StakePool` at given address"}
      $1_stake_StakePool_$modifies[$t6];

    // $t8 := borrow_global<stake::StakePool>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:578:26+17
    if (!$ResourceExists($1_stake_StakePool_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(2,26404,26421)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,46):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[stake_pool]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:578:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t8);
    assume {:print "$track_local(38,46,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t9 := get_field<stake::StakePool>.operator_address($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:579:28+27
    assume {:print "$at(2,26475,26502)"} true;
    $t9 := $operator_address#$1_stake_StakePool($Dereference($t8));

    // trace_local[old_operator]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:579:13+12
    assume {:print "$track_local(38,46,2):", $t9} $t9 == $t9;

    // $t10 := borrow_field<stake::StakePool>.operator_address($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+27
    assume {:print "$at(2,26512,26539)"} true;
    $t10 := $ChildMutation($t8, 5, $operator_address#$1_stake_StakePool($Dereference($t8)));

    // write_ref($t10, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+42
    $t10 := $UpdateMutation($t10, $t1);

    // write_back[Reference($t8).operator_address (address)]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+42
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_operator_address($Dereference($t8), $Dereference($t10)));

    // $t11 := borrow_field<stake::StakePool>.set_operator_events($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:583:13+35
    assume {:print "$at(2,26596,26631)"} true;
    $t11 := $ChildMutation($t8, 8, $set_operator_events#$1_stake_StakePool($Dereference($t8)));

    // $t12 := pack stake::SetOperatorEvent($t6, $t9, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:584:13+122
    assume {:print "$at(2,26645,26767)"} true;
    $t12 := $1_stake_SetOperatorEvent($t6, $t9, $t1);

    // opaque begin: event::emit_event<stake::SetOperatorEvent>($t11, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    assume {:print "$at(2,26565,26778)"} true;

    // opaque end: event::emit_event<stake::SetOperatorEvent>($t11, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213

    // write_back[Reference($t8).set_operator_events (event::EventHandle<stake::SetOperatorEvent>)]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_set_operator_events($Dereference($t8), $Dereference($t11)));

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(2,26784,26785)"} true;
L1:

    // assume Identical($t13, global<stake::StakePool>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:99:9+54
    assume {:print "$at(3,4592,4646)"} true;
    assume ($t13 == $ResourceValue($1_stake_StakePool_$memory, $t5));

    // assert Eq<address>(select stake::StakePool.operator_address($t13), $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:101:9+52
    assume {:print "$at(3,4705,4757)"} true;
    assert {:msg "assert_failed(3,4705,4757): post-condition does not hold"}
      $IsEqual'address'($operator_address#$1_stake_StakePool($t13), $t1);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:101:9+52
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(2,26784,26785)"} true;
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(2,26784,26785)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun stake::stake_pool_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+89
procedure {:inline 1} $1_stake_stake_pool_exists(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+1
    assume {:print "$at(2,18212,18213)"} true;
    assume {:print "$track_local(38,47,0):", $t0} $t0 == $t0;

    // $t1 := exists<stake::StakePool>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:401:9+6
    assume {:print "$at(2,18272,18278)"} true;
    $t1 := $ResourceExists($1_stake_StakePool_$memory, $t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:401:9+23
    assume {:print "$track_return(38,47,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:402:5+1
    assume {:print "$at(2,18300,18301)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:402:5+1
    assume {:print "$at(2,18300,18301)"} true;
    $ret0 := $t1;
    return;

}

// fun stake::stake_pool_exists [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+89
procedure {:timeLimit 40} $1_stake_stake_pool_exists$verify(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+1
    assume {:print "$at(2,18212,18213)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+89
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+1
    assume {:print "$track_local(38,47,0):", $t0} $t0 == $t0;

    // $t1 := exists<stake::StakePool>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:401:9+6
    assume {:print "$at(2,18272,18278)"} true;
    $t1 := $ResourceExists($1_stake_StakePool_$memory, $t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:401:9+23
    assume {:print "$track_return(38,47,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:402:5+1
    assume {:print "$at(2,18300,18301)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:402:5+1
    assume {:print "$at(2,18300,18301)"} true;
    $ret0 := $t1;
    return;

}

// fun stake::store_aptos_coin_mint_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:424:5+251
procedure {:timeLimit 40} $1_stake_store_aptos_coin_mint_cap$verify(_$t0: $signer, _$t1: $1_coin_MintCapability'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: int;
    var $t4: $1_stake_AptosCoinCapabilities;
    var $t0: $signer;
    var $t1: $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_MintCapability'$1_aptos_coin_AptosCoin'': $1_coin_MintCapability'$1_aptos_coin_AptosCoin';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:424:5+1
    assume {:print "$at(2,19098,19099)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:424:5+1
    assume $IsValid'$1_coin_MintCapability'$1_aptos_coin_AptosCoin''($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:424:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:424:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:424:5+251
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // trace_local[aptos_framework]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:424:5+1
    assume {:print "$track_local(38,48,0):", $t0} $t0 == $t0;

    // trace_local[mint_cap]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:424:5+1
    assume {:print "$track_local(38,48,1):", $t1} $t1 == $t1;

    // opaque begin: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
    assume {:print "$at(2,19216,19273)"} true;

    // assume Identical($t2, Neq<address>(signer::$address_of($t0), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
    assume ($t2 == !$IsEqual'address'($1_signer_$address_of($t0), 1));

    // if ($t2) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
L4:

    // assume And(Neq<address>(signer::$address_of($t0), 1), Eq(5, $t3)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
    assume {:print "$at(2,19216,19273)"} true;
    assume (!$IsEqual'address'($1_signer_$address_of($t0), 1) && $IsEqual'num'(5, $t3));

    // trace_abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
    assume {:print "$at(2,19216,19273)"} true;
    assume {:print "$track_abort(38,48):", $t3} $t3 == $t3;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
    goto L2;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
L3:

    // opaque end: system_addresses::assert_aptos_framework($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:425:9+57
    assume {:print "$at(2,19216,19273)"} true;

    // $t4 := pack stake::AptosCoinCapabilities($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:426:34+34
    assume {:print "$at(2,19308,19342)"} true;
    $t4 := $1_stake_AptosCoinCapabilities($t1);

    // move_to<stake::AptosCoinCapabilities>($t4, $t0) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:426:9+7
    if ($ResourceExists($1_stake_AptosCoinCapabilities_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_stake_AptosCoinCapabilities_$memory := $ResourceUpdate($1_stake_AptosCoinCapabilities_$memory, $addr#$signer($t0), $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(2,19283,19290)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(38,48):", $t3} $t3 == $t3;
        goto L2;
    }

    // assert Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume {:print "$at(3,434,539)"} true;
    assert {:msg "assert_failed(3,434,539): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:427:5+1
    assume {:print "$at(2,19348,19349)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:427:5+1
    assume {:print "$at(2,19348,19349)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:427:5+1
L2:

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:427:5+1
    assume {:print "$at(2,19348,19349)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun stake::unlock [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+322
procedure {:timeLimit 40} $1_stake_unlock$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_stake_OwnerCapability;
    var $t4: int;
    var $t5: int;
    var $t6: $1_stake_OwnerCapability;
    var $t7: int;
    var $t8: $1_stake_StakePool;
    var $t9: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume {:print "$at(2,39322,39323)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume $IsValid'u64'($t1);

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+322
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume {:print "$track_local(38,49,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:841:5+1
    assume {:print "$track_local(38,49,1):", $t1} $t1 == $t1;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:842:29+25
    assume {:print "$at(2,39441,39466)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,39441,39466)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,49):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[owner_address]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:842:13+13
    assume {:print "$track_local(38,49,2):", $t4} $t4 == $t4;

    // stake::assert_owner_cap_exists($t4) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:843:9+38
    assume {:print "$at(2,39476,39514)"} true;
    call $1_stake_assert_owner_cap_exists($t4);
    if ($abort_flag) {
        assume {:print "$at(2,39476,39514)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,49):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := get_global<stake::OwnerCapability>($t4) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:844:29+13
    assume {:print "$at(2,39544,39557)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($1_stake_OwnerCapability_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(2,39544,39557)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,49):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[ownership_cap]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:844:13+13
    assume {:print "$track_local(38,49,3):", $t6} $t6 == $t6;

    // assume Identical($t7, select stake::OwnerCapability.pool_address($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:50:9+42
    assume {:print "$at(3,2220,2262)"} true;
    assume ($t7 == $pool_address#$1_stake_OwnerCapability($t6));

    // assume Identical($t8, global<stake::StakePool>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:51:9+53
    assume {:print "$at(3,2271,2324)"} true;
    assume ($t8 == $ResourceValue($1_stake_StakePool_$memory, $t7));

    // assume Identical($t9, math64::$min($t1, select coin::Coin.value(select stake::StakePool.active($t8)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:54:9+76
    assume {:print "$at(3,2446,2522)"} true;
    assume ($t9 == $1_math64_$min($t1, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t8))));

    // stake::unlock_with_cap($t1, $t6) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:845:9+38
    assume {:print "$at(2,39599,39637)"} true;
    call $1_stake_unlock_with_cap($t1, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,39599,39637)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(38,49):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:846:5+1
    assume {:print "$at(2,39643,39644)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:846:5+1
    assume {:print "$at(2,39643,39644)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:846:5+1
L2:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:846:5+1
    assume {:print "$at(2,39643,39644)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun stake::unlock_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1066
procedure {:inline 1} $1_stake_unlock_with_cap(_$t0: int, _$t1: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation ($1_stake_StakePool);
    var $t14: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t15: int;
    var $t16: int;
    var $t17: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t18: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t19: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t20: $Mutation ($1_event_EventHandle'$1_stake_UnlockStakeEvent');
    var $t21: $1_stake_UnlockStakeEvent;
    var $t0: int;
    var $t1: $1_stake_OwnerCapability;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t6, select stake::OwnerCapability.pool_address($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:50:9+42
    assume {:print "$at(3,2220,2262)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t1));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:51:9+53
    assume {:print "$at(3,2271,2324)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t0, select coin::Coin.value(select stake::StakePool.active($t7)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:54:9+76
    assume {:print "$at(3,2446,2522)"} true;
    assume ($t8 == $1_math64_$min($t0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t7))));

    // trace_local[amount]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume {:print "$at(2,39738,39739)"} true;
    assume {:print "$track_local(38,50,0):", $t0} $t0 == $t0;

    // trace_local[owner_cap]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume {:print "$track_local(38,50,1):", $t1} $t1 == $t1;

    // $t9 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:23+1
    assume {:print "$at(2,39925,39926)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := ==($t0, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:20+2
    $t10 := $IsEqual'u64'($t0, $t9);

    // if ($t10) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:9+47
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:13+6
    assume {:print "$at(2,39942,39948)"} true;
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:13+6
    assume {:print "$at(2,39942,39948)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:28+9
    assume {:print "$at(2,40171,40180)"} true;
L0:

    // $t11 := get_field<stake::OwnerCapability>.pool_address($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:28+22
    assume {:print "$at(2,40171,40193)"} true;
    $t11 := $pool_address#$1_stake_OwnerCapability($t1);

    // trace_local[pool_address]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:13+12
    assume {:print "$track_local(38,50,3):", $t11} $t11 == $t11;

    // stake::assert_stake_pool_exists($t11) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:858:9+38
    assume {:print "$at(2,40203,40241)"} true;
    call $1_stake_assert_stake_pool_exists($t11);
    if ($abort_flag) {
        assume {:print "$at(2,40203,40241)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t13 := borrow_global<stake::StakePool>($t11) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:859:26+17
    assume {:print "$at(2,40268,40285)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(2,40268,40285)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[stake_pool]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:859:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t13);
    assume {:print "$track_local(38,50,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t14 := get_field<stake::StakePool>.active($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:46+18
    assume {:print "$at(2,40414,40432)"} true;
    $t14 := $active#$1_stake_StakePool($Dereference($t13));

    // $t15 := coin::value<aptos_coin::AptosCoin>($t14) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:34+31
    call $t15 := $1_coin_value'$1_aptos_coin_AptosCoin'($t14);
    if ($abort_flag) {
        assume {:print "$at(2,40402,40433)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t16 := math64::min($t0, $t15) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:22+44
    call $t16 := $1_math64_min($t0, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,40390,40434)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[amount#1]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:13+6
    assume {:print "$track_local(38,50,2):", $t16} $t16 == $t16;

    // $t17 := borrow_field<stake::StakePool>.active($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:44+22
    assume {:print "$at(2,40479,40501)"} true;
    $t17 := $ChildMutation($t13, 0, $active#$1_stake_StakePool($Dereference($t13)));

    // $t18 := coin::extract<aptos_coin::AptosCoin>($t17, $t16) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:30+45
    call $t18,$t17 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t17, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,40465,40510)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[Reference($t13).active (coin::Coin<aptos_coin::AptosCoin>)]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:30+45
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_active($Dereference($t13), $Dereference($t17)));

    // trace_local[unlocked_stake]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:13+14
    assume {:print "$track_local(38,50,5):", $t18} $t18 == $t18;

    // $t19 := borrow_field<stake::StakePool>.pending_inactive($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:32+32
    assume {:print "$at(2,40543,40575)"} true;
    $t19 := $ChildMutation($t13, 3, $pending_inactive#$1_stake_StakePool($Dereference($t13)));

    // coin::merge<aptos_coin::AptosCoin>($t19, $t18) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:9+72
    call $t19 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t19, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,40520,40592)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[Reference($t13).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:9+72
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t13), $Dereference($t19)));

    // $t20 := borrow_field<stake::StakePool>.unlock_stake_events($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:866:13+35
    assume {:print "$at(2,40634,40669)"} true;
    $t20 := $ChildMutation($t13, 16, $unlock_stake_events#$1_stake_StakePool($Dereference($t13)));

    // $t21 := pack stake::UnlockStakeEvent($t11, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:867:13+103
    assume {:print "$at(2,40683,40786)"} true;
    $t21 := $1_stake_UnlockStakeEvent($t11, $t16);

    // opaque begin: event::emit_event<stake::UnlockStakeEvent>($t20, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    assume {:print "$at(2,40603,40797)"} true;

    // opaque end: event::emit_event<stake::UnlockStakeEvent>($t20, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194

    // write_back[Reference($t13).unlock_stake_events (event::EventHandle<stake::UnlockStakeEvent>)]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_unlock_stake_events($Dereference($t13), $Dereference($t20)));

    // write_back[stake::StakePool@]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(2,40803,40804)"} true;
L2:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(2,40803,40804)"} true;
    return;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
L3:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(2,40803,40804)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun stake::unlock_with_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1066
procedure {:timeLimit 40} $1_stake_unlock_with_cap$verify(_$t0: int, _$t1: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation ($1_stake_StakePool);
    var $t14: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t15: int;
    var $t16: int;
    var $t17: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t18: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t19: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t20: $Mutation ($1_event_EventHandle'$1_stake_UnlockStakeEvent');
    var $t21: $1_stake_UnlockStakeEvent;
    var $t22: $1_stake_StakePool;
    var $t0: int;
    var $t1: $1_stake_OwnerCapability;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume {:print "$at(2,39738,39739)"} true;
    assume $IsValid'u64'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume $IsValid'$1_stake_OwnerCapability'($t1);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1066
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:50:9+42
    assume {:print "$at(3,2220,2262)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t1));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:51:9+53
    assume {:print "$at(3,2271,2324)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t0, select coin::Coin.value(select stake::StakePool.active($t7)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:54:9+76
    assume {:print "$at(3,2446,2522)"} true;
    assume ($t8 == $1_math64_$min($t0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t7))));

    // assume CanModify<stake::StakePool>($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:53:9+41
    assume {:print "$at(3,2396,2437)"} true;
    assume $1_stake_StakePool_$modifies[$t6];

    // trace_local[amount]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume {:print "$at(2,39738,39739)"} true;
    assume {:print "$track_local(38,50,0):", $t0} $t0 == $t0;

    // trace_local[owner_cap]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume {:print "$track_local(38,50,1):", $t1} $t1 == $t1;

    // $t9 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:23+1
    assume {:print "$at(2,39925,39926)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := ==($t0, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:20+2
    $t10 := $IsEqual'u64'($t0, $t9);

    // if ($t10) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:9+47
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:13+6
    assume {:print "$at(2,39942,39948)"} true;
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:13+6
    assume {:print "$at(2,39942,39948)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:28+9
    assume {:print "$at(2,40171,40180)"} true;
L0:

    // $t11 := get_field<stake::OwnerCapability>.pool_address($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:28+22
    assume {:print "$at(2,40171,40193)"} true;
    $t11 := $pool_address#$1_stake_OwnerCapability($t1);

    // trace_local[pool_address]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:13+12
    assume {:print "$track_local(38,50,3):", $t11} $t11 == $t11;

    // stake::assert_stake_pool_exists($t11) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:858:9+38
    assume {:print "$at(2,40203,40241)"} true;
    call $1_stake_assert_stake_pool_exists($t11);
    if ($abort_flag) {
        assume {:print "$at(2,40203,40241)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // assert CanModify<stake::StakePool>($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:859:26+17
    assume {:print "$at(2,40268,40285)"} true;
    assert {:msg "assert_failed(2,40268,40285): caller does not have permission to modify `stake::StakePool` at given address"}
      $1_stake_StakePool_$modifies[$t11];

    // $t13 := borrow_global<stake::StakePool>($t11) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:859:26+17
    if (!$ResourceExists($1_stake_StakePool_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(2,40268,40285)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[stake_pool]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:859:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t13);
    assume {:print "$track_local(38,50,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t14 := get_field<stake::StakePool>.active($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:46+18
    assume {:print "$at(2,40414,40432)"} true;
    $t14 := $active#$1_stake_StakePool($Dereference($t13));

    // $t15 := coin::value<aptos_coin::AptosCoin>($t14) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:34+31
    call $t15 := $1_coin_value'$1_aptos_coin_AptosCoin'($t14);
    if ($abort_flag) {
        assume {:print "$at(2,40402,40433)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t16 := math64::min($t0, $t15) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:22+44
    call $t16 := $1_math64_min($t0, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,40390,40434)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[amount#1]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:13+6
    assume {:print "$track_local(38,50,2):", $t16} $t16 == $t16;

    // $t17 := borrow_field<stake::StakePool>.active($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:44+22
    assume {:print "$at(2,40479,40501)"} true;
    $t17 := $ChildMutation($t13, 0, $active#$1_stake_StakePool($Dereference($t13)));

    // $t18 := coin::extract<aptos_coin::AptosCoin>($t17, $t16) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:30+45
    call $t18,$t17 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t17, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,40465,40510)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[Reference($t13).active (coin::Coin<aptos_coin::AptosCoin>)]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:30+45
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_active($Dereference($t13), $Dereference($t17)));

    // trace_local[unlocked_stake]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:13+14
    assume {:print "$track_local(38,50,5):", $t18} $t18 == $t18;

    // $t19 := borrow_field<stake::StakePool>.pending_inactive($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:32+32
    assume {:print "$at(2,40543,40575)"} true;
    $t19 := $ChildMutation($t13, 3, $pending_inactive#$1_stake_StakePool($Dereference($t13)));

    // coin::merge<aptos_coin::AptosCoin>($t19, $t18) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:9+72
    call $t19 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t19, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,40520,40592)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[Reference($t13).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:9+72
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t13), $Dereference($t19)));

    // $t20 := borrow_field<stake::StakePool>.unlock_stake_events($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:866:13+35
    assume {:print "$at(2,40634,40669)"} true;
    $t20 := $ChildMutation($t13, 16, $unlock_stake_events#$1_stake_StakePool($Dereference($t13)));

    // $t21 := pack stake::UnlockStakeEvent($t11, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:867:13+103
    assume {:print "$at(2,40683,40786)"} true;
    $t21 := $1_stake_UnlockStakeEvent($t11, $t16);

    // opaque begin: event::emit_event<stake::UnlockStakeEvent>($t20, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    assume {:print "$at(2,40603,40797)"} true;

    // opaque end: event::emit_event<stake::UnlockStakeEvent>($t20, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194

    // write_back[Reference($t13).unlock_stake_events (event::EventHandle<stake::UnlockStakeEvent>)]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_unlock_stake_events($Dereference($t13), $Dereference($t20)));

    // write_back[stake::StakePool@]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(2,40803,40804)"} true;
L2:

    // assume Identical($t22, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:52:9+54
    assume {:print "$at(3,2333,2387)"} true;
    assume ($t22 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assert Eq<u64>(select coin::Coin.value(select stake::StakePool.pending_inactive($t22)), Add(select coin::Coin.value(select stake::StakePool.pending_inactive($t7)), $t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:56:9+96
    assume {:print "$at(3,2532,2628)"} true;
    assert {:msg "assert_failed(3,2532,2628): post-condition does not hold"}
      $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t22)), ($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t7)) + $t8));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:56:9+96
    return;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(2,40803,40804)"} true;
L3:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(2,40803,40804)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun stake::update_network_and_fullnode_addresses [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1302
procedure {:timeLimit 40} $1_stake_update_network_and_fullnode_addresses$verify(_$t0: $signer, _$t1: int, _$t2: Vec (int), _$t3: Vec (int)) returns ()
{
    // declare local variables
    var $t4: Vec (int);
    var $t5: Vec (int);
    var $t6: $Mutation ($1_stake_StakePool);
    var $t7: $Mutation ($1_stake_ValidatorConfig);
    var $t8: $1_stake_StakePool;
    var $t9: int;
    var $t10: $Mutation ($1_stake_StakePool);
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation ($1_stake_ValidatorConfig);
    var $t20: Vec (int);
    var $t21: $Mutation (Vec (int));
    var $t22: Vec (int);
    var $t23: $Mutation (Vec (int));
    var $t24: $Mutation ($1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent');
    var $t25: $1_stake_UpdateNetworkAndFullnodeAddressesEvent;
    var $t26: $1_stake_ValidatorConfig;
    var $t0: $signer;
    var $t1: int;
    var $t2: Vec (int);
    var $t3: Vec (int);
    var $1_stake_ValidatorConfig_$modifies: [int]bool;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    var $1_stake_StakePool_$memory#25: $Memory $1_stake_StakePool;
    var $1_stake_ValidatorConfig_$memory#26: $Memory $1_stake_ValidatorConfig;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume {:print "$at(2,33388,33389)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume $IsValid'vec'u8''($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume $IsValid'vec'u8''($t3);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1302
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Identical($t8, global<stake::StakePool>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:84:9+53
    assume {:print "$at(3,3804,3857)"} true;
    assume ($t8 == $ResourceValue($1_stake_StakePool_$memory, $t1));

    // assume CanModify<stake::ValidatorConfig>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:86:9+47
    assume {:print "$at(3,3939,3986)"} true;
    assume $1_stake_ValidatorConfig_$modifies[$t1];

    // @25 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:86:9+47
    $1_stake_StakePool_$memory#25 := $1_stake_StakePool_$memory;

    // @26 := save_mem(stake::ValidatorConfig) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:86:9+47
    $1_stake_ValidatorConfig_$memory#26 := $1_stake_ValidatorConfig_$memory;

    // trace_local[operator]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume {:print "$at(2,33388,33389)"} true;
    assume {:print "$track_local(38,51,0):", $t0} $t0 == $t0;

    // trace_local[pool_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume {:print "$track_local(38,51,1):", $t1} $t1 == $t1;

    // trace_local[new_network_addresses]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume {:print "$track_local(38,51,2):", $t2} $t2 == $t2;

    // trace_local[new_fullnode_addresses]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:724:5+1
    assume {:print "$track_local(38,51,3):", $t3} $t3 == $t3;

    // stake::assert_stake_pool_exists($t1) on_abort goto L7 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:730:9+38
    assume {:print "$at(2,33641,33679)"} true;
    call $1_stake_assert_stake_pool_exists($t1);
    if ($abort_flag) {
        assume {:print "$at(2,33641,33679)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,51):", $t9} $t9 == $t9;
        goto L7;
    }

    // $t10 := borrow_global<stake::StakePool>($t1) on_abort goto L7 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:731:26+17
    assume {:print "$at(2,33706,33723)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,33706,33723)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,51):", $t9} $t9 == $t9;
        goto L7;
    }

    // trace_local[stake_pool]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:731:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t10);
    assume {:print "$track_local(38,51,6):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t11 := signer::address_of($t0) on_abort goto L7 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:17+28
    assume {:print "$at(2,33766,33794)"} true;
    call $t11 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,33766,33794)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,51):", $t9} $t9 == $t9;
        goto L7;
    }

    // $t12 := get_field<stake::StakePool>.operator_address($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:49+27
    $t12 := $operator_address#$1_stake_StakePool($Dereference($t10));

    // $t13 := ==($t11, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:46+2
    $t13 := $IsEqual'address'($t11, $t12);

    // if ($t13) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:9+107
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:9+107
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:9+107
    assume {:print "$at(2,33758,33865)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:9+107
L0:

    // destroy($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:9+107
    assume {:print "$at(2,33758,33865)"} true;

    // $t14 := 9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:101+13
    $t14 := 9;
    assume $IsValid'u64'($t14);

    // $t15 := error::unauthenticated($t14) on_abort goto L7 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:78+37
    call $t15 := $1_error_unauthenticated($t14);
    if ($abort_flag) {
        assume {:print "$at(2,33827,33864)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,51):", $t9} $t9 == $t9;
        goto L7;
    }

    // trace_abort($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:9+107
    assume {:print "$at(2,33758,33865)"} true;
    assume {:print "$track_abort(38,51):", $t15} $t15 == $t15;

    // $t9 := move($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:9+107
    $t9 := $t15;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:732:9+107
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:41+12
    assume {:print "$at(2,33908,33920)"} true;
L2:

    // $t16 := exists<stake::ValidatorConfig>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:17+6
    assume {:print "$at(2,33884,33890)"} true;
    $t16 := $ResourceExists($1_stake_ValidatorConfig_$memory, $t1);

    // if ($t16) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:9+83
    if ($t16) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:9+83
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:9+83
    assume {:print "$at(2,33876,33959)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:9+83
L3:

    // destroy($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:9+83
    assume {:print "$at(2,33876,33959)"} true;

    // $t17 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:73+17
    $t17 := 1;
    assume $IsValid'u64'($t17);

    // $t18 := error::not_found($t17) on_abort goto L7 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:56+35
    call $t18 := $1_error_not_found($t17);
    if ($abort_flag) {
        assume {:print "$at(2,33923,33958)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,51):", $t9} $t9 == $t9;
        goto L7;
    }

    // trace_abort($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:9+83
    assume {:print "$at(2,33876,33959)"} true;
    assume {:print "$track_abort(38,51):", $t18} $t18 == $t18;

    // $t9 := move($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:9+83
    $t9 := $t18;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:734:9+83
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:735:65+12
    assume {:print "$at(2,34025,34037)"} true;
L5:

    // assert CanModify<stake::ValidatorConfig>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:735:30+17
    assume {:print "$at(2,33990,34007)"} true;
    assert {:msg "assert_failed(2,33990,34007): caller does not have permission to modify `stake::ValidatorConfig` at given address"}
      $1_stake_ValidatorConfig_$modifies[$t1];

    // $t19 := borrow_global<stake::ValidatorConfig>($t1) on_abort goto L7 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:735:30+17
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_ValidatorConfig_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,33990,34007)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(38,51):", $t9} $t9 == $t9;
        goto L7;
    }

    // trace_local[validator_info]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:735:13+14
    $temp_0'$1_stake_ValidatorConfig' := $Dereference($t19);
    assume {:print "$track_local(38,51,7):", $temp_0'$1_stake_ValidatorConfig'} $temp_0'$1_stake_ValidatorConfig' == $temp_0'$1_stake_ValidatorConfig';

    // $t20 := get_field<stake::ValidatorConfig>.network_addresses($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:736:37+32
    assume {:print "$at(2,34076,34108)"} true;
    $t20 := $network_addresses#$1_stake_ValidatorConfig($Dereference($t19));

    // trace_local[old_network_addresses]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:736:13+21
    assume {:print "$track_local(38,51,5):", $t20} $t20 == $t20;

    // $t21 := borrow_field<stake::ValidatorConfig>.network_addresses($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:737:9+32
    assume {:print "$at(2,34118,34150)"} true;
    $t21 := $ChildMutation($t19, 1, $network_addresses#$1_stake_ValidatorConfig($Dereference($t19)));

    // write_ref($t21, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:737:9+56
    $t21 := $UpdateMutation($t21, $t2);

    // write_back[Reference($t19).network_addresses (vector<u8>)]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:737:9+56
    $t19 := $UpdateMutation($t19, $Update'$1_stake_ValidatorConfig'_network_addresses($Dereference($t19), $Dereference($t21)));

    // $t22 := get_field<stake::ValidatorConfig>.fullnode_addresses($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:738:38+33
    assume {:print "$at(2,34213,34246)"} true;
    $t22 := $fullnode_addresses#$1_stake_ValidatorConfig($Dereference($t19));

    // trace_local[old_fullnode_addresses]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:738:13+22
    assume {:print "$track_local(38,51,4):", $t22} $t22 == $t22;

    // $t23 := borrow_field<stake::ValidatorConfig>.fullnode_addresses($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:739:9+33
    assume {:print "$at(2,34256,34289)"} true;
    $t23 := $ChildMutation($t19, 2, $fullnode_addresses#$1_stake_ValidatorConfig($Dereference($t19)));

    // write_ref($t23, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:739:9+58
    $t23 := $UpdateMutation($t23, $t3);

    // write_back[Reference($t19).fullnode_addresses (vector<u8>)]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:739:9+58
    $t19 := $UpdateMutation($t19, $Update'$1_stake_ValidatorConfig'_fullnode_addresses($Dereference($t19), $Dereference($t23)));

    // write_back[stake::ValidatorConfig@]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:739:9+58
    $1_stake_ValidatorConfig_$memory := $ResourceUpdate($1_stake_ValidatorConfig_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // $t24 := borrow_field<stake::StakePool>.update_network_and_fullnode_addresses_events($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:742:13+60
    assume {:print "$at(2,34356,34416)"} true;
    $t24 := $ChildMutation($t10, 12, $update_network_and_fullnode_addresses_events#$1_stake_StakePool($Dereference($t10)));

    // $t25 := pack stake::UpdateNetworkAndFullnodeAddressesEvent($t1, $t20, $t2, $t22, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:743:13+242
    assume {:print "$at(2,34430,34672)"} true;
    $t25 := $1_stake_UpdateNetworkAndFullnodeAddressesEvent($t1, $t20, $t2, $t22, $t3);

    // opaque begin: event::emit_event<stake::UpdateNetworkAndFullnodeAddressesEvent>($t24, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:741:9+358
    assume {:print "$at(2,34325,34683)"} true;

    // opaque end: event::emit_event<stake::UpdateNetworkAndFullnodeAddressesEvent>($t24, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:741:9+358

    // write_back[Reference($t10).update_network_and_fullnode_addresses_events (event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent>)]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:741:9+358
    $t10 := $UpdateMutation($t10, $Update'$1_stake_StakePool'_update_network_and_fullnode_addresses_events($Dereference($t10), $Dereference($t24)));

    // write_back[stake::StakePool@]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:741:9+358
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:751:5+1
    assume {:print "$at(2,34689,34690)"} true;
L6:

    // assume Identical($t26, global<stake::ValidatorConfig>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:85:9+64
    assume {:print "$at(3,3866,3930)"} true;
    assume ($t26 == $ResourceValue($1_stake_ValidatorConfig_$memory, $t1));

    // assert Not(Not(exists[@25]<stake::StakePool>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:89:9+43
    assume {:print "$at(3,4103,4146)"} true;
    assert {:msg "assert_failed(3,4103,4146): function does not abort under this condition"}
      !!$ResourceExists($1_stake_StakePool_$memory#25, $t1);

    // assert Not(Not(exists[@26]<stake::ValidatorConfig>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:90:9+49
    assume {:print "$at(3,4155,4204)"} true;
    assert {:msg "assert_failed(3,4155,4204): function does not abort under this condition"}
      !!$ResourceExists($1_stake_ValidatorConfig_$memory#26, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select stake::StakePool.operator_address($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:91:9+74
    assume {:print "$at(3,4213,4287)"} true;
    assert {:msg "assert_failed(3,4213,4287): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $operator_address#$1_stake_StakePool($t8));

    // assert Eq<vector<u8>>(select stake::ValidatorConfig.network_addresses($t26), $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:93:9+66
    assume {:print "$at(3,4297,4363)"} true;
    assert {:msg "assert_failed(3,4297,4363): post-condition does not hold"}
      $IsEqual'vec'u8''($network_addresses#$1_stake_ValidatorConfig($t26), $t2);

    // assert Eq<vector<u8>>(select stake::ValidatorConfig.fullnode_addresses($t26), $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:94:9+68
    assume {:print "$at(3,4372,4440)"} true;
    assert {:msg "assert_failed(3,4372,4440): post-condition does not hold"}
      $IsEqual'vec'u8''($fullnode_addresses#$1_stake_ValidatorConfig($t26), $t3);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:94:9+68
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:751:5+1
    assume {:print "$at(2,34689,34690)"} true;
L7:

    // assert Or(Or(Not(exists[@25]<stake::StakePool>($t1)), Not(exists[@26]<stake::ValidatorConfig>($t1))), Neq<address>(signer::$address_of[]($t0), select stake::StakePool.operator_address($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:78:5+847
    assume {:print "$at(3,3599,4446)"} true;
    assert {:msg "assert_failed(3,3599,4446): abort not covered by any of the `aborts_if` clauses"}
      ((!$ResourceExists($1_stake_StakePool_$memory#25, $t1) || !$ResourceExists($1_stake_ValidatorConfig_$memory#26, $t1)) || !$IsEqual'address'($1_signer_$address_of($t0), $operator_address#$1_stake_StakePool($t8)));

    // abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:78:5+847
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun stake::update_performance_statistics [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
procedure {:timeLimit 40} $1_stake_update_performance_statistics$verify(_$t0: $1_option_Option'u64', _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation ($1_stake_IndividualValidatorPerformance);
    var $t6: $Mutation ($1_stake_IndividualValidatorPerformance);
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_stake_ValidatorPerformance);
    var $t10: int;
    var $t11: $Mutation ($1_stake_ValidatorPerformance);
    var $t12: int;
    var $t13: Vec ($1_stake_IndividualValidatorPerformance);
    var $t14: int;
    var $t15: $1_option_Option'u64';
    var $t16: bool;
    var $t17: $Mutation ($1_option_Option'u64');
    var $t18: int;
    var $t19: $1_option_Option'u64';
    var $t20: bool;
    var $t21: bool;
    var $t22: $Mutation (Vec ($1_stake_IndividualValidatorPerformance));
    var $t23: $Mutation ($1_stake_IndividualValidatorPerformance);
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: $Mutation (int);
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: int;
    var $t32: bool;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: $Mutation (Vec ($1_stake_IndividualValidatorPerformance));
    var $t39: $Mutation ($1_stake_IndividualValidatorPerformance);
    var $t40: $Mutation (int);
    var $t0: $1_option_Option'u64';
    var $t1: Vec (int);
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$1_stake_IndividualValidatorPerformance': $1_stake_IndividualValidatorPerformance;
    var $temp_0'$1_stake_ValidatorPerformance': $1_stake_ValidatorPerformance;
    var $temp_0'u64': int;
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume And(WellFormed($t0), Le(Len<u64>(select option::Option.vec($t0)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume {:print "$at(2,46781,46782)"} true;
    assume ($IsValid'$1_option_Option'u64''($t0) && (LenVec($vec#$1_option_Option'u64'($t0)) <= 1));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume $IsValid'vec'u64''($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<transaction_fee::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_transaction_fee_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_transaction_fee_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_transaction_fee_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<state_storage::GasParameter>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_state_storage_GasParameter_$memory, $a_0)}(var $rsc := $ResourceValue($1_state_storage_GasParameter_$memory, $a_0);
    ($IsValid'$1_state_storage_GasParameter'($rsc))));

    // assume forall $rsc: ResourceDomain<state_storage::StateStorageUsage>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_state_storage_StateStorageUsage_$memory, $a_0)}(var $rsc := $ResourceValue($1_state_storage_StateStorageUsage_$memory, $a_0);
    ($IsValid'$1_state_storage_StateStorageUsage'($rsc))));

    // assume forall $rsc: ResourceDomain<storage_gas::StorageGas>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_storage_gas_StorageGas_$memory, $a_0)}(var $rsc := $ResourceValue($1_storage_gas_StorageGas_$memory, $a_0);
    ($IsValid'$1_storage_gas_StorageGas'($rsc))));

    // assume forall $rsc: ResourceDomain<storage_gas::StorageGasConfig>(): And(WellFormed($rsc), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Gt(select storage_gas::UsageGasConfig.target_usage(select storage_gas::StorageGasConfig.item_config($rsc)), 0), Le(select storage_gas::UsageGasConfig.target_usage(select storage_gas::StorageGasConfig.item_config($rsc)), Div(18446744073709551615, 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.item_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.item_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.item_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Gt(select storage_gas::UsageGasConfig.target_usage(select storage_gas::StorageGasConfig.byte_config($rsc)), 0)), Le(select storage_gas::UsageGasConfig.target_usage(select storage_gas::StorageGasConfig.byte_config($rsc)), Div(18446744073709551615, 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.read_curve(select storage_gas::StorageGasConfig.byte_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.create_curve(select storage_gas::StorageGasConfig.byte_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000))), Le(select storage_gas::GasCurve.min_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))))), Le(select storage_gas::GasCurve.max_gas(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Div(18446744073709551615, 10000))), And(And(Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Gt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), 0)), 0)), Implies(Gt(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 0), Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1))), 10000))), forall i: Range(0, Sub(Len<storage_gas::Point>(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc)))), 1)): And(Lt(select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.x(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1)))), Le(select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), i)), select storage_gas::Point.y(Index(select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))), Add(i, 1))))))), forall $elem: select storage_gas::GasCurve.points(select storage_gas::UsageGasConfig.write_curve(select storage_gas::StorageGasConfig.byte_config($rsc))): And(Le(select storage_gas::Point.x($elem), 10000), Le(select storage_gas::Point.y($elem), 10000)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_storage_gas_StorageGasConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_storage_gas_StorageGasConfig_$memory, $a_0);
    (($IsValid'$1_storage_gas_StorageGasConfig'($rsc) && (((((((((((((((((((((((((((($target_usage#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)) > 0) && ($target_usage#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)) <= (18446744073709551615 div 10000))) && ($min_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_1 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_2: int :: $InRange($range_1, $i_2) ==> (var i := $i_2;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_3 := $points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_4: int :: InRangeVec($range_3, $i_4) ==> (var $elem := ReadVec($range_3, $i_4);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($min_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_5 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_6: int :: $InRange($range_5, $i_6) ==> (var i := $i_6;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_7 := $points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_8: int :: InRangeVec($range_7, $i_8) ==> (var $elem := ReadVec($range_7, $i_8);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($min_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_9 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_10: int :: $InRange($range_9, $i_10) ==> (var i := $i_10;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_11 := $points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($item_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_12: int :: InRangeVec($range_11, $i_12) ==> (var $elem := ReadVec($range_11, $i_12);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($target_usage#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)) > 0)) && ($target_usage#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)) <= (18446744073709551615 div 10000))) && ($min_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_13 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_14: int :: $InRange($range_13, $i_14) ==> (var i := $i_14;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_15 := $points#$1_storage_gas_GasCurve($read_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_16: int :: InRangeVec($range_15, $i_16) ==> (var $elem := ReadVec($range_15, $i_16);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($min_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_17 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_18: int :: $InRange($range_17, $i_18) ==> (var i := $i_18;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_19 := $points#$1_storage_gas_GasCurve($create_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_20: int :: InRangeVec($range_19, $i_20) ==> (var $elem := ReadVec($range_19, $i_20);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000))))))) && ($min_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= $max_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))))) && ($max_gas#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))) <= (18446744073709551615 div 10000))) && ((((LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), 0)) > 0)) && ((LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) > 0) ==> ($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1))) < 10000))) && (var $range_21 := $Range(0, (LenVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc)))) - 1)); (forall $i_22: int :: $InRange($range_21, $i_22) ==> (var i := $i_22;
    ((($x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) < $x#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1)))) && ($y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), i)) <= $y#$1_storage_gas_Point(ReadVec($points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))), (i + 1))))))))))) && (var $range_23 := $points#$1_storage_gas_GasCurve($write_curve#$1_storage_gas_UsageGasConfig($byte_config#$1_storage_gas_StorageGasConfig($rsc))); (forall $i_24: int :: InRangeVec($range_23, $i_24) ==> (var $elem := ReadVec($range_23, $i_24);
    ((($x#$1_storage_gas_Point($elem) <= 10000) && ($y#$1_storage_gas_Point($elem) <= 10000)))))))))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<block::BlockResource>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_block_BlockResource_$memory, $a_0)}(var $rsc := $ResourceValue($1_block_BlockResource_$memory, $a_0);
    ($IsValid'$1_block_BlockResource'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:11:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<transaction_fee::AptosCoinCapabilities>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/transaction_fee.spec.move:7:9+105
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_transaction_fee_AptosCoinCapabilities_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<state_storage::StateStorageUsage>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/state_storage.spec.move:7:9+101
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_state_storage_StateStorageUsage_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<state_storage::GasParameter>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/state_storage.spec.move:8:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_state_storage_GasParameter_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<storage_gas::StorageGasConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.spec.move:34:9+100
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_storage_gas_StorageGasConfig_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<storage_gas::StorageGas>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.spec.move:35:9+94
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_storage_gas_StorageGas_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<reconfiguration::Configuration>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:7:9+97
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_reconfiguration_Configuration_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume Implies(chain_status::$is_operating(), exists<block::BlockResource>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+2007
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/block.spec.move:5:9+97
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_block_BlockResource_$memory, 1));

    // assume chain_status::$is_operating() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:148:9+38
    assume {:print "$at(3,6589,6627)"} true;
    assume $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory);

    // trace_local[proposer_index]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume {:print "$at(2,46781,46782)"} true;
    assume {:print "$track_local(38,52,0):", $t0} $t0 == $t0;

    // trace_local[failed_proposer_indices]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:987:5+1
    assume {:print "$track_local(38,52,1):", $t1} $t1 == $t1;

    // $t10 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:990:70+16
    assume {:print "$at(2,47188,47204)"} true;
    $t10 := 1;
    assume $IsValid'address'($t10);

    // $t11 := borrow_global<stake::ValidatorPerformance>($t10) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:990:30+17
    if (!$ResourceExists($1_stake_ValidatorPerformance_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($1_stake_ValidatorPerformance_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(2,47148,47165)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // trace_local[validator_perf]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:990:13+14
    $temp_0'$1_stake_ValidatorPerformance' := $Dereference($t11);
    assume {:print "$track_local(38,52,9):", $temp_0'$1_stake_ValidatorPerformance'} $temp_0'$1_stake_ValidatorPerformance' == $temp_0'$1_stake_ValidatorPerformance';

    // $t13 := get_field<stake::ValidatorPerformance>.validators($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:991:44+26
    assume {:print "$at(2,47250,47276)"} true;
    $t13 := $validators#$1_stake_ValidatorPerformance($Dereference($t11));

    // $t14 := vector::length<stake::IndividualValidatorPerformance>($t13) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:991:29+42
    call $t14 := $1_vector_length'$1_stake_IndividualValidatorPerformance'($t13);
    if ($abort_flag) {
        assume {:print "$at(2,47235,47277)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // trace_local[validator_len]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:991:13+13
    assume {:print "$track_local(38,52,8):", $t14} $t14 == $t14;

    // $t15 := copy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:994:29+15
    assume {:print "$at(2,47389,47404)"} true;
    $t15 := $t0;

    // $t16 := opaque begin: option::is_some<u64>($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:994:13+32

    // assume WellFormed($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:994:13+32
    assume $IsValid'bool'($t16);

    // assume Eq<bool>($t16, option::spec_is_some<u64>($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:994:13+32
    assume $IsEqual'bool'($t16, $1_option_spec_is_some'u64'($t15));

    // $t16 := opaque end: option::is_some<u64>($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:994:13+32

    // if ($t16) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:994:9+699
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:54+19
    assume {:print "$at(2,47462,47481)"} true;
L1:

    // $t17 := borrow_local($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:54+19
    assume {:print "$at(2,47462,47481)"} true;
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := opaque begin: option::extract<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36

    // $t19 := read_ref($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    $t19 := $Dereference($t17);

    // assume Identical($t20, option::spec_is_none<u64>($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume ($t20 == $1_option_spec_is_none'u64'($Dereference($t17)));

    // if ($t20) goto L14 else goto L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    if ($t20) { goto L14; } else { goto L15; }

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
L13:

    // assume And(option::spec_is_none<u64>($t17), Eq(262145, $t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume {:print "$at(2,47446,47482)"} true;
    assume ($1_option_spec_is_none'u64'($Dereference($t17)) && $IsEqual'num'(262145, $t12));

    // trace_abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume {:print "$at(2,47446,47482)"} true;
    assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;

    // goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    goto L11;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
L12:

    // $t17 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume {:print "$at(2,47446,47482)"} true;
    havoc $temp_0'$1_option_Option'u64'';
    $t17 := $UpdateMutation($t17, $temp_0'$1_option_Option'u64'');

    // assume And(WellFormed($t17), Le(Len<u64>(select option::Option.vec($t17)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume ($IsValid'$1_option_Option'u64''($Dereference($t17)) && (LenVec($vec#$1_option_Option'u64'($Dereference($t17))) <= 1));

    // assume WellFormed($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume $IsValid'u64'($t18);

    // assume Eq<u64>($t18, option::spec_borrow<u64>($t19)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume $IsEqual'u64'($t18, $1_option_spec_borrow'u64'($t19));

    // assume option::spec_is_none<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume $1_option_spec_is_none'u64'($Dereference($t17));

    // $t18 := opaque end: option::extract<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36

    // assert Le(Len<u64>(select option::Option.vec($t17)), 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(13,530,554)"} true;
    assert {:msg "assert_failed(13,530,554): data invariant does not hold"}
      (LenVec($vec#$1_option_Option'u64'($Dereference($t17))) <= 1);

    // write_back[LocalRoot($t0)@]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume {:print "$at(2,47446,47482)"} true;
    $t0 := $Dereference($t17);

    // trace_local[proposer_index]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:38+36
    assume {:print "$track_local(38,52,0):", $t0} $t0 == $t0;

    // trace_local[cur_proposer_index]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:995:17+18
    assume {:print "$track_local(38,52,2):", $t18} $t18 == $t18;

    // $t21 := <($t18, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:998:36+1
    assume {:print "$at(2,47720,47721)"} true;
    call $t21 := $Lt($t18, $t14);

    // if ($t21) goto L2 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:998:13+360
    if ($t21) { goto L2; } else { goto L0; }

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:999:57+14
    assume {:print "$at(2,47795,47809)"} true;
L2:

    // $t22 := borrow_field<stake::ValidatorPerformance>.validators($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:999:52+30
    assume {:print "$at(2,47790,47820)"} true;
    $t22 := $ChildMutation($t11, 0, $validators#$1_stake_ValidatorPerformance($Dereference($t11)));

    // $t23 := vector::borrow_mut<stake::IndividualValidatorPerformance>($t22, $t18) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:999:33+70
    call $t23,$t22 := $1_vector_borrow_mut'$1_stake_IndividualValidatorPerformance'($t22, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,47771,47841)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // trace_local[validator]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:999:21+9
    $temp_0'$1_stake_IndividualValidatorPerformance' := $Dereference($t23);
    assume {:print "$track_local(38,52,5):", $temp_0'$1_stake_IndividualValidatorPerformance'} $temp_0'$1_stake_IndividualValidatorPerformance' == $temp_0'$1_stake_IndividualValidatorPerformance';

    // assume Le(Add(select stake::IndividualValidatorPerformance.successful_proposals($t23), 1), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1001:21+53
    assume {:print "$at(2,47886,47939)"} true;
    assume (($successful_proposals#$1_stake_IndividualValidatorPerformance($Dereference($t23)) + 1) <= 18446744073709551615);

    // $t24 := get_field<stake::IndividualValidatorPerformance>.successful_proposals($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1003:50+30
    assume {:print "$at(2,48008,48038)"} true;
    $t24 := $successful_proposals#$1_stake_IndividualValidatorPerformance($Dereference($t23));

    // $t25 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1003:83+1
    $t25 := 1;
    assume $IsValid'u64'($t25);

    // $t26 := +($t24, $t25) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1003:81+1
    call $t26 := $AddU64($t24, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,48039,48040)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // $t27 := borrow_field<stake::IndividualValidatorPerformance>.successful_proposals($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1003:17+30
    $t27 := $ChildMutation($t23, 0, $successful_proposals#$1_stake_IndividualValidatorPerformance($Dereference($t23)));

    // write_ref($t27, $t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1003:17+67
    $t27 := $UpdateMutation($t27, $t26);

    // write_back[Reference($t23).successful_proposals (u64)]($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1003:17+67
    $t23 := $UpdateMutation($t23, $Update'$1_stake_IndividualValidatorPerformance'_successful_proposals($Dereference($t23), $Dereference($t27)));

    // write_back[Reference($t22)[]]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1003:17+67
    $t22 := $UpdateMutation($t22, UpdateVec($Dereference($t22), ReadVec(p#$Mutation($t23), LenVec(p#$Mutation($t22))), $Dereference($t23)));

    // write_back[Reference($t11).validators (vector<stake::IndividualValidatorPerformance>)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1003:17+67
    $t11 := $UpdateMutation($t11, $Update'$1_stake_ValidatorPerformance'_validators($Dereference($t11), $Dereference($t22)));

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1007:17+1
    assume {:print "$at(2,48087,48088)"} true;
L0:

    // $t28 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1007:17+1
    assume {:print "$at(2,48087,48088)"} true;
    $t28 := 0;
    assume $IsValid'u64'($t28);

    // trace_local[f]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1007:13+1
    assume {:print "$track_local(38,52,3):", $t28} $t28 == $t28;

    // $t29 := vector::length<u64>($t1) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1008:21+40
    assume {:print "$at(2,48110,48150)"} true;
    call $t29 := $1_vector_length'u64'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,48110,48150)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // trace_local[f_len]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1008:13+5
    assume {:print "$track_local(38,52,4):", $t29} $t29 == $t29;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1010:13+95
    assume {:print "$at(2,48181,48276)"} true;
L8:

    // assert Eq<num>(Len<stake::IndividualValidatorPerformance>(select stake::ValidatorPerformance.validators($t11)), $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume {:print "$at(2,48204,48262)"} true;
    assert {:msg "assert_failed(2,48204,48262): base case of the loop invariant does not hold"}
      $IsEqual'num'(LenVec($validators#$1_stake_ValidatorPerformance($Dereference($t11))), $t14);

    // $t3 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t3;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'u64'($t3);

    // $t30 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t30;

    // assume WellFormed($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'bool'($t30);

    // $t31 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t31;

    // assume WellFormed($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'u64'($t31);

    // $t32 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t32;

    // assume WellFormed($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'bool'($t32);

    // $t33 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t33;

    // assume WellFormed($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'u64'($t33);

    // $t34 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t34;

    // assume WellFormed($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'u64'($t34);

    // $t35 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t35;

    // assume WellFormed($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'u64'($t35);

    // $t36 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t36;

    // assume WellFormed($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'u64'($t36);

    // $t37 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t37;

    // assume WellFormed($t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'u64'($t37);

    // $t11 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $temp_0'$1_stake_ValidatorPerformance';
    $t11 := $UpdateMutation($t11, $temp_0'$1_stake_ValidatorPerformance');

    // assume WellFormed($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'$1_stake_ValidatorPerformance'($Dereference($t11));

    // $t38 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t38;

    // assume WellFormed($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'vec'$1_stake_IndividualValidatorPerformance''($Dereference($t38));

    // $t39 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t39;

    // assume WellFormed($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'$1_stake_IndividualValidatorPerformance'($Dereference($t39));

    // $t40 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    havoc $t40;

    // assume WellFormed($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsValid'u64'($Dereference($t40));

    // trace_local[f]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume {:print "$info(): enter loop, variable(s) f havocked and reassigned"} true;
    assume {:print "$track_local(38,52,3):", $t3} $t3 == $t3;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume {:print "$info(): loop invariant holds at current state"} true;
    assume !$abort_flag;

    // assume Eq<num>(Len<stake::IndividualValidatorPerformance>(select stake::ValidatorPerformance.validators($t11)), $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume $IsEqual'num'(LenVec($validators#$1_stake_ValidatorPerformance($Dereference($t11))), $t14);

    // $t30 := <($t3, $t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1013:15+1
    assume {:print "$at(2,48292,48293)"} true;
    call $t30 := $Lt($t3, $t29);

    // if ($t30) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1009:9+621
    assume {:print "$at(2,48160,48781)"} true;
    if ($t30) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1009:9+621
L4:

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1015:51+24
    assume {:print "$at(2,48363,48387)"} true;
L5:

    // $t31 := vector::borrow<u64>($t1, $t3) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1015:36+43
    assume {:print "$at(2,48348,48391)"} true;
    call $t31 := $1_vector_borrow'u64'($t1, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,48348,48391)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // trace_local[validator_index]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1015:17+15
    assume {:print "$track_local(38,52,7):", $t31} $t31 == $t31;

    // $t32 := <($t31, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1016:33+1
    assume {:print "$at(2,48425,48426)"} true;
    call $t32 := $Lt($t31, $t14);

    // if ($t32) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1016:13+342
    if ($t32) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1017:57+14
    assume {:print "$at(2,48500,48514)"} true;
L7:

    // $t38 := borrow_field<stake::ValidatorPerformance>.validators($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1017:52+30
    assume {:print "$at(2,48495,48525)"} true;
    $t38 := $ChildMutation($t11, 0, $validators#$1_stake_ValidatorPerformance($Dereference($t11)));

    // $t39 := vector::borrow_mut<stake::IndividualValidatorPerformance>($t38, $t31) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1017:33+67
    call $t39,$t38 := $1_vector_borrow_mut'$1_stake_IndividualValidatorPerformance'($t38, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,48476,48543)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // trace_local[validator#1]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1017:21+9
    $temp_0'$1_stake_IndividualValidatorPerformance' := $Dereference($t39);
    assume {:print "$track_local(38,52,6):", $temp_0'$1_stake_IndividualValidatorPerformance'} $temp_0'$1_stake_IndividualValidatorPerformance' == $temp_0'$1_stake_IndividualValidatorPerformance';

    // assume Le(Add(select stake::IndividualValidatorPerformance.failed_proposals($t39), 1), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1019:21+49
    assume {:print "$at(2,48588,48637)"} true;
    assume (($failed_proposals#$1_stake_IndividualValidatorPerformance($Dereference($t39)) + 1) <= 18446744073709551615);

    // $t33 := get_field<stake::IndividualValidatorPerformance>.failed_proposals($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1021:46+26
    assume {:print "$at(2,48702,48728)"} true;
    $t33 := $failed_proposals#$1_stake_IndividualValidatorPerformance($Dereference($t39));

    // $t34 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1021:75+1
    $t34 := 1;
    assume $IsValid'u64'($t34);

    // $t35 := +($t33, $t34) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1021:73+1
    call $t35 := $AddU64($t33, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,48729,48730)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // $t40 := borrow_field<stake::IndividualValidatorPerformance>.failed_proposals($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1021:17+26
    $t40 := $ChildMutation($t39, 1, $failed_proposals#$1_stake_IndividualValidatorPerformance($Dereference($t39)));

    // write_ref($t40, $t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1021:17+59
    $t40 := $UpdateMutation($t40, $t35);

    // write_back[Reference($t39).failed_proposals (u64)]($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1021:17+59
    $t39 := $UpdateMutation($t39, $Update'$1_stake_IndividualValidatorPerformance'_failed_proposals($Dereference($t39), $Dereference($t40)));

    // write_back[Reference($t38)[]]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1021:17+59
    $t38 := $UpdateMutation($t38, UpdateVec($Dereference($t38), ReadVec(p#$Mutation($t39), LenVec(p#$Mutation($t38))), $Dereference($t39)));

    // write_back[Reference($t11).validators (vector<stake::IndividualValidatorPerformance>)]($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1021:17+59
    $t11 := $UpdateMutation($t11, $Update'$1_stake_ValidatorPerformance'_validators($Dereference($t11), $Dereference($t38)));

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1023:17+1
    assume {:print "$at(2,48765,48766)"} true;
L6:

    // $t36 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1023:21+1
    assume {:print "$at(2,48769,48770)"} true;
    $t36 := 1;
    assume $IsValid'u64'($t36);

    // $t37 := +($t3, $t36) on_abort goto L11 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1023:19+1
    call $t37 := $AddU64($t3, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,48767,48768)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,52):", $t12} $t12 == $t12;
        goto L11;
    }

    // trace_local[f]($t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1023:13+1
    assume {:print "$track_local(38,52,3):", $t37} $t37 == $t37;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1023:22+1
    goto L9;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1024:10+1
    assume {:print "$at(2,48781,48782)"} true;
L3:

    // write_back[stake::ValidatorPerformance@]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1024:10+1
    assume {:print "$at(2,48781,48782)"} true;
    $1_stake_ValidatorPerformance_$memory := $ResourceUpdate($1_stake_ValidatorPerformance_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorPerformance>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+104
    assume {:print "$at(3,548,652)"} true;
    assert {:msg "assert_failed(3,548,652): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorPerformance_$memory, 1));

    // destroy($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1024:10+1
    assume {:print "$at(2,48781,48782)"} true;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1024:10+1
    goto L10;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1024:10+1
    // Loop invariant checking block for the loop started with header: L8
L9:

    // assert Eq<num>(Len<stake::IndividualValidatorPerformance>(select stake::ValidatorPerformance.validators($t11)), $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume {:print "$at(2,48204,48262)"} true;
    assert {:msg "assert_failed(2,48204,48262): induction case of the loop invariant does not hold"}
      $IsEqual'num'(LenVec($validators#$1_stake_ValidatorPerformance($Dereference($t11))), $t14);

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1011:17+58
    assume false;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1025:5+1
    assume {:print "$at(2,48787,48788)"} true;
L10:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:150:9+16
    assume {:print "$at(3,6681,6697)"} true;
    assert {:msg "assert_failed(3,6681,6697): function does not abort under this condition"}
      !false;

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:150:9+16
    return;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1025:5+1
    assume {:print "$at(2,48787,48788)"} true;
L11:

    // assert false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:146:5+222
    assume {:print "$at(3,6481,6703)"} true;
    assert {:msg "assert_failed(3,6481,6703): abort not covered by any of the `aborts_if` clauses"}
      false;

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:146:5+222
    $abort_code := $t12;
    $abort_flag := true;
    return;

    // label L14 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L14:

    // destroy($t11) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L13 at <internal>:1:1+10
    goto L13;

    // label L15 at <internal>:1:1+10
L15:

    // destroy($t17) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L12 at <internal>:1:1+10
    goto L12;

}

// fun stake::update_stake_pool [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+2969
procedure {:inline 1} $1_stake_update_stake_pool(_$t0: $1_stake_ValidatorPerformance, _$t1: int, _$t2: $1_staking_config_StakingConfig) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t5: $1_stake_IndividualValidatorPerformance;
    var $t6: int;
    var $t7: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'));
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_stake_StakePool);
    var $t16: $1_stake_ValidatorConfig;
    var $t17: $1_staking_config_StakingRewardsConfig;
    var $t18: $1_fixed_point64_FixedPoint64;
    var $t19: $1_fixed_point64_FixedPoint64;
    var $t20: int;
    var $t21: int;
    var $t22: $1_fixed_point64_FixedPoint64;
    var $t23: $Mutation ($1_stake_StakePool);
    var $t24: int;
    var $t25: $1_stake_ValidatorConfig;
    var $t26: Vec ($1_stake_IndividualValidatorPerformance);
    var $t27: int;
    var $t28: $1_stake_IndividualValidatorPerformance;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: $1_staking_config_StakingRewardsConfig;
    var $t34: $1_fixed_point64_FixedPoint64;
    var $t35: $1_fixed_point64_FixedPoint64;
    var $t36: int;
    var $t37: int;
    var $t38: $1_fixed_point64_FixedPoint64;
    var $t39: int;
    var $t40: int;
    var $t41: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t42: int;
    var $t43: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t44: int;
    var $t45: int;
    var $t46: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t47: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t48: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t49: bool;
    var $t50: int;
    var $t51: $Mutation ($1_stake_ValidatorFees);
    var $t52: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'));
    var $t53: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t54: bool;
    var $t55: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t56: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t57: int;
    var $t58: int;
    var $t59: bool;
    var $t60: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t61: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t62: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t63: $Mutation ($1_event_EventHandle'$1_stake_DistributeRewardsEvent');
    var $t64: $1_stake_DistributeRewardsEvent;
    var $t0: $1_stake_ValidatorPerformance;
    var $t1: int;
    var $t2: $1_staking_config_StakingConfig;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_IndividualValidatorPerformance': $1_stake_IndividualValidatorPerformance;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_ValidatorPerformance': $1_stake_ValidatorPerformance;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''': Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t17, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t17 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t18, select staking_config::StakingRewardsConfig.rewards_rate($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t18 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t17));

    // assume Identical($t19, select staking_config::StakingRewardsConfig.min_rewards_rate($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t19 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t17));

    // assume Identical($t20, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t20 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t17));

    // assume Identical($t21, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t21 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t17));

    // assume Identical($t22, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t22 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t17));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t18, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t18, $1_fixed_point64_spec_create_from_u128(1)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t19, $t18)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t19, $t18));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t20, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t20, 31536000));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t21, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t21 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t22), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t22) <= 1));

    // trace_local[validator_perf]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume {:print "$at(2,55673,55674)"} true;
    assume {:print "$track_local(38,53,0):", $t0} $t0 == $t0;

    // trace_local[pool_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume {:print "$track_local(38,53,1):", $t1} $t1 == $t1;

    // trace_local[staking_config]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume {:print "$track_local(38,53,2):", $t2} $t2 == $t2;

    // $t23 := borrow_global<stake::StakePool>($t1) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1160:26+17
    assume {:print "$at(2,55921,55938)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,55921,55938)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[stake_pool]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1160:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t23);
    assume {:print "$track_local(38,53,15):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t25 := get_global<stake::ValidatorConfig>($t1) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1161:32+13
    assume {:print "$at(2,55996,56009)"} true;
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t25 := $ResourceValue($1_stake_ValidatorConfig_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,55996,56009)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[validator_config]($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1161:13+16
    assume {:print "$track_local(38,53,16):", $t25} $t25 == $t25;

    // $t26 := get_field<stake::ValidatorPerformance>.validators($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1162:49+26
    assume {:print "$at(2,56090,56116)"} true;
    $t26 := $validators#$1_stake_ValidatorPerformance($t0);

    // $t27 := get_field<stake::ValidatorConfig>.validator_index($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1162:77+32
    $t27 := $validator_index#$1_stake_ValidatorConfig($t25);

    // $t28 := vector::borrow<stake::IndividualValidatorPerformance>($t26, $t27) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1162:34+76
    call $t28 := $1_vector_borrow'$1_stake_IndividualValidatorPerformance'($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,56075,56151)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[cur_validator_perf]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1162:13+18
    assume {:print "$track_local(38,53,5):", $t28} $t28 == $t28;

    // $t29 := get_field<stake::IndividualValidatorPerformance>.successful_proposals($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1163:40+39
    assume {:print "$at(2,56192,56231)"} true;
    $t29 := $successful_proposals#$1_stake_IndividualValidatorPerformance($t28);

    // trace_local[num_successful_proposals]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1163:13+24
    assume {:print "$track_local(38,53,8):", $t29} $t29 == $t29;

    // assume Le(Add(select stake::IndividualValidatorPerformance.successful_proposals($t28), select stake::IndividualValidatorPerformance.failed_proposals($t28)), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1167:13+96
    assume {:print "$at(2,56458,56554)"} true;
    assume (($successful_proposals#$1_stake_IndividualValidatorPerformance($t28) + $failed_proposals#$1_stake_IndividualValidatorPerformance($t28)) <= 18446744073709551615);

    // $t30 := get_field<stake::IndividualValidatorPerformance>.successful_proposals($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1169:35+39
    assume {:print "$at(2,56600,56639)"} true;
    $t30 := $successful_proposals#$1_stake_IndividualValidatorPerformance($t28);

    // $t31 := get_field<stake::IndividualValidatorPerformance>.failed_proposals($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1169:77+35
    $t31 := $failed_proposals#$1_stake_IndividualValidatorPerformance($t28);

    // $t32 := +($t30, $t31) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1169:75+1
    call $t32 := $AddU64($t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,56640,56641)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[num_total_proposals]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1169:13+19
    assume {:print "$track_local(38,53,9):", $t32} $t32 == $t32;

    // assume Identical($t33, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t33 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t34, select staking_config::StakingRewardsConfig.rewards_rate($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t34 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t33));

    // assume Identical($t35, select staking_config::StakingRewardsConfig.min_rewards_rate($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t35 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t33));

    // assume Identical($t36, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t36 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t33));

    // assume Identical($t37, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t37 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t33));

    // assume Identical($t38, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t38 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t33));

    // ($t39, $t40) := staking_config::get_reward_rate($t2) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1170:56+47
    assume {:print "$at(2,56734,56781)"} true;
    call $t39,$t40 := $1_staking_config_get_reward_rate($t2);
    if ($abort_flag) {
        assume {:print "$at(2,56734,56781)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[rewards_rate_denominator]($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1170:28+24
    assume {:print "$track_local(38,53,14):", $t40} $t40 == $t40;

    // trace_local[rewards_rate]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1170:14+12
    assume {:print "$track_local(38,53,13):", $t39} $t39 == $t39;

    // $t41 := borrow_field<stake::StakePool>.active($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1172:13+22
    assume {:print "$at(2,56844,56866)"} true;
    $t41 := $ChildMutation($t23, 0, $active#$1_stake_StakePool($Dereference($t23)));

    // $t42 := stake::distribute_rewards($t41, $t29, $t32, $t39, $t40) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1171:30+199
    assume {:print "$at(2,56812,57011)"} true;
    call $t42,$t41 := $1_stake_distribute_rewards($t41, $t29, $t32, $t39, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,56812,57011)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).active (coin::Coin<aptos_coin::AptosCoin>)]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1171:30+199
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_active($Dereference($t23), $Dereference($t41)));

    // trace_local[rewards_active]($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1171:13+14
    assume {:print "$track_local(38,53,10):", $t42} $t42 == $t42;

    // $t43 := borrow_field<stake::StakePool>.pending_inactive($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1179:13+32
    assume {:print "$at(2,57084,57116)"} true;
    $t43 := $ChildMutation($t23, 3, $pending_inactive#$1_stake_StakePool($Dereference($t23)));

    // $t44 := stake::distribute_rewards($t43, $t29, $t32, $t39, $t40) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1178:40+209
    assume {:print "$at(2,57052,57261)"} true;
    call $t44,$t43 := $1_stake_distribute_rewards($t43, $t29, $t32, $t39, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,57052,57261)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1178:40+209
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t23), $Dereference($t43)));

    // trace_local[rewards_pending_inactive]($t44) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1178:13+24
    assume {:print "$track_local(38,53,12):", $t44} $t44 == $t44;

    // assume Le(Add($t42, $t44), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1186:13+60
    assume {:print "$at(2,57290,57350)"} true;
    assume (($t42 + $t44) <= 18446744073709551615);

    // $t45 := +($t42, $t44) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1188:45+1
    assume {:print "$at(2,57406,57407)"} true;
    call $t45 := $AddU64($t42, $t44);
    if ($abort_flag) {
        assume {:print "$at(2,57406,57407)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[rewards_amount]($t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1188:13+14
    assume {:print "$track_local(38,53,11):", $t45} $t45 == $t45;

    // $t46 := borrow_field<stake::StakePool>.active($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:21+22
    assume {:print "$at(2,57505,57527)"} true;
    $t46 := $ChildMutation($t23, 0, $active#$1_stake_StakePool($Dereference($t23)));

    // $t47 := borrow_field<stake::StakePool>.pending_active($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:63+30
    $t47 := $ChildMutation($t23, 2, $pending_active#$1_stake_StakePool($Dereference($t23)));

    // $t48 := coin::extract_all<aptos_coin::AptosCoin>($t47) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:45+49
    call $t48,$t47 := $1_coin_extract_all'$1_aptos_coin_AptosCoin'($t47);
    if ($abort_flag) {
        assume {:print "$at(2,57529,57578)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).pending_active (coin::Coin<aptos_coin::AptosCoin>)]($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:45+49
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_pending_active($Dereference($t23), $Dereference($t47)));

    // coin::merge<aptos_coin::AptosCoin>($t46, $t48) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:9+86
    call $t46 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t46, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,57493,57579)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).active (coin::Coin<aptos_coin::AptosCoin>)]($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:9+86
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_active($Dereference($t23), $Dereference($t46)));

    // $t49 := features::collect_and_distribute_gas_fees() on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1193:13+43
    assume {:print "$at(2,57648,57691)"} true;
    call $t49 := $1_features_collect_and_distribute_gas_fees();
    if ($abort_flag) {
        assume {:print "$at(2,57648,57691)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // if ($t49) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1193:9+360
    if ($t49) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:68+16
    assume {:print "$at(2,57762,57778)"} true;
L1:

    // $t50 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:68+16
    assume {:print "$at(2,57762,57778)"} true;
    $t50 := 1;
    assume $IsValid'address'($t50);

    // $t51 := borrow_global<stake::ValidatorFees>($t50) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:35+17
    if (!$ResourceExists($1_stake_ValidatorFees_$memory, $t50)) {
        call $ExecFailureAbort();
    } else {
        $t51 := $Mutation($Global($t50), EmptyVec(), $ResourceValue($1_stake_ValidatorFees_$memory, $t50));
    }
    if ($abort_flag) {
        assume {:print "$at(2,57729,57746)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // $t52 := borrow_field<stake::ValidatorFees>.fees_table($t51) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:30+66
    $t52 := $ChildMutation($t51, 0, $fees_table#$1_stake_ValidatorFees($Dereference($t51)));

    // trace_local[fees_table]($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:17+10
    $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''' := $Dereference($t52);
    assume {:print "$track_local(38,53,7):", $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''} $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''' == $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''';

    // $t53 := read_ref($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:32+26
    assume {:print "$at(2,57823,57849)"} true;
    $t53 := $Dereference($t52);

    // $t54 := table::contains<address, coin::Coin<aptos_coin::AptosCoin>>($t53, $t1) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:17+41
    call $t54 := $1_table_contains'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''($t53, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,57808,57849)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // if ($t54) goto L3 else goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:13+189
    if ($t54) { goto L3; } else { goto L8; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:42+10
    assume {:print "$at(2,57894,57904)"} true;
L3:

    // $t55 := table::remove<address, coin::Coin<aptos_coin::AptosCoin>>($t52, $t1) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:28+39
    assume {:print "$at(2,57880,57919)"} true;
    call $t55,$t52 := $1_table_remove'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''($t52, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,57880,57919)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t51).fees_table (table::Table<address, coin::Coin<aptos_coin::AptosCoin>>)]($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:28+39
    $t51 := $UpdateMutation($t51, $Update'$1_stake_ValidatorFees'_fees_table($Dereference($t51), $Dereference($t52)));

    // write_back[stake::ValidatorFees@]($t51) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:28+39
    $1_stake_ValidatorFees_$memory := $ResourceUpdate($1_stake_ValidatorFees_$memory, $GlobalLocationAddress($t51),
        $Dereference($t51));

    // trace_local[coin]($t55) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:21+4
    assume {:print "$track_local(38,53,4):", $t55} $t55 == $t55;

    // $t56 := borrow_field<stake::StakePool>.active($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1197:29+22
    assume {:print "$at(2,57949,57971)"} true;
    $t56 := $ChildMutation($t23, 0, $active#$1_stake_StakePool($Dereference($t23)));

    // coin::merge<aptos_coin::AptosCoin>($t56, $t55) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1197:17+41
    call $t56 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t56, $t55);
    if ($abort_flag) {
        assume {:print "$at(2,57937,57978)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).active (coin::Coin<aptos_coin::AptosCoin>)]($t56) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1197:17+41
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_active($Dereference($t23), $Dereference($t56)));

    // goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1197:58+1
    goto L0;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:13+189
    assume {:print "$at(2,57804,57993)"} true;
L2:

    // destroy($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:13+189
    assume {:print "$at(2,57804,57993)"} true;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1202:41+10
    assume {:print "$at(2,58168,58178)"} true;
L0:

    // $t57 := get_field<stake::StakePool>.locked_until_secs($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1202:41+28
    assume {:print "$at(2,58168,58196)"} true;
    $t57 := $locked_until_secs#$1_stake_StakePool($Dereference($t23));

    // trace_local[current_lockup_expiration]($t57) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1202:13+25
    assume {:print "$track_local(38,53,6):", $t57} $t57 == $t57;

    // $t58 := timestamp::now_seconds() on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1203:13+24
    assume {:print "$at(2,58210,58234)"} true;
    call $t58 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,58210,58234)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // $t59 := >=($t58, $t57) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1203:38+2
    call $t59 := $Ge($t58, $t57);

    // if ($t59) goto L5 else goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1203:9+221
    if ($t59) { goto L5; } else { goto L4; }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1205:22+10
    assume {:print "$at(2,58313,58323)"} true;
L5:

    // $t60 := borrow_field<stake::StakePool>.inactive($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1205:17+24
    assume {:print "$at(2,58308,58332)"} true;
    $t60 := $ChildMutation($t23, 1, $inactive#$1_stake_StakePool($Dereference($t23)));

    // $t61 := borrow_field<stake::StakePool>.pending_inactive($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1206:35+32
    assume {:print "$at(2,58368,58400)"} true;
    $t61 := $ChildMutation($t23, 3, $pending_inactive#$1_stake_StakePool($Dereference($t23)));

    // $t62 := coin::extract_all<aptos_coin::AptosCoin>($t61) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1206:17+51
    call $t62,$t61 := $1_coin_extract_all'$1_aptos_coin_AptosCoin'($t61);
    if ($abort_flag) {
        assume {:print "$at(2,58350,58401)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t61) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1206:17+51
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t23), $Dereference($t61)));

    // coin::merge<aptos_coin::AptosCoin>($t60, $t62) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1204:13+137
    assume {:print "$at(2,58279,58416)"} true;
    call $t60 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t60, $t62);
    if ($abort_flag) {
        assume {:print "$at(2,58279,58416)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t60) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1204:13+137
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_inactive($Dereference($t23), $Dereference($t60)));

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1211:18+10
    assume {:print "$at(2,58474,58484)"} true;
L4:

    // $t63 := borrow_field<stake::StakePool>.distribute_rewards_events($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1211:13+41
    assume {:print "$at(2,58469,58510)"} true;
    $t63 := $ChildMutation($t23, 15, $distribute_rewards_events#$1_stake_StakePool($Dereference($t23)));

    // $t64 := pack stake::DistributeRewardsEvent($t1, $t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1212:13+100
    assume {:print "$at(2,58524,58624)"} true;
    $t64 := $1_stake_DistributeRewardsEvent($t1, $t45);

    // opaque begin: event::emit_event<stake::DistributeRewardsEvent>($t63, $t64) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1210:9+197
    assume {:print "$at(2,58438,58635)"} true;

    // opaque end: event::emit_event<stake::DistributeRewardsEvent>($t63, $t64) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1210:9+197

    // write_back[Reference($t23).distribute_rewards_events (event::EventHandle<stake::DistributeRewardsEvent>)]($t63) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1210:9+197
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_distribute_rewards_events($Dereference($t23), $Dereference($t63)));

    // write_back[stake::StakePool@]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1210:9+197
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t23),
        $Dereference($t23));

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1217:5+1
    assume {:print "$at(2,58641,58642)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1217:5+1
    assume {:print "$at(2,58641,58642)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1217:5+1
L7:

    // abort($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1217:5+1
    assume {:print "$at(2,58641,58642)"} true;
    $abort_code := $t24;
    $abort_flag := true;
    return;

    // label L8 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L8:

    // destroy($t51) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L2 at <internal>:1:1+10
    goto L2;

}

// fun stake::update_stake_pool [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+2969
procedure {:timeLimit 40} $1_stake_update_stake_pool$verify(_$t0: $1_stake_ValidatorPerformance, _$t1: int, _$t2: $1_staking_config_StakingConfig) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t5: $1_stake_IndividualValidatorPerformance;
    var $t6: int;
    var $t7: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'));
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_stake_StakePool);
    var $t16: $1_stake_ValidatorConfig;
    var $t17: $1_staking_config_StakingRewardsConfig;
    var $t18: $1_fixed_point64_FixedPoint64;
    var $t19: $1_fixed_point64_FixedPoint64;
    var $t20: int;
    var $t21: int;
    var $t22: $1_fixed_point64_FixedPoint64;
    var $t23: $Mutation ($1_stake_StakePool);
    var $t24: int;
    var $t25: $1_stake_ValidatorConfig;
    var $t26: Vec ($1_stake_IndividualValidatorPerformance);
    var $t27: int;
    var $t28: $1_stake_IndividualValidatorPerformance;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: $1_staking_config_StakingRewardsConfig;
    var $t34: $1_fixed_point64_FixedPoint64;
    var $t35: $1_fixed_point64_FixedPoint64;
    var $t36: int;
    var $t37: int;
    var $t38: $1_fixed_point64_FixedPoint64;
    var $t39: int;
    var $t40: int;
    var $t41: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t42: int;
    var $t43: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t44: int;
    var $t45: int;
    var $t46: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t47: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t48: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t49: bool;
    var $t50: int;
    var $t51: $Mutation ($1_stake_ValidatorFees);
    var $t52: $Mutation (Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin'));
    var $t53: Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t54: bool;
    var $t55: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t56: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t57: int;
    var $t58: int;
    var $t59: bool;
    var $t60: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t61: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t62: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t63: $Mutation ($1_event_EventHandle'$1_stake_DistributeRewardsEvent');
    var $t64: $1_stake_DistributeRewardsEvent;
    var $t0: $1_stake_ValidatorPerformance;
    var $t1: int;
    var $t2: $1_staking_config_StakingConfig;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_IndividualValidatorPerformance': $1_stake_IndividualValidatorPerformance;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_stake_ValidatorConfig': $1_stake_ValidatorConfig;
    var $temp_0'$1_stake_ValidatorPerformance': $1_stake_ValidatorPerformance;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''': Table int ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_stake_StakePool_$memory#47: $Memory $1_stake_StakePool;
    var $1_stake_ValidatorConfig_$memory#48: $Memory $1_stake_ValidatorConfig;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume {:print "$at(2,55673,55674)"} true;
    assume $IsValid'$1_stake_ValidatorPerformance'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume $IsValid'address'($t1);

    // assume And(WellFormed($t2), And(And(Le(select staking_config::StakingConfig.rewards_rate($t2), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($t2), 0)), Le(select staking_config::StakingConfig.rewards_rate($t2), select staking_config::StakingConfig.rewards_rate_denominator($t2)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume ($IsValid'$1_staking_config_StakingConfig'($t2) && ((($rewards_rate#$1_staking_config_StakingConfig($t2) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($t2) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($t2) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($t2))));

    // assume forall $rsc: ResourceDomain<features::Features>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingRewardsConfig>(): And(WellFormed($rsc), And(And(And(fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.rewards_rate($rsc), fixed_point64::spec_create_from_u128(1)), fixed_point64::spec_less_or_equal(select staking_config::StakingRewardsConfig.min_rewards_rate($rsc), select staking_config::StakingRewardsConfig.rewards_rate($rsc))), Eq<u64>(select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($rsc), 31536000)), Le(fixed_point64::spec_ceil(select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($rsc)), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingRewardsConfig'($rsc) && ((($1_fixed_point64_spec_less_or_equal($rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $1_fixed_point64_spec_create_from_u128(1)) && $1_fixed_point64_spec_less_or_equal($min_rewards_rate#$1_staking_config_StakingRewardsConfig($rsc), $rewards_rate#$1_staking_config_StakingRewardsConfig($rsc))) && $IsEqual'u64'($rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($rsc), 31536000)) && ($1_fixed_point64_spec_ceil($rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($rsc)) <= 1))))));

    // assume forall $rsc: ResourceDomain<stake::AptosCoinCapabilities>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_AptosCoinCapabilities_$memory, $a_0);
    ($IsValid'$1_stake_AptosCoinCapabilities'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorFees>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorFees_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorFees_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorFees'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+2969
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+2969
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t17, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t17 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t18, select staking_config::StakingRewardsConfig.rewards_rate($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t18 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t17));

    // assume Identical($t19, select staking_config::StakingRewardsConfig.min_rewards_rate($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t19 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t17));

    // assume Identical($t20, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t20 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t17));

    // assume Identical($t21, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t21 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t17));

    // assume Identical($t22, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t22 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t17));

    // assume exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assume $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assume exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assume $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assume exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assume $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assume exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assume $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assume Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assume ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assume $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assume exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assume $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t18, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t18, $1_fixed_point64_spec_create_from_u128(1)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t19, $t18)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t19, $t18));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t20, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t20, 31536000));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t21, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t21 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assume Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t22), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assume ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t22) <= 1));

    // @47 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    $1_stake_StakePool_$memory#47 := $1_stake_StakePool_$memory;

    // @48 := save_mem(stake::ValidatorConfig) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    $1_stake_ValidatorConfig_$memory#48 := $1_stake_ValidatorConfig_$memory;

    // trace_local[validator_perf]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume {:print "$at(2,55673,55674)"} true;
    assume {:print "$track_local(38,53,0):", $t0} $t0 == $t0;

    // trace_local[pool_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume {:print "$track_local(38,53,1):", $t1} $t1 == $t1;

    // trace_local[staking_config]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1155:5+1
    assume {:print "$track_local(38,53,2):", $t2} $t2 == $t2;

    // $t23 := borrow_global<stake::StakePool>($t1) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1160:26+17
    assume {:print "$at(2,55921,55938)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,55921,55938)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[stake_pool]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1160:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t23);
    assume {:print "$track_local(38,53,15):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t25 := get_global<stake::ValidatorConfig>($t1) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1161:32+13
    assume {:print "$at(2,55996,56009)"} true;
    if (!$ResourceExists($1_stake_ValidatorConfig_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t25 := $ResourceValue($1_stake_ValidatorConfig_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,55996,56009)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[validator_config]($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1161:13+16
    assume {:print "$track_local(38,53,16):", $t25} $t25 == $t25;

    // $t26 := get_field<stake::ValidatorPerformance>.validators($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1162:49+26
    assume {:print "$at(2,56090,56116)"} true;
    $t26 := $validators#$1_stake_ValidatorPerformance($t0);

    // $t27 := get_field<stake::ValidatorConfig>.validator_index($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1162:77+32
    $t27 := $validator_index#$1_stake_ValidatorConfig($t25);

    // $t28 := vector::borrow<stake::IndividualValidatorPerformance>($t26, $t27) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1162:34+76
    call $t28 := $1_vector_borrow'$1_stake_IndividualValidatorPerformance'($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,56075,56151)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[cur_validator_perf]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1162:13+18
    assume {:print "$track_local(38,53,5):", $t28} $t28 == $t28;

    // $t29 := get_field<stake::IndividualValidatorPerformance>.successful_proposals($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1163:40+39
    assume {:print "$at(2,56192,56231)"} true;
    $t29 := $successful_proposals#$1_stake_IndividualValidatorPerformance($t28);

    // trace_local[num_successful_proposals]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1163:13+24
    assume {:print "$track_local(38,53,8):", $t29} $t29 == $t29;

    // assume Le(Add(select stake::IndividualValidatorPerformance.successful_proposals($t28), select stake::IndividualValidatorPerformance.failed_proposals($t28)), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1167:13+96
    assume {:print "$at(2,56458,56554)"} true;
    assume (($successful_proposals#$1_stake_IndividualValidatorPerformance($t28) + $failed_proposals#$1_stake_IndividualValidatorPerformance($t28)) <= 18446744073709551615);

    // $t30 := get_field<stake::IndividualValidatorPerformance>.successful_proposals($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1169:35+39
    assume {:print "$at(2,56600,56639)"} true;
    $t30 := $successful_proposals#$1_stake_IndividualValidatorPerformance($t28);

    // $t31 := get_field<stake::IndividualValidatorPerformance>.failed_proposals($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1169:77+35
    $t31 := $failed_proposals#$1_stake_IndividualValidatorPerformance($t28);

    // $t32 := +($t30, $t31) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1169:75+1
    call $t32 := $AddU64($t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,56640,56641)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[num_total_proposals]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1169:13+19
    assume {:print "$track_local(38,53,9):", $t32} $t32 == $t32;

    // assume Identical($t33, global<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:217:9+76
    assume {:print "$at(103,9632,9708)"} true;
    assume ($t33 == $ResourceValue($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assume Identical($t34, select staking_config::StakingRewardsConfig.rewards_rate($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:218:9+55
    assume {:print "$at(103,9717,9772)"} true;
    assume ($t34 == $rewards_rate#$1_staking_config_StakingRewardsConfig($t33));

    // assume Identical($t35, select staking_config::StakingRewardsConfig.min_rewards_rate($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:219:9+63
    assume {:print "$at(103,9781,9844)"} true;
    assume ($t35 == $min_rewards_rate#$1_staking_config_StakingRewardsConfig($t33));

    // assume Identical($t36, select staking_config::StakingRewardsConfig.rewards_rate_period_in_secs($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:220:9+85
    assume {:print "$at(103,9853,9938)"} true;
    assume ($t36 == $rewards_rate_period_in_secs#$1_staking_config_StakingRewardsConfig($t33));

    // assume Identical($t37, select staking_config::StakingRewardsConfig.last_rewards_rate_period_start_in_secs($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:221:9+107
    assume {:print "$at(103,9947,10054)"} true;
    assume ($t37 == $last_rewards_rate_period_start_in_secs#$1_staking_config_StakingRewardsConfig($t33));

    // assume Identical($t38, select staking_config::StakingRewardsConfig.rewards_rate_decrease_rate($t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:222:9+83
    assume {:print "$at(103,10063,10146)"} true;
    assume ($t38 == $rewards_rate_decrease_rate#$1_staking_config_StakingRewardsConfig($t33));

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:211:9+70
    assume {:print "$at(103,9307,9377)"} true;
    assert {:msg "assert_failed(103,9307,9377): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), exists<staking_config::StakingRewardsConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:216:9+56
    assume {:print "$at(103,9567,9623)"} true;
    assert {:msg "assert_failed(103,9567,9623): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t34, fixed_point64::spec_create_from_u128(1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:224:9+129
    assume {:print "$at(103,10156,10285)"} true;
    assert {:msg "assert_failed(103,10156,10285): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t34, $1_fixed_point64_spec_create_from_u128(1)));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), fixed_point64::spec_less_or_equal($t35, $t34)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:227:9+75
    assume {:print "$at(103,10294,10369)"} true;
    assert {:msg "assert_failed(103,10294,10369): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $1_fixed_point64_spec_less_or_equal($t35, $t34));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Eq<u64>($t36, 31536000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:228:9+57
    assume {:print "$at(103,10378,10435)"} true;
    assert {:msg "assert_failed(103,10378,10435): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> $IsEqual'u64'($t36, 31536000));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le($t37, timestamp::spec_now_seconds())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:229:9+81
    assume {:print "$at(103,10444,10525)"} true;
    assert {:msg "assert_failed(103,10444,10525): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($t37 <= $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory)));

    // assert Implies(features::spec_periodical_reward_rate_decrease_enabled(), Le(fixed_point64::spec_ceil($t38), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:230:9+67
    assume {:print "$at(103,10534,10601)"} true;
    assert {:msg "assert_failed(103,10534,10601): precondition does not hold at this call"}
      ($1_features_spec_periodical_reward_rate_decrease_enabled() ==> ($1_fixed_point64_spec_ceil($t38) <= 1));

    // ($t39, $t40) := staking_config::get_reward_rate($t2) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1170:56+47
    assume {:print "$at(2,56734,56781)"} true;
    call $t39,$t40 := $1_staking_config_get_reward_rate($t2);
    if ($abort_flag) {
        assume {:print "$at(2,56734,56781)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[rewards_rate_denominator]($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1170:28+24
    assume {:print "$track_local(38,53,14):", $t40} $t40 == $t40;

    // trace_local[rewards_rate]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1170:14+12
    assume {:print "$track_local(38,53,13):", $t39} $t39 == $t39;

    // $t41 := borrow_field<stake::StakePool>.active($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1172:13+22
    assume {:print "$at(2,56844,56866)"} true;
    $t41 := $ChildMutation($t23, 0, $active#$1_stake_StakePool($Dereference($t23)));

    // assert exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assert {:msg "assert_failed(3,17638,17695): precondition does not hold at this call"}
      $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assert exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assert {:msg "assert_failed(3,17704,17760): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assert exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assert {:msg "assert_failed(3,17769,17817): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assert exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assert {:msg "assert_failed(3,17826,17875): precondition does not hold at this call"}
      $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assert Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assert {:msg "assert_failed(3,17884,18001): precondition does not hold at this call"}
      ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assert {:msg "assert_failed(3,18010,18080): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assert {:msg "assert_failed(3,18089,18138): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assert Le($t39, 1000000) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:163:9+42
    assume {:print "$at(3,7135,7177)"} true;
    assert {:msg "assert_failed(3,7135,7177): precondition does not hold at this call"}
      ($t39 <= 1000000);

    // assert Gt($t40, 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:164:9+38
    assume {:print "$at(3,7186,7224)"} true;
    assert {:msg "assert_failed(3,7186,7224): precondition does not hold at this call"}
      ($t40 > 0);

    // assert Le($t39, $t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:165:9+50
    assume {:print "$at(3,7233,7283)"} true;
    assert {:msg "assert_failed(3,7233,7283): precondition does not hold at this call"}
      ($t39 <= $t40);

    // assert Le($t29, $t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:166:9+57
    assume {:print "$at(3,7292,7349)"} true;
    assert {:msg "assert_failed(3,7292,7349): precondition does not hold at this call"}
      ($t29 <= $t32);

    // $t42 := stake::distribute_rewards($t41, $t29, $t32, $t39, $t40) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1171:30+199
    assume {:print "$at(2,56812,57011)"} true;
    call $t42,$t41 := $1_stake_distribute_rewards($t41, $t29, $t32, $t39, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,56812,57011)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).active (coin::Coin<aptos_coin::AptosCoin>)]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1171:30+199
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_active($Dereference($t23), $Dereference($t41)));

    // trace_local[rewards_active]($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1171:13+14
    assume {:print "$track_local(38,53,10):", $t42} $t42 == $t42;

    // $t43 := borrow_field<stake::StakePool>.pending_inactive($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1179:13+32
    assume {:print "$at(2,57084,57116)"} true;
    $t43 := $ChildMutation($t23, 3, $pending_inactive#$1_stake_StakePool($Dereference($t23)));

    // assert exists<stake::AptosCoinCapabilities>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:384:9+57
    assume {:print "$at(3,17638,17695)"} true;
    assert {:msg "assert_failed(3,17638,17695): precondition does not hold at this call"}
      $ResourceExists($1_stake_AptosCoinCapabilities_$memory, 1);

    // assert exists<stake::ValidatorPerformance>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:385:9+56
    assume {:print "$at(3,17704,17760)"} true;
    assert {:msg "assert_failed(3,17704,17760): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorPerformance_$memory, 1);

    // assert exists<stake::ValidatorSet>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:386:9+48
    assume {:print "$at(3,17769,17817)"} true;
    assert {:msg "assert_failed(3,17769,17817): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorSet_$memory, 1);

    // assert exists<staking_config::StakingConfig>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:387:9+49
    assume {:print "$at(3,17826,17875)"} true;
    assert {:msg "assert_failed(3,17826,17875): precondition does not hold at this call"}
      $ResourceExists($1_staking_config_StakingConfig_$memory, 1);

    // assert Or(exists<staking_config::StakingRewardsConfig>(1), Not(features::spec_periodical_reward_rate_decrease_enabled())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:388:9+117
    assume {:print "$at(3,17884,18001)"} true;
    assert {:msg "assert_failed(3,17884,18001): precondition does not hold at this call"}
      ($ResourceExists($1_staking_config_StakingRewardsConfig_$memory, 1) || !$1_features_spec_periodical_reward_rate_decrease_enabled());

    // assert exists<timestamp::CurrentTimeMicroseconds>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:389:9+70
    assume {:print "$at(3,18010,18080)"} true;
    assert {:msg "assert_failed(3,18010,18080): precondition does not hold at this call"}
      $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1);

    // assert exists<stake::ValidatorFees>(1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:390:9+49
    assume {:print "$at(3,18089,18138)"} true;
    assert {:msg "assert_failed(3,18089,18138): precondition does not hold at this call"}
      $ResourceExists($1_stake_ValidatorFees_$memory, 1);

    // assert Le($t39, 1000000) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:163:9+42
    assume {:print "$at(3,7135,7177)"} true;
    assert {:msg "assert_failed(3,7135,7177): precondition does not hold at this call"}
      ($t39 <= 1000000);

    // assert Gt($t40, 0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:164:9+38
    assume {:print "$at(3,7186,7224)"} true;
    assert {:msg "assert_failed(3,7186,7224): precondition does not hold at this call"}
      ($t40 > 0);

    // assert Le($t39, $t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:165:9+50
    assume {:print "$at(3,7233,7283)"} true;
    assert {:msg "assert_failed(3,7233,7283): precondition does not hold at this call"}
      ($t39 <= $t40);

    // assert Le($t29, $t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:166:9+57
    assume {:print "$at(3,7292,7349)"} true;
    assert {:msg "assert_failed(3,7292,7349): precondition does not hold at this call"}
      ($t29 <= $t32);

    // $t44 := stake::distribute_rewards($t43, $t29, $t32, $t39, $t40) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1178:40+209
    assume {:print "$at(2,57052,57261)"} true;
    call $t44,$t43 := $1_stake_distribute_rewards($t43, $t29, $t32, $t39, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,57052,57261)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1178:40+209
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t23), $Dereference($t43)));

    // trace_local[rewards_pending_inactive]($t44) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1178:13+24
    assume {:print "$track_local(38,53,12):", $t44} $t44 == $t44;

    // assume Le(Add($t42, $t44), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1186:13+60
    assume {:print "$at(2,57290,57350)"} true;
    assume (($t42 + $t44) <= 18446744073709551615);

    // $t45 := +($t42, $t44) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1188:45+1
    assume {:print "$at(2,57406,57407)"} true;
    call $t45 := $AddU64($t42, $t44);
    if ($abort_flag) {
        assume {:print "$at(2,57406,57407)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // trace_local[rewards_amount]($t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1188:13+14
    assume {:print "$track_local(38,53,11):", $t45} $t45 == $t45;

    // $t46 := borrow_field<stake::StakePool>.active($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:21+22
    assume {:print "$at(2,57505,57527)"} true;
    $t46 := $ChildMutation($t23, 0, $active#$1_stake_StakePool($Dereference($t23)));

    // $t47 := borrow_field<stake::StakePool>.pending_active($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:63+30
    $t47 := $ChildMutation($t23, 2, $pending_active#$1_stake_StakePool($Dereference($t23)));

    // $t48 := coin::extract_all<aptos_coin::AptosCoin>($t47) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:45+49
    call $t48,$t47 := $1_coin_extract_all'$1_aptos_coin_AptosCoin'($t47);
    if ($abort_flag) {
        assume {:print "$at(2,57529,57578)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).pending_active (coin::Coin<aptos_coin::AptosCoin>)]($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:45+49
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_pending_active($Dereference($t23), $Dereference($t47)));

    // coin::merge<aptos_coin::AptosCoin>($t46, $t48) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:9+86
    call $t46 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t46, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,57493,57579)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).active (coin::Coin<aptos_coin::AptosCoin>)]($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1190:9+86
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_active($Dereference($t23), $Dereference($t46)));

    // $t49 := features::collect_and_distribute_gas_fees() on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1193:13+43
    assume {:print "$at(2,57648,57691)"} true;
    call $t49 := $1_features_collect_and_distribute_gas_fees();
    if ($abort_flag) {
        assume {:print "$at(2,57648,57691)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // if ($t49) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1193:9+360
    if ($t49) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:68+16
    assume {:print "$at(2,57762,57778)"} true;
L1:

    // $t50 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:68+16
    assume {:print "$at(2,57762,57778)"} true;
    $t50 := 1;
    assume $IsValid'address'($t50);

    // $t51 := borrow_global<stake::ValidatorFees>($t50) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:35+17
    if (!$ResourceExists($1_stake_ValidatorFees_$memory, $t50)) {
        call $ExecFailureAbort();
    } else {
        $t51 := $Mutation($Global($t50), EmptyVec(), $ResourceValue($1_stake_ValidatorFees_$memory, $t50));
    }
    if ($abort_flag) {
        assume {:print "$at(2,57729,57746)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // $t52 := borrow_field<stake::ValidatorFees>.fees_table($t51) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:30+66
    $t52 := $ChildMutation($t51, 0, $fees_table#$1_stake_ValidatorFees($Dereference($t51)));

    // trace_local[fees_table]($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1194:17+10
    $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''' := $Dereference($t52);
    assume {:print "$track_local(38,53,7):", $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin'''} $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''' == $temp_0'$1_table_Table'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''';

    // $t53 := read_ref($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:32+26
    assume {:print "$at(2,57823,57849)"} true;
    $t53 := $Dereference($t52);

    // $t54 := table::contains<address, coin::Coin<aptos_coin::AptosCoin>>($t53, $t1) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:17+41
    call $t54 := $1_table_contains'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''($t53, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,57808,57849)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // if ($t54) goto L3 else goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:13+189
    if ($t54) { goto L3; } else { goto L8; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:42+10
    assume {:print "$at(2,57894,57904)"} true;
L3:

    // $t55 := table::remove<address, coin::Coin<aptos_coin::AptosCoin>>($t52, $t1) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:28+39
    assume {:print "$at(2,57880,57919)"} true;
    call $t55,$t52 := $1_table_remove'address_$1_coin_Coin'$1_aptos_coin_AptosCoin''($t52, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,57880,57919)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t51).fees_table (table::Table<address, coin::Coin<aptos_coin::AptosCoin>>)]($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:28+39
    $t51 := $UpdateMutation($t51, $Update'$1_stake_ValidatorFees'_fees_table($Dereference($t51), $Dereference($t52)));

    // write_back[stake::ValidatorFees@]($t51) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:28+39
    $1_stake_ValidatorFees_$memory := $ResourceUpdate($1_stake_ValidatorFees_$memory, $GlobalLocationAddress($t51),
        $Dereference($t51));

    // trace_local[coin]($t55) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1196:21+4
    assume {:print "$track_local(38,53,4):", $t55} $t55 == $t55;

    // $t56 := borrow_field<stake::StakePool>.active($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1197:29+22
    assume {:print "$at(2,57949,57971)"} true;
    $t56 := $ChildMutation($t23, 0, $active#$1_stake_StakePool($Dereference($t23)));

    // coin::merge<aptos_coin::AptosCoin>($t56, $t55) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1197:17+41
    call $t56 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t56, $t55);
    if ($abort_flag) {
        assume {:print "$at(2,57937,57978)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).active (coin::Coin<aptos_coin::AptosCoin>)]($t56) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1197:17+41
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_active($Dereference($t23), $Dereference($t56)));

    // goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1197:58+1
    goto L0;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:13+189
    assume {:print "$at(2,57804,57993)"} true;
L2:

    // destroy($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1195:13+189
    assume {:print "$at(2,57804,57993)"} true;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1202:41+10
    assume {:print "$at(2,58168,58178)"} true;
L0:

    // $t57 := get_field<stake::StakePool>.locked_until_secs($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1202:41+28
    assume {:print "$at(2,58168,58196)"} true;
    $t57 := $locked_until_secs#$1_stake_StakePool($Dereference($t23));

    // trace_local[current_lockup_expiration]($t57) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1202:13+25
    assume {:print "$track_local(38,53,6):", $t57} $t57 == $t57;

    // $t58 := timestamp::now_seconds() on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1203:13+24
    assume {:print "$at(2,58210,58234)"} true;
    call $t58 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,58210,58234)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // $t59 := >=($t58, $t57) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1203:38+2
    call $t59 := $Ge($t58, $t57);

    // if ($t59) goto L5 else goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1203:9+221
    if ($t59) { goto L5; } else { goto L4; }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1205:22+10
    assume {:print "$at(2,58313,58323)"} true;
L5:

    // $t60 := borrow_field<stake::StakePool>.inactive($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1205:17+24
    assume {:print "$at(2,58308,58332)"} true;
    $t60 := $ChildMutation($t23, 1, $inactive#$1_stake_StakePool($Dereference($t23)));

    // $t61 := borrow_field<stake::StakePool>.pending_inactive($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1206:35+32
    assume {:print "$at(2,58368,58400)"} true;
    $t61 := $ChildMutation($t23, 3, $pending_inactive#$1_stake_StakePool($Dereference($t23)));

    // $t62 := coin::extract_all<aptos_coin::AptosCoin>($t61) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1206:17+51
    call $t62,$t61 := $1_coin_extract_all'$1_aptos_coin_AptosCoin'($t61);
    if ($abort_flag) {
        assume {:print "$at(2,58350,58401)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t61) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1206:17+51
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t23), $Dereference($t61)));

    // coin::merge<aptos_coin::AptosCoin>($t60, $t62) on_abort goto L7 with $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1204:13+137
    assume {:print "$at(2,58279,58416)"} true;
    call $t60 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t60, $t62);
    if ($abort_flag) {
        assume {:print "$at(2,58279,58416)"} true;
        $t24 := $abort_code;
        assume {:print "$track_abort(38,53):", $t24} $t24 == $t24;
        goto L7;
    }

    // write_back[Reference($t23).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t60) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1204:13+137
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_inactive($Dereference($t23), $Dereference($t60)));

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1211:18+10
    assume {:print "$at(2,58474,58484)"} true;
L4:

    // $t63 := borrow_field<stake::StakePool>.distribute_rewards_events($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1211:13+41
    assume {:print "$at(2,58469,58510)"} true;
    $t63 := $ChildMutation($t23, 15, $distribute_rewards_events#$1_stake_StakePool($Dereference($t23)));

    // $t64 := pack stake::DistributeRewardsEvent($t1, $t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1212:13+100
    assume {:print "$at(2,58524,58624)"} true;
    $t64 := $1_stake_DistributeRewardsEvent($t1, $t45);

    // opaque begin: event::emit_event<stake::DistributeRewardsEvent>($t63, $t64) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1210:9+197
    assume {:print "$at(2,58438,58635)"} true;

    // opaque end: event::emit_event<stake::DistributeRewardsEvent>($t63, $t64) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1210:9+197

    // write_back[Reference($t23).distribute_rewards_events (event::EventHandle<stake::DistributeRewardsEvent>)]($t63) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1210:9+197
    $t23 := $UpdateMutation($t23, $Update'$1_stake_StakePool'_distribute_rewards_events($Dereference($t23), $Dereference($t63)));

    // write_back[stake::StakePool@]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1210:9+197
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t23),
        $Dereference($t23));

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1217:5+1
    assume {:print "$at(2,58641,58642)"} true;
L6:

    // assert Not(Not(exists[@47]<stake::StakePool>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:156:9+43
    assume {:print "$at(3,6844,6887)"} true;
    assert {:msg "assert_failed(3,6844,6887): function does not abort under this condition"}
      !!$ResourceExists($1_stake_StakePool_$memory#47, $t1);

    // assert Not(Not(exists[@48]<stake::ValidatorConfig>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:157:9+49
    assume {:print "$at(3,6896,6945)"} true;
    assert {:msg "assert_failed(3,6896,6945): function does not abort under this condition"}
      !!$ResourceExists($1_stake_ValidatorConfig_$memory#48, $t1);

    // assert Not(Ge(select stake::ValidatorConfig.validator_index(global[@48]<stake::ValidatorConfig>($t1)), Len<stake::IndividualValidatorPerformance>(select stake::ValidatorPerformance.validators($t0)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:158:9+98
    assume {:print "$at(3,6954,7052)"} true;
    assert {:msg "assert_failed(3,6954,7052): function does not abort under this condition"}
      !($validator_index#$1_stake_ValidatorConfig($ResourceValue($1_stake_ValidatorConfig_$memory#48, $t1)) >= LenVec($validators#$1_stake_ValidatorPerformance($t0)));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:158:9+98
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1217:5+1
    assume {:print "$at(2,58641,58642)"} true;
L7:

    // assert Or(Or(Not(exists[@47]<stake::StakePool>($t1)), Not(exists[@48]<stake::ValidatorConfig>($t1))), Ge(select stake::ValidatorConfig.validator_index(global[@48]<stake::ValidatorConfig>($t1)), Len<stake::IndividualValidatorPerformance>(select stake::ValidatorPerformance.validators($t0)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:153:5+349
    assume {:print "$at(3,6709,7058)"} true;
    assert {:msg "assert_failed(3,6709,7058): abort not covered by any of the `aborts_if` clauses"}
      ((!$ResourceExists($1_stake_StakePool_$memory#47, $t1) || !$ResourceExists($1_stake_ValidatorConfig_$memory#48, $t1)) || ($validator_index#$1_stake_ValidatorConfig($ResourceValue($1_stake_ValidatorConfig_$memory#48, $t1)) >= LenVec($validators#$1_stake_ValidatorPerformance($t0))));

    // abort($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:153:5+349
    $abort_code := $t24;
    $abort_flag := true;
    return;

    // label L8 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L8:

    // destroy($t51) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L2 at <internal>:1:1+10
    goto L2;

}

// fun stake::update_voting_power_increase [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+805
procedure {:inline 1} $1_stake_update_voting_power_increase(_$t0: int) returns ()
{
    // declare local variables
    var $t1: $1_staking_config_StakingConfig;
    var $t2: $Mutation ($1_stake_ValidatorSet);
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_ValidatorSet;
    var $t6: $1_staking_config_StakingConfig;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_stake_ValidatorSet);
    var $t10: int;
    var $t11: $1_staking_config_StakingConfig;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: $Mutation (int);
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t0: int;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t4, 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:304:9+29
    assume {:print "$at(3,14055,14084)"} true;
    assume ($t4 == 1);

    // assume Identical($t5, global<stake::ValidatorSet>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:305:9+52
    assume {:print "$at(3,14093,14145)"} true;
    assume ($t5 == $ResourceValue($1_stake_ValidatorSet_$memory, $t4));

    // assume Identical($t6, global<staking_config::StakingConfig>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:307:9+66
    assume {:print "$at(3,14216,14282)"} true;
    assume ($t6 == $ResourceValue($1_staking_config_StakingConfig_$memory, $t4));

    // assume Identical($t7, select staking_config::StakingConfig.voting_power_increase_limit($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:308:9+77
    assume {:print "$at(3,14291,14368)"} true;
    assume ($t7 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t6));

    // trace_local[increase_amount]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume {:print "$at(2,62316,62317)"} true;
    assume {:print "$track_local(38,54,0):", $t0} $t0 == $t0;

    // $t8 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1311:61+16
    assume {:print "$at(2,62455,62471)"} true;
    $t8 := 1;
    assume $IsValid'address'($t8);

    // $t9 := borrow_global<stake::ValidatorSet>($t8) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1311:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t8));
    }
    if ($abort_flag) {
        assume {:print "$at(2,62423,62440)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[validator_set]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1311:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t9);
    assume {:print "$track_local(38,54,2):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t11 := staking_config::get() on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1313:63+21
    assume {:print "$at(2,62578,62599)"} true;
    call $t11 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,62578,62599)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t12 := staking_config::get_voting_power_increase_limit($t11) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1313:14+71
    call $t12 := $1_staking_config_get_voting_power_increase_limit($t11);
    if ($abort_flag) {
        assume {:print "$at(2,62529,62600)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t13 := (u128)($t12) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1313:13+81
    call $t13 := $CastU128($t12);
    if ($abort_flag) {
        assume {:print "$at(2,62528,62609)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[voting_power_increase_limit]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1312:13+27
    assume {:print "$at(2,62486,62513)"} true;
    assume {:print "$track_local(38,54,3):", $t13} $t13 == $t13;

    // $t14 := get_field<stake::ValidatorSet>.total_joining_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:45+33
    assume {:print "$at(2,62655,62688)"} true;
    $t14 := $total_joining_power#$1_stake_ValidatorSet($Dereference($t9));

    // $t15 := (u128)($t0) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:81+25
    call $t15 := $CastU128($t0);
    if ($abort_flag) {
        assume {:print "$at(2,62691,62716)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t16 := +($t14, $t15) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:79+1
    call $t16 := $AddU128($t14, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,62689,62690)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t17 := borrow_field<stake::ValidatorSet>.total_joining_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:9+33
    $t17 := $ChildMutation($t9, 5, $total_joining_power#$1_stake_ValidatorSet($Dereference($t9)));

    // write_ref($t17, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:9+97
    $t17 := $UpdateMutation($t17, $t16);

    // write_back[Reference($t9).total_joining_power (u128)]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:9+97
    $t9 := $UpdateMutation($t9, $Update'$1_stake_ValidatorSet'_total_joining_power($Dereference($t9), $Dereference($t17)));

    // $t18 := get_field<stake::ValidatorSet>.total_voting_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:13+32
    assume {:print "$at(2,62828,62860)"} true;
    $t18 := $total_voting_power#$1_stake_ValidatorSet($Dereference($t9));

    // $t19 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:48+1
    $t19 := 0;
    assume $IsValid'u128'($t19);

    // $t20 := >($t18, $t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:46+1
    call $t20 := $Gt($t18, $t19);

    // if ($t20) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    if ($t20) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:17+13
    assume {:print "$at(2,62905,62918)"} true;
L1:

    // $t21 := get_field<stake::ValidatorSet>.total_joining_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:17+33
    assume {:print "$at(2,62905,62938)"} true;
    $t21 := $total_joining_power#$1_stake_ValidatorSet($Dereference($t9));

    // $t22 := get_field<stake::ValidatorSet>.total_voting_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:54+32
    $t22 := $total_voting_power#$1_stake_ValidatorSet($Dereference($t9));

    // write_back[stake::ValidatorSet@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:54+32
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t23 := *($t22, $t13) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:87+1
    call $t23 := $MulU128($t22, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,62975,62976)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t24 := 100 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:119+3
    $t24 := 100;
    assume $IsValid'u128'($t24);

    // $t25 := /($t23, $t24) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:117+1
    call $t25 := $Div($t23, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,63005,63006)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t26 := <=($t21, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:51+2
    call $t26 := $Le($t21, $t25);

    // if ($t26) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    assume {:print "$at(2,62880,63104)"} true;
    if ($t26) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
L3:

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    assume {:print "$at(2,62880,63104)"} true;
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:41+36
    assume {:print "$at(2,63052,63088)"} true;
L2:

    // $t27 := 13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:41+36
    assume {:print "$at(2,63052,63088)"} true;
    $t27 := 13;
    assume $IsValid'u64'($t27);

    // $t28 := error::invalid_argument($t27) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:17+61
    call $t28 := $1_error_invalid_argument($t27);
    if ($abort_flag) {
        assume {:print "$at(2,63028,63089)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_abort($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    assume {:print "$at(2,62880,63104)"} true;
    assume {:print "$track_abort(38,54):", $t28} $t28 == $t28;

    // $t10 := move($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    $t10 := $t28;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    goto L7;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    assume {:print "$at(2,62824,63115)"} true;
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    assume {:print "$at(2,62824,63115)"} true;
    goto L5;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
L0:

    // write_back[stake::ValidatorSet@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    assume {:print "$at(2,62824,63115)"} true;
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // destroy($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
L5:

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1323:5+1
    assume {:print "$at(2,63120,63121)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1323:5+1
    assume {:print "$at(2,63120,63121)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1323:5+1
L7:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1323:5+1
    assume {:print "$at(2,63120,63121)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun stake::update_voting_power_increase [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+805
procedure {:timeLimit 40} $1_stake_update_voting_power_increase$verify(_$t0: int) returns ()
{
    // declare local variables
    var $t1: $1_staking_config_StakingConfig;
    var $t2: $Mutation ($1_stake_ValidatorSet);
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_ValidatorSet;
    var $t6: $1_staking_config_StakingConfig;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_stake_ValidatorSet);
    var $t10: int;
    var $t11: $1_staking_config_StakingConfig;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: $Mutation (int);
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: $1_stake_ValidatorSet;
    var $t0: int;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume {:print "$at(2,62316,62317)"} true;
    assume $IsValid'u64'($t0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+805
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+805
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+805
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Identical($t4, 1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:304:9+29
    assume {:print "$at(3,14055,14084)"} true;
    assume ($t4 == 1);

    // assume Identical($t5, global<stake::ValidatorSet>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:305:9+52
    assume {:print "$at(3,14093,14145)"} true;
    assume ($t5 == $ResourceValue($1_stake_ValidatorSet_$memory, $t4));

    // assume Identical($t6, global<staking_config::StakingConfig>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:307:9+66
    assume {:print "$at(3,14216,14282)"} true;
    assume ($t6 == $ResourceValue($1_staking_config_StakingConfig_$memory, $t4));

    // assume Identical($t7, select staking_config::StakingConfig.voting_power_increase_limit($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:308:9+77
    assume {:print "$at(3,14291,14368)"} true;
    assume ($t7 == $voting_power_increase_limit#$1_staking_config_StakingConfig($t6));

    // trace_local[increase_amount]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1310:5+1
    assume {:print "$at(2,62316,62317)"} true;
    assume {:print "$track_local(38,54,0):", $t0} $t0 == $t0;

    // $t8 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1311:61+16
    assume {:print "$at(2,62455,62471)"} true;
    $t8 := 1;
    assume $IsValid'address'($t8);

    // $t9 := borrow_global<stake::ValidatorSet>($t8) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1311:29+17
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_stake_ValidatorSet_$memory, $t8));
    }
    if ($abort_flag) {
        assume {:print "$at(2,62423,62440)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[validator_set]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1311:13+13
    $temp_0'$1_stake_ValidatorSet' := $Dereference($t9);
    assume {:print "$track_local(38,54,2):", $temp_0'$1_stake_ValidatorSet'} $temp_0'$1_stake_ValidatorSet' == $temp_0'$1_stake_ValidatorSet';

    // $t11 := staking_config::get() on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1313:63+21
    assume {:print "$at(2,62578,62599)"} true;
    call $t11 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(2,62578,62599)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t12 := staking_config::get_voting_power_increase_limit($t11) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1313:14+71
    call $t12 := $1_staking_config_get_voting_power_increase_limit($t11);
    if ($abort_flag) {
        assume {:print "$at(2,62529,62600)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t13 := (u128)($t12) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1313:13+81
    call $t13 := $CastU128($t12);
    if ($abort_flag) {
        assume {:print "$at(2,62528,62609)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[voting_power_increase_limit]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1312:13+27
    assume {:print "$at(2,62486,62513)"} true;
    assume {:print "$track_local(38,54,3):", $t13} $t13 == $t13;

    // $t14 := get_field<stake::ValidatorSet>.total_joining_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:45+33
    assume {:print "$at(2,62655,62688)"} true;
    $t14 := $total_joining_power#$1_stake_ValidatorSet($Dereference($t9));

    // $t15 := (u128)($t0) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:81+25
    call $t15 := $CastU128($t0);
    if ($abort_flag) {
        assume {:print "$at(2,62691,62716)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t16 := +($t14, $t15) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:79+1
    call $t16 := $AddU128($t14, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,62689,62690)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t17 := borrow_field<stake::ValidatorSet>.total_joining_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:9+33
    $t17 := $ChildMutation($t9, 5, $total_joining_power#$1_stake_ValidatorSet($Dereference($t9)));

    // write_ref($t17, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:9+97
    $t17 := $UpdateMutation($t17, $t16);

    // write_back[Reference($t9).total_joining_power (u128)]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1314:9+97
    $t9 := $UpdateMutation($t9, $Update'$1_stake_ValidatorSet'_total_joining_power($Dereference($t9), $Dereference($t17)));

    // $t18 := get_field<stake::ValidatorSet>.total_voting_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:13+32
    assume {:print "$at(2,62828,62860)"} true;
    $t18 := $total_voting_power#$1_stake_ValidatorSet($Dereference($t9));

    // $t19 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:48+1
    $t19 := 0;
    assume $IsValid'u128'($t19);

    // $t20 := >($t18, $t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:46+1
    call $t20 := $Gt($t18, $t19);

    // if ($t20) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    if ($t20) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:17+13
    assume {:print "$at(2,62905,62918)"} true;
L1:

    // $t21 := get_field<stake::ValidatorSet>.total_joining_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:17+33
    assume {:print "$at(2,62905,62938)"} true;
    $t21 := $total_joining_power#$1_stake_ValidatorSet($Dereference($t9));

    // $t22 := get_field<stake::ValidatorSet>.total_voting_power($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:54+32
    $t22 := $total_voting_power#$1_stake_ValidatorSet($Dereference($t9));

    // write_back[stake::ValidatorSet@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:54+32
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // $t23 := *($t22, $t13) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:87+1
    assume {:print "$at(2,62975,62976)"} true;
    call $t23 := $MulU128($t22, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,62975,62976)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t24 := 100 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:119+3
    $t24 := 100;
    assume $IsValid'u128'($t24);

    // $t25 := /($t23, $t24) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:117+1
    call $t25 := $Div($t23, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,63005,63006)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t26 := <=($t21, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:51+2
    call $t26 := $Le($t21, $t25);

    // if ($t26) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    assume {:print "$at(2,62880,63104)"} true;
    if ($t26) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
L3:

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    assume {:print "$at(2,62880,63104)"} true;
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:41+36
    assume {:print "$at(2,63052,63088)"} true;
L2:

    // $t27 := 13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:41+36
    assume {:print "$at(2,63052,63088)"} true;
    $t27 := 13;
    assume $IsValid'u64'($t27);

    // $t28 := error::invalid_argument($t27) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:17+61
    call $t28 := $1_error_invalid_argument($t27);
    if ($abort_flag) {
        assume {:print "$at(2,63028,63089)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(38,54):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_abort($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    assume {:print "$at(2,62880,63104)"} true;
    assume {:print "$track_abort(38,54):", $t28} $t28 == $t28;

    // $t10 := move($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    $t10 := $t28;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1318:13+224
    goto L7;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    assume {:print "$at(2,62824,63115)"} true;
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    assume {:print "$at(2,62824,63115)"} true;
    goto L5;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
L0:

    // write_back[stake::ValidatorSet@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    assume {:print "$at(2,62824,63115)"} true;
    $1_stake_ValidatorSet_$memory := $ResourceUpdate($1_stake_ValidatorSet_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assert Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume {:print "$at(3,661,757)"} true;
    assert {:msg "assert_failed(3,661,757): global memory invariant does not hold"}
      ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // destroy($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
    assume {:print "$at(2,62824,63115)"} true;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1317:9+291
L5:

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1323:5+1
    assume {:print "$at(2,63120,63121)"} true;
L6:

    // assume Identical($t29, global<stake::ValidatorSet>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:306:9+53
    assume {:print "$at(3,14154,14207)"} true;
    assume ($t29 == $ResourceValue($1_stake_ValidatorSet_$memory, $t4));

    // assert Implies(Gt(select stake::ValidatorSet.total_voting_power($t29), 0), Le(select stake::ValidatorSet.total_joining_power($t29), Div(Mul(select stake::ValidatorSet.total_voting_power($t29), $t7), 100))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:311:9+155
    assume {:print "$at(3,14474,14629)"} true;
    assert {:msg "assert_failed(3,14474,14629): post-condition does not hold"}
      (($total_voting_power#$1_stake_ValidatorSet($t29) > 0) ==> ($total_joining_power#$1_stake_ValidatorSet($t29) <= (($total_voting_power#$1_stake_ValidatorSet($t29) * $t7) div 100)));

    // assert Eq<u128>(select stake::ValidatorSet.total_joining_power($t29), Add(select stake::ValidatorSet.total_joining_power($t5), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:312:9+101
    assume {:print "$at(3,14638,14739)"} true;
    assert {:msg "assert_failed(3,14638,14739): post-condition does not hold"}
      $IsEqual'u128'($total_joining_power#$1_stake_ValidatorSet($t29), ($total_joining_power#$1_stake_ValidatorSet($t5) + $t0));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:312:9+101
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1323:5+1
    assume {:print "$at(2,63120,63121)"} true;
L7:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1323:5+1
    assume {:print "$at(2,63120,63121)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun stake::withdraw_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1450
procedure {:inline 1} $1_stake_withdraw_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: int;
    var $t5: $Mutation ($1_stake_StakePool);
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_stake_StakePool);
    var $t9: $1_stake_ValidatorSet;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t17: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t18: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t19: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t25: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t26: $Mutation ($1_event_EventHandle'$1_stake_WithdrawStakeEvent');
    var $t27: $1_stake_WithdrawStakeEvent;
    var $t28: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t29: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume {:print "$at(2,41404,41405)"} true;
    assume {:print "$track_local(38,56,0):", $t0} $t0 == $t0;

    // trace_local[withdraw_amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume {:print "$track_local(38,56,1):", $t1} $t1 == $t1;

    // $t6 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:891:28+22
    assume {:print "$at(2,41585,41607)"} true;
    $t6 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:891:13+12
    assume {:print "$track_local(38,56,4):", $t6} $t6 == $t6;

    // stake::assert_stake_pool_exists($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:892:9+38
    assume {:print "$at(2,41617,41655)"} true;
    call $1_stake_assert_stake_pool_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(2,41617,41655)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t8 := borrow_global<stake::StakePool>($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:26+17
    assume {:print "$at(2,41682,41699)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(2,41682,41699)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[stake_pool]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t8);
    assume {:print "$track_local(38,56,5):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // assume Identical($t9, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t9 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t10 := stake::get_validator_state($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+33
    assume {:print "$at(2,42040,42073)"} true;
    call $t10 := $1_stake_get_validator_state($t6);
    if ($abort_flag) {
        assume {:print "$at(2,42040,42073)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t11 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:50+25
    $t11 := 4;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:47+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:13+24
    assume {:print "$at(2,42118,42142)"} true;
L1:

    // $t13 := timestamp::now_seconds() on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:13+24
    assume {:print "$at(2,42118,42142)"} true;
    call $t13 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,42118,42142)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t14 := get_field<stake::StakePool>.locked_until_secs($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:41+28
    $t14 := $locked_until_secs#$1_stake_StakePool($Dereference($t8));

    // $t2 := >=($t13, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:38+2
    call $t2 := $Ge($t13, $t14);

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    assume {:print "$at(2,42040,42174)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
L0:

    // $t15 := false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    assume {:print "$at(2,42040,42174)"} true;
    $t15 := false;
    assume $IsValid'bool'($t15);

    // $t2 := $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    $t2 := $t15;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
L2:

    // if ($t2) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:9+320
    assume {:print "$at(2,42036,42356)"} true;
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:65+10
    assume {:print "$at(2,42242,42252)"} true;
L4:

    // $t16 := borrow_field<stake::StakePool>.pending_inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:60+32
    assume {:print "$at(2,42237,42269)"} true;
    $t16 := $ChildMutation($t8, 3, $pending_inactive#$1_stake_StakePool($Dereference($t8)));

    // $t17 := coin::extract_all<aptos_coin::AptosCoin>($t16) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:42+51
    call $t17,$t16 := $1_coin_extract_all'$1_aptos_coin_AptosCoin'($t16);
    if ($abort_flag) {
        assume {:print "$at(2,42219,42270)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:42+51
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t8), $Dereference($t16)));

    // trace_local[pending_inactive_stake]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:17+22
    assume {:print "$track_local(38,56,3):", $t17} $t17 == $t17;

    // $t18 := borrow_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:25+24
    assume {:print "$at(2,42296,42320)"} true;
    $t18 := $ChildMutation($t8, 1, $inactive#$1_stake_StakePool($Dereference($t8)));

    // coin::merge<aptos_coin::AptosCoin>($t18, $t17) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:13+61
    call $t18 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t18, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,42284,42345)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:13+61
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_inactive($Dereference($t8), $Dereference($t18)));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:31+15
    assume {:print "$at(2,42445,42460)"} true;
L3:

    // $t19 := get_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:60+20
    assume {:print "$at(2,42474,42494)"} true;
    $t19 := $inactive#$1_stake_StakePool($Dereference($t8));

    // $t20 := coin::value<aptos_coin::AptosCoin>($t19) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:48+33
    call $t20 := $1_coin_value'$1_aptos_coin_AptosCoin'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,42462,42495)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t21 := math64::min($t1, $t20) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:27+55
    call $t21 := $1_math64_min($t1, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,42441,42496)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[withdraw_amount]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:9+15
    assume {:print "$track_local(38,56,1):", $t21} $t21 == $t21;

    // $t22 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:32+1
    assume {:print "$at(2,42529,42530)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:29+2
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:9+56
    if ($t23) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
L6:

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    assume {:print "$at(2,42532,42562)"} true;
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // destroy($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30

    // $t24 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:42+23
    call $t24 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,42539,42562)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_return[0]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    assume {:print "$track_return(38,56,0):", $t24} $t24 == $t24;

    // $t25 := move($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    $t25 := $t24;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:908:18+10
    assume {:print "$at(2,42609,42619)"} true;
L5:

    // $t26 := borrow_field<stake::StakePool>.withdraw_stake_events($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:908:13+37
    assume {:print "$at(2,42604,42641)"} true;
    $t26 := $ChildMutation($t8, 17, $withdraw_stake_events#$1_stake_StakePool($Dereference($t8)));

    // $t27 := pack stake::WithdrawStakeEvent($t6, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:909:13+115
    assume {:print "$at(2,42655,42770)"} true;
    $t27 := $1_stake_WithdrawStakeEvent($t6, $t21);

    // opaque begin: event::emit_event<stake::WithdrawStakeEvent>($t26, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208
    assume {:print "$at(2,42573,42781)"} true;

    // opaque end: event::emit_event<stake::WithdrawStakeEvent>($t26, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208

    // write_back[Reference($t8).withdraw_stake_events (event::EventHandle<stake::WithdrawStakeEvent>)]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_withdraw_stake_events($Dereference($t8), $Dereference($t26)));

    // $t28 := borrow_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:23+24
    assume {:print "$at(2,42806,42830)"} true;
    $t28 := $ChildMutation($t8, 1, $inactive#$1_stake_StakePool($Dereference($t8)));

    // $t29 := coin::extract<aptos_coin::AptosCoin>($t28, $t21) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    call $t29,$t28 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t28, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,42792,42848)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_inactive($Dereference($t8), $Dereference($t28)));

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // trace_return[0]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    assume {:print "$track_return(38,56,0):", $t29} $t29 == $t29;

    // $t25 := move($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $t25 := $t29;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(2,42853,42854)"} true;
L7:

    // return $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(2,42853,42854)"} true;
    $ret0 := $t25;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
L8:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(2,42853,42854)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun stake::withdraw_with_cap [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1450
procedure {:timeLimit 40} $1_stake_withdraw_with_cap$verify(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: int;
    var $t5: $Mutation ($1_stake_StakePool);
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_stake_StakePool);
    var $t9: $1_stake_ValidatorSet;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t17: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t18: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t19: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t25: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t26: $Mutation ($1_event_EventHandle'$1_stake_WithdrawStakeEvent');
    var $t27: $1_stake_WithdrawStakeEvent;
    var $t28: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t29: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume {:print "$at(2,41404,41405)"} true;
    assume $IsValid'$1_stake_OwnerCapability'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume $IsValid'u64'($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1450
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1450
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1450
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:13:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1450
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume {:print "$track_local(38,56,0):", $t0} $t0 == $t0;

    // trace_local[withdraw_amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume {:print "$track_local(38,56,1):", $t1} $t1 == $t1;

    // $t6 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:891:28+22
    assume {:print "$at(2,41585,41607)"} true;
    $t6 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:891:13+12
    assume {:print "$track_local(38,56,4):", $t6} $t6 == $t6;

    // stake::assert_stake_pool_exists($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:892:9+38
    assume {:print "$at(2,41617,41655)"} true;
    call $1_stake_assert_stake_pool_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(2,41617,41655)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t8 := borrow_global<stake::StakePool>($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:26+17
    assume {:print "$at(2,41682,41699)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(2,41682,41699)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[stake_pool]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t8);
    assume {:print "$track_local(38,56,5):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // assume Identical($t9, global<stake::ValidatorSet>(1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:240:9+59
    assume {:print "$at(3,10320,10379)"} true;
    assume ($t9 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t10 := stake::get_validator_state($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+33
    assume {:print "$at(2,42040,42073)"} true;
    call $t10 := $1_stake_get_validator_state($t6);
    if ($abort_flag) {
        assume {:print "$at(2,42040,42073)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t11 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:50+25
    $t11 := 4;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:47+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:13+24
    assume {:print "$at(2,42118,42142)"} true;
L1:

    // $t13 := timestamp::now_seconds() on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:13+24
    assume {:print "$at(2,42118,42142)"} true;
    call $t13 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,42118,42142)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t14 := get_field<stake::StakePool>.locked_until_secs($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:41+28
    $t14 := $locked_until_secs#$1_stake_StakePool($Dereference($t8));

    // $t2 := >=($t13, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:38+2
    call $t2 := $Ge($t13, $t14);

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    assume {:print "$at(2,42040,42174)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
L0:

    // $t15 := false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    assume {:print "$at(2,42040,42174)"} true;
    $t15 := false;
    assume $IsValid'bool'($t15);

    // $t2 := $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    $t2 := $t15;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
L2:

    // if ($t2) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:9+320
    assume {:print "$at(2,42036,42356)"} true;
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:65+10
    assume {:print "$at(2,42242,42252)"} true;
L4:

    // $t16 := borrow_field<stake::StakePool>.pending_inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:60+32
    assume {:print "$at(2,42237,42269)"} true;
    $t16 := $ChildMutation($t8, 3, $pending_inactive#$1_stake_StakePool($Dereference($t8)));

    // $t17 := coin::extract_all<aptos_coin::AptosCoin>($t16) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:42+51
    call $t17,$t16 := $1_coin_extract_all'$1_aptos_coin_AptosCoin'($t16);
    if ($abort_flag) {
        assume {:print "$at(2,42219,42270)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:42+51
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t8), $Dereference($t16)));

    // trace_local[pending_inactive_stake]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:17+22
    assume {:print "$track_local(38,56,3):", $t17} $t17 == $t17;

    // $t18 := borrow_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:25+24
    assume {:print "$at(2,42296,42320)"} true;
    $t18 := $ChildMutation($t8, 1, $inactive#$1_stake_StakePool($Dereference($t8)));

    // coin::merge<aptos_coin::AptosCoin>($t18, $t17) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:13+61
    call $t18 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t18, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,42284,42345)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:13+61
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_inactive($Dereference($t8), $Dereference($t18)));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:31+15
    assume {:print "$at(2,42445,42460)"} true;
L3:

    // $t19 := get_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:60+20
    assume {:print "$at(2,42474,42494)"} true;
    $t19 := $inactive#$1_stake_StakePool($Dereference($t8));

    // $t20 := coin::value<aptos_coin::AptosCoin>($t19) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:48+33
    call $t20 := $1_coin_value'$1_aptos_coin_AptosCoin'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,42462,42495)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t21 := math64::min($t1, $t20) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:27+55
    call $t21 := $1_math64_min($t1, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,42441,42496)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[withdraw_amount]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:9+15
    assume {:print "$track_local(38,56,1):", $t21} $t21 == $t21;

    // $t22 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:32+1
    assume {:print "$at(2,42529,42530)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:29+2
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:9+56
    if ($t23) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
L6:

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    assume {:print "$at(2,42532,42562)"} true;
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // destroy($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    assume {:print "$at(2,42532,42562)"} true;

    // $t24 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:42+23
    call $t24 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(2,42539,42562)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_return[0]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    assume {:print "$track_return(38,56,0):", $t24} $t24 == $t24;

    // $t25 := move($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    $t25 := $t24;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:908:18+10
    assume {:print "$at(2,42609,42619)"} true;
L5:

    // $t26 := borrow_field<stake::StakePool>.withdraw_stake_events($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:908:13+37
    assume {:print "$at(2,42604,42641)"} true;
    $t26 := $ChildMutation($t8, 17, $withdraw_stake_events#$1_stake_StakePool($Dereference($t8)));

    // $t27 := pack stake::WithdrawStakeEvent($t6, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:909:13+115
    assume {:print "$at(2,42655,42770)"} true;
    $t27 := $1_stake_WithdrawStakeEvent($t6, $t21);

    // opaque begin: event::emit_event<stake::WithdrawStakeEvent>($t26, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208
    assume {:print "$at(2,42573,42781)"} true;

    // opaque end: event::emit_event<stake::WithdrawStakeEvent>($t26, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208

    // write_back[Reference($t8).withdraw_stake_events (event::EventHandle<stake::WithdrawStakeEvent>)]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_withdraw_stake_events($Dereference($t8), $Dereference($t26)));

    // $t28 := borrow_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:23+24
    assume {:print "$at(2,42806,42830)"} true;
    $t28 := $ChildMutation($t8, 1, $inactive#$1_stake_StakePool($Dereference($t8)));

    // $t29 := coin::extract<aptos_coin::AptosCoin>($t28, $t21) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    call $t29,$t28 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t28, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,42792,42848)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_inactive($Dereference($t8), $Dereference($t28)));

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // assert Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:9:9+92
    assume {:print "$at(3,233,325)"} true;
    assert {:msg "assert_failed(3,233,325): global memory invariant does not hold"}
      ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // trace_return[0]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    assume {:print "$at(2,42792,42848)"} true;
    assume {:print "$track_return(38,56,0):", $t29} $t29 == $t29;

    // $t25 := move($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $t25 := $t29;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(2,42853,42854)"} true;
L7:

    // return $t25 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(2,42853,42854)"} true;
    $ret0 := $t25;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
L8:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(2,42853,42854)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// struct transaction_fee::AptosCoinCapabilities at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/transaction_fee.move:23:5+89
type {:datatype} $1_transaction_fee_AptosCoinCapabilities;
function {:constructor} $1_transaction_fee_AptosCoinCapabilities($burn_cap: $1_coin_BurnCapability'$1_aptos_coin_AptosCoin'): $1_transaction_fee_AptosCoinCapabilities;
function {:inline} $Update'$1_transaction_fee_AptosCoinCapabilities'_burn_cap(s: $1_transaction_fee_AptosCoinCapabilities, x: $1_coin_BurnCapability'$1_aptos_coin_AptosCoin'): $1_transaction_fee_AptosCoinCapabilities {
    $1_transaction_fee_AptosCoinCapabilities(x)
}
function $IsValid'$1_transaction_fee_AptosCoinCapabilities'(s: $1_transaction_fee_AptosCoinCapabilities): bool {
    $IsValid'$1_coin_BurnCapability'$1_aptos_coin_AptosCoin''($burn_cap#$1_transaction_fee_AptosCoinCapabilities(s))
}
function {:inline} $IsEqual'$1_transaction_fee_AptosCoinCapabilities'(s1: $1_transaction_fee_AptosCoinCapabilities, s2: $1_transaction_fee_AptosCoinCapabilities): bool {
    s1 == s2
}
var $1_transaction_fee_AptosCoinCapabilities_$memory: $Memory $1_transaction_fee_AptosCoinCapabilities;

// struct state_storage::GasParameter at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/state_storage.move:83:5+64
type {:datatype} $1_state_storage_GasParameter;
function {:constructor} $1_state_storage_GasParameter($usage: $1_state_storage_Usage): $1_state_storage_GasParameter;
function {:inline} $Update'$1_state_storage_GasParameter'_usage(s: $1_state_storage_GasParameter, x: $1_state_storage_Usage): $1_state_storage_GasParameter {
    $1_state_storage_GasParameter(x)
}
function $IsValid'$1_state_storage_GasParameter'(s: $1_state_storage_GasParameter): bool {
    $IsValid'$1_state_storage_Usage'($usage#$1_state_storage_GasParameter(s))
}
function {:inline} $IsEqual'$1_state_storage_GasParameter'(s1: $1_state_storage_GasParameter, s2: $1_state_storage_GasParameter): bool {
    s1 == s2
}
var $1_state_storage_GasParameter_$memory: $Memory $1_state_storage_GasParameter;

// struct state_storage::StateStorageUsage at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/state_storage.move:19:5+89
type {:datatype} $1_state_storage_StateStorageUsage;
function {:constructor} $1_state_storage_StateStorageUsage($epoch: int, $usage: $1_state_storage_Usage): $1_state_storage_StateStorageUsage;
function {:inline} $Update'$1_state_storage_StateStorageUsage'_epoch(s: $1_state_storage_StateStorageUsage, x: int): $1_state_storage_StateStorageUsage {
    $1_state_storage_StateStorageUsage(x, $usage#$1_state_storage_StateStorageUsage(s))
}
function {:inline} $Update'$1_state_storage_StateStorageUsage'_usage(s: $1_state_storage_StateStorageUsage, x: $1_state_storage_Usage): $1_state_storage_StateStorageUsage {
    $1_state_storage_StateStorageUsage($epoch#$1_state_storage_StateStorageUsage(s), x)
}
function $IsValid'$1_state_storage_StateStorageUsage'(s: $1_state_storage_StateStorageUsage): bool {
    $IsValid'u64'($epoch#$1_state_storage_StateStorageUsage(s))
      && $IsValid'$1_state_storage_Usage'($usage#$1_state_storage_StateStorageUsage(s))
}
function {:inline} $IsEqual'$1_state_storage_StateStorageUsage'(s1: $1_state_storage_StateStorageUsage, s2: $1_state_storage_StateStorageUsage): bool {
    s1 == s2
}
var $1_state_storage_StateStorageUsage_$memory: $Memory $1_state_storage_StateStorageUsage;

// struct state_storage::Usage at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/state_storage.move:12:5+82
type {:datatype} $1_state_storage_Usage;
function {:constructor} $1_state_storage_Usage($items: int, $bytes: int): $1_state_storage_Usage;
function {:inline} $Update'$1_state_storage_Usage'_items(s: $1_state_storage_Usage, x: int): $1_state_storage_Usage {
    $1_state_storage_Usage(x, $bytes#$1_state_storage_Usage(s))
}
function {:inline} $Update'$1_state_storage_Usage'_bytes(s: $1_state_storage_Usage, x: int): $1_state_storage_Usage {
    $1_state_storage_Usage($items#$1_state_storage_Usage(s), x)
}
function $IsValid'$1_state_storage_Usage'(s: $1_state_storage_Usage): bool {
    $IsValid'u64'($items#$1_state_storage_Usage(s))
      && $IsValid'u64'($bytes#$1_state_storage_Usage(s))
}
function {:inline} $IsEqual'$1_state_storage_Usage'(s1: $1_state_storage_Usage, s2: $1_state_storage_Usage): bool {
    s1 == s2
}

// struct storage_gas::GasCurve at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.move:247:5+120
type {:datatype} $1_storage_gas_GasCurve;
function {:constructor} $1_storage_gas_GasCurve($min_gas: int, $max_gas: int, $points: Vec ($1_storage_gas_Point)): $1_storage_gas_GasCurve;
function {:inline} $Update'$1_storage_gas_GasCurve'_min_gas(s: $1_storage_gas_GasCurve, x: int): $1_storage_gas_GasCurve {
    $1_storage_gas_GasCurve(x, $max_gas#$1_storage_gas_GasCurve(s), $points#$1_storage_gas_GasCurve(s))
}
function {:inline} $Update'$1_storage_gas_GasCurve'_max_gas(s: $1_storage_gas_GasCurve, x: int): $1_storage_gas_GasCurve {
    $1_storage_gas_GasCurve($min_gas#$1_storage_gas_GasCurve(s), x, $points#$1_storage_gas_GasCurve(s))
}
function {:inline} $Update'$1_storage_gas_GasCurve'_points(s: $1_storage_gas_GasCurve, x: Vec ($1_storage_gas_Point)): $1_storage_gas_GasCurve {
    $1_storage_gas_GasCurve($min_gas#$1_storage_gas_GasCurve(s), $max_gas#$1_storage_gas_GasCurve(s), x)
}
function $IsValid'$1_storage_gas_GasCurve'(s: $1_storage_gas_GasCurve): bool {
    $IsValid'u64'($min_gas#$1_storage_gas_GasCurve(s))
      && $IsValid'u64'($max_gas#$1_storage_gas_GasCurve(s))
      && $IsValid'vec'$1_storage_gas_Point''($points#$1_storage_gas_GasCurve(s))
}
function {:inline} $IsEqual'$1_storage_gas_GasCurve'(s1: $1_storage_gas_GasCurve, s2: $1_storage_gas_GasCurve): bool {
    $IsEqual'u64'($min_gas#$1_storage_gas_GasCurve(s1), $min_gas#$1_storage_gas_GasCurve(s2))
    && $IsEqual'u64'($max_gas#$1_storage_gas_GasCurve(s1), $max_gas#$1_storage_gas_GasCurve(s2))
    && $IsEqual'vec'$1_storage_gas_Point''($points#$1_storage_gas_GasCurve(s1), $points#$1_storage_gas_GasCurve(s2))}

// struct storage_gas::Point at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.move:207:5+322
type {:datatype} $1_storage_gas_Point;
function {:constructor} $1_storage_gas_Point($x: int, $y: int): $1_storage_gas_Point;
function {:inline} $Update'$1_storage_gas_Point'_x(s: $1_storage_gas_Point, x: int): $1_storage_gas_Point {
    $1_storage_gas_Point(x, $y#$1_storage_gas_Point(s))
}
function {:inline} $Update'$1_storage_gas_Point'_y(s: $1_storage_gas_Point, x: int): $1_storage_gas_Point {
    $1_storage_gas_Point($x#$1_storage_gas_Point(s), x)
}
function $IsValid'$1_storage_gas_Point'(s: $1_storage_gas_Point): bool {
    $IsValid'u64'($x#$1_storage_gas_Point(s))
      && $IsValid'u64'($y#$1_storage_gas_Point(s))
}
function {:inline} $IsEqual'$1_storage_gas_Point'(s1: $1_storage_gas_Point, s2: $1_storage_gas_Point): bool {
    s1 == s2
}

// struct storage_gas::StorageGas at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.move:183:5+534
type {:datatype} $1_storage_gas_StorageGas;
function {:constructor} $1_storage_gas_StorageGas($per_item_read: int, $per_item_create: int, $per_item_write: int, $per_byte_read: int, $per_byte_create: int, $per_byte_write: int): $1_storage_gas_StorageGas;
function {:inline} $Update'$1_storage_gas_StorageGas'_per_item_read(s: $1_storage_gas_StorageGas, x: int): $1_storage_gas_StorageGas {
    $1_storage_gas_StorageGas(x, $per_item_create#$1_storage_gas_StorageGas(s), $per_item_write#$1_storage_gas_StorageGas(s), $per_byte_read#$1_storage_gas_StorageGas(s), $per_byte_create#$1_storage_gas_StorageGas(s), $per_byte_write#$1_storage_gas_StorageGas(s))
}
function {:inline} $Update'$1_storage_gas_StorageGas'_per_item_create(s: $1_storage_gas_StorageGas, x: int): $1_storage_gas_StorageGas {
    $1_storage_gas_StorageGas($per_item_read#$1_storage_gas_StorageGas(s), x, $per_item_write#$1_storage_gas_StorageGas(s), $per_byte_read#$1_storage_gas_StorageGas(s), $per_byte_create#$1_storage_gas_StorageGas(s), $per_byte_write#$1_storage_gas_StorageGas(s))
}
function {:inline} $Update'$1_storage_gas_StorageGas'_per_item_write(s: $1_storage_gas_StorageGas, x: int): $1_storage_gas_StorageGas {
    $1_storage_gas_StorageGas($per_item_read#$1_storage_gas_StorageGas(s), $per_item_create#$1_storage_gas_StorageGas(s), x, $per_byte_read#$1_storage_gas_StorageGas(s), $per_byte_create#$1_storage_gas_StorageGas(s), $per_byte_write#$1_storage_gas_StorageGas(s))
}
function {:inline} $Update'$1_storage_gas_StorageGas'_per_byte_read(s: $1_storage_gas_StorageGas, x: int): $1_storage_gas_StorageGas {
    $1_storage_gas_StorageGas($per_item_read#$1_storage_gas_StorageGas(s), $per_item_create#$1_storage_gas_StorageGas(s), $per_item_write#$1_storage_gas_StorageGas(s), x, $per_byte_create#$1_storage_gas_StorageGas(s), $per_byte_write#$1_storage_gas_StorageGas(s))
}
function {:inline} $Update'$1_storage_gas_StorageGas'_per_byte_create(s: $1_storage_gas_StorageGas, x: int): $1_storage_gas_StorageGas {
    $1_storage_gas_StorageGas($per_item_read#$1_storage_gas_StorageGas(s), $per_item_create#$1_storage_gas_StorageGas(s), $per_item_write#$1_storage_gas_StorageGas(s), $per_byte_read#$1_storage_gas_StorageGas(s), x, $per_byte_write#$1_storage_gas_StorageGas(s))
}
function {:inline} $Update'$1_storage_gas_StorageGas'_per_byte_write(s: $1_storage_gas_StorageGas, x: int): $1_storage_gas_StorageGas {
    $1_storage_gas_StorageGas($per_item_read#$1_storage_gas_StorageGas(s), $per_item_create#$1_storage_gas_StorageGas(s), $per_item_write#$1_storage_gas_StorageGas(s), $per_byte_read#$1_storage_gas_StorageGas(s), $per_byte_create#$1_storage_gas_StorageGas(s), x)
}
function $IsValid'$1_storage_gas_StorageGas'(s: $1_storage_gas_StorageGas): bool {
    $IsValid'u64'($per_item_read#$1_storage_gas_StorageGas(s))
      && $IsValid'u64'($per_item_create#$1_storage_gas_StorageGas(s))
      && $IsValid'u64'($per_item_write#$1_storage_gas_StorageGas(s))
      && $IsValid'u64'($per_byte_read#$1_storage_gas_StorageGas(s))
      && $IsValid'u64'($per_byte_create#$1_storage_gas_StorageGas(s))
      && $IsValid'u64'($per_byte_write#$1_storage_gas_StorageGas(s))
}
function {:inline} $IsEqual'$1_storage_gas_StorageGas'(s1: $1_storage_gas_StorageGas, s2: $1_storage_gas_StorageGas): bool {
    s1 == s2
}
var $1_storage_gas_StorageGas_$memory: $Memory $1_storage_gas_StorageGas;

// struct storage_gas::StorageGasConfig at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.move:319:5+205
type {:datatype} $1_storage_gas_StorageGasConfig;
function {:constructor} $1_storage_gas_StorageGasConfig($item_config: $1_storage_gas_UsageGasConfig, $byte_config: $1_storage_gas_UsageGasConfig): $1_storage_gas_StorageGasConfig;
function {:inline} $Update'$1_storage_gas_StorageGasConfig'_item_config(s: $1_storage_gas_StorageGasConfig, x: $1_storage_gas_UsageGasConfig): $1_storage_gas_StorageGasConfig {
    $1_storage_gas_StorageGasConfig(x, $byte_config#$1_storage_gas_StorageGasConfig(s))
}
function {:inline} $Update'$1_storage_gas_StorageGasConfig'_byte_config(s: $1_storage_gas_StorageGasConfig, x: $1_storage_gas_UsageGasConfig): $1_storage_gas_StorageGasConfig {
    $1_storage_gas_StorageGasConfig($item_config#$1_storage_gas_StorageGasConfig(s), x)
}
function $IsValid'$1_storage_gas_StorageGasConfig'(s: $1_storage_gas_StorageGasConfig): bool {
    $IsValid'$1_storage_gas_UsageGasConfig'($item_config#$1_storage_gas_StorageGasConfig(s))
      && $IsValid'$1_storage_gas_UsageGasConfig'($byte_config#$1_storage_gas_StorageGasConfig(s))
}
function {:inline} $IsEqual'$1_storage_gas_StorageGasConfig'(s1: $1_storage_gas_StorageGasConfig, s2: $1_storage_gas_StorageGasConfig): bool {
    $IsEqual'$1_storage_gas_UsageGasConfig'($item_config#$1_storage_gas_StorageGasConfig(s1), $item_config#$1_storage_gas_StorageGasConfig(s2))
    && $IsEqual'$1_storage_gas_UsageGasConfig'($byte_config#$1_storage_gas_StorageGasConfig(s1), $byte_config#$1_storage_gas_StorageGasConfig(s2))}
var $1_storage_gas_StorageGasConfig_$memory: $Memory $1_storage_gas_StorageGasConfig;

// struct storage_gas::UsageGasConfig at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/storage_gas.move:221:5+171
type {:datatype} $1_storage_gas_UsageGasConfig;
function {:constructor} $1_storage_gas_UsageGasConfig($target_usage: int, $read_curve: $1_storage_gas_GasCurve, $create_curve: $1_storage_gas_GasCurve, $write_curve: $1_storage_gas_GasCurve): $1_storage_gas_UsageGasConfig;
function {:inline} $Update'$1_storage_gas_UsageGasConfig'_target_usage(s: $1_storage_gas_UsageGasConfig, x: int): $1_storage_gas_UsageGasConfig {
    $1_storage_gas_UsageGasConfig(x, $read_curve#$1_storage_gas_UsageGasConfig(s), $create_curve#$1_storage_gas_UsageGasConfig(s), $write_curve#$1_storage_gas_UsageGasConfig(s))
}
function {:inline} $Update'$1_storage_gas_UsageGasConfig'_read_curve(s: $1_storage_gas_UsageGasConfig, x: $1_storage_gas_GasCurve): $1_storage_gas_UsageGasConfig {
    $1_storage_gas_UsageGasConfig($target_usage#$1_storage_gas_UsageGasConfig(s), x, $create_curve#$1_storage_gas_UsageGasConfig(s), $write_curve#$1_storage_gas_UsageGasConfig(s))
}
function {:inline} $Update'$1_storage_gas_UsageGasConfig'_create_curve(s: $1_storage_gas_UsageGasConfig, x: $1_storage_gas_GasCurve): $1_storage_gas_UsageGasConfig {
    $1_storage_gas_UsageGasConfig($target_usage#$1_storage_gas_UsageGasConfig(s), $read_curve#$1_storage_gas_UsageGasConfig(s), x, $write_curve#$1_storage_gas_UsageGasConfig(s))
}
function {:inline} $Update'$1_storage_gas_UsageGasConfig'_write_curve(s: $1_storage_gas_UsageGasConfig, x: $1_storage_gas_GasCurve): $1_storage_gas_UsageGasConfig {
    $1_storage_gas_UsageGasConfig($target_usage#$1_storage_gas_UsageGasConfig(s), $read_curve#$1_storage_gas_UsageGasConfig(s), $create_curve#$1_storage_gas_UsageGasConfig(s), x)
}
function $IsValid'$1_storage_gas_UsageGasConfig'(s: $1_storage_gas_UsageGasConfig): bool {
    $IsValid'u64'($target_usage#$1_storage_gas_UsageGasConfig(s))
      && $IsValid'$1_storage_gas_GasCurve'($read_curve#$1_storage_gas_UsageGasConfig(s))
      && $IsValid'$1_storage_gas_GasCurve'($create_curve#$1_storage_gas_UsageGasConfig(s))
      && $IsValid'$1_storage_gas_GasCurve'($write_curve#$1_storage_gas_UsageGasConfig(s))
}
function {:inline} $IsEqual'$1_storage_gas_UsageGasConfig'(s1: $1_storage_gas_UsageGasConfig, s2: $1_storage_gas_UsageGasConfig): bool {
    $IsEqual'u64'($target_usage#$1_storage_gas_UsageGasConfig(s1), $target_usage#$1_storage_gas_UsageGasConfig(s2))
    && $IsEqual'$1_storage_gas_GasCurve'($read_curve#$1_storage_gas_UsageGasConfig(s1), $read_curve#$1_storage_gas_UsageGasConfig(s2))
    && $IsEqual'$1_storage_gas_GasCurve'($create_curve#$1_storage_gas_UsageGasConfig(s1), $create_curve#$1_storage_gas_UsageGasConfig(s2))
    && $IsEqual'$1_storage_gas_GasCurve'($write_curve#$1_storage_gas_UsageGasConfig(s1), $write_curve#$1_storage_gas_UsageGasConfig(s2))}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:154:5+155
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $last_reconfiguration_time#$1_reconfiguration_Configuration($ResourceValue($1_reconfiguration_Configuration_$memory, 1))
}

// struct reconfiguration::Configuration at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:33:5+306
type {:datatype} $1_reconfiguration_Configuration;
function {:constructor} $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration;
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, $last_reconfiguration_time#$1_reconfiguration_Configuration(s), $events#$1_reconfiguration_Configuration(s))
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch#$1_reconfiguration_Configuration(s), x, $events#$1_reconfiguration_Configuration(s))
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch#$1_reconfiguration_Configuration(s), $last_reconfiguration_time#$1_reconfiguration_Configuration(s), x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'($epoch#$1_reconfiguration_Configuration(s))
      && $IsValid'u64'($last_reconfiguration_time#$1_reconfiguration_Configuration(s))
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($events#$1_reconfiguration_Configuration(s))
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:28:5+64
type {:datatype} $1_reconfiguration_NewEpochEvent;
function {:constructor} $1_reconfiguration_NewEpochEvent($epoch: int): $1_reconfiguration_NewEpochEvent;
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'($epoch#$1_reconfiguration_NewEpochEvent(s))
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// struct block::BlockResource at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/block.move:22:5+369
type {:datatype} $1_block_BlockResource;
function {:constructor} $1_block_BlockResource($height: int, $epoch_interval: int, $new_block_events: $1_event_EventHandle'$1_block_NewBlockEvent', $update_epoch_interval_events: $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'): $1_block_BlockResource;
function {:inline} $Update'$1_block_BlockResource'_height(s: $1_block_BlockResource, x: int): $1_block_BlockResource {
    $1_block_BlockResource(x, $epoch_interval#$1_block_BlockResource(s), $new_block_events#$1_block_BlockResource(s), $update_epoch_interval_events#$1_block_BlockResource(s))
}
function {:inline} $Update'$1_block_BlockResource'_epoch_interval(s: $1_block_BlockResource, x: int): $1_block_BlockResource {
    $1_block_BlockResource($height#$1_block_BlockResource(s), x, $new_block_events#$1_block_BlockResource(s), $update_epoch_interval_events#$1_block_BlockResource(s))
}
function {:inline} $Update'$1_block_BlockResource'_new_block_events(s: $1_block_BlockResource, x: $1_event_EventHandle'$1_block_NewBlockEvent'): $1_block_BlockResource {
    $1_block_BlockResource($height#$1_block_BlockResource(s), $epoch_interval#$1_block_BlockResource(s), x, $update_epoch_interval_events#$1_block_BlockResource(s))
}
function {:inline} $Update'$1_block_BlockResource'_update_epoch_interval_events(s: $1_block_BlockResource, x: $1_event_EventHandle'$1_block_UpdateEpochIntervalEvent'): $1_block_BlockResource {
    $1_block_BlockResource($height#$1_block_BlockResource(s), $epoch_interval#$1_block_BlockResource(s), $new_block_events#$1_block_BlockResource(s), x)
}
function $IsValid'$1_block_BlockResource'(s: $1_block_BlockResource): bool {
    $IsValid'u64'($height#$1_block_BlockResource(s))
      && $IsValid'u64'($epoch_interval#$1_block_BlockResource(s))
      && $IsValid'$1_event_EventHandle'$1_block_NewBlockEvent''($new_block_events#$1_block_BlockResource(s))
      && $IsValid'$1_event_EventHandle'$1_block_UpdateEpochIntervalEvent''($update_epoch_interval_events#$1_block_BlockResource(s))
}
function {:inline} $IsEqual'$1_block_BlockResource'(s1: $1_block_BlockResource, s2: $1_block_BlockResource): bool {
    s1 == s2
}
var $1_block_BlockResource_$memory: $Memory $1_block_BlockResource;

// struct block::NewBlockEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/block.move:33:5+345
type {:datatype} $1_block_NewBlockEvent;
function {:constructor} $1_block_NewBlockEvent($hash: int, $epoch: int, $round: int, $height: int, $previous_block_votes_bitvec: Vec (int), $proposer: int, $failed_proposer_indices: Vec (int), $time_microseconds: int): $1_block_NewBlockEvent;
function {:inline} $Update'$1_block_NewBlockEvent'_hash(s: $1_block_NewBlockEvent, x: int): $1_block_NewBlockEvent {
    $1_block_NewBlockEvent(x, $epoch#$1_block_NewBlockEvent(s), $round#$1_block_NewBlockEvent(s), $height#$1_block_NewBlockEvent(s), $previous_block_votes_bitvec#$1_block_NewBlockEvent(s), $proposer#$1_block_NewBlockEvent(s), $failed_proposer_indices#$1_block_NewBlockEvent(s), $time_microseconds#$1_block_NewBlockEvent(s))
}
function {:inline} $Update'$1_block_NewBlockEvent'_epoch(s: $1_block_NewBlockEvent, x: int): $1_block_NewBlockEvent {
    $1_block_NewBlockEvent($hash#$1_block_NewBlockEvent(s), x, $round#$1_block_NewBlockEvent(s), $height#$1_block_NewBlockEvent(s), $previous_block_votes_bitvec#$1_block_NewBlockEvent(s), $proposer#$1_block_NewBlockEvent(s), $failed_proposer_indices#$1_block_NewBlockEvent(s), $time_microseconds#$1_block_NewBlockEvent(s))
}
function {:inline} $Update'$1_block_NewBlockEvent'_round(s: $1_block_NewBlockEvent, x: int): $1_block_NewBlockEvent {
    $1_block_NewBlockEvent($hash#$1_block_NewBlockEvent(s), $epoch#$1_block_NewBlockEvent(s), x, $height#$1_block_NewBlockEvent(s), $previous_block_votes_bitvec#$1_block_NewBlockEvent(s), $proposer#$1_block_NewBlockEvent(s), $failed_proposer_indices#$1_block_NewBlockEvent(s), $time_microseconds#$1_block_NewBlockEvent(s))
}
function {:inline} $Update'$1_block_NewBlockEvent'_height(s: $1_block_NewBlockEvent, x: int): $1_block_NewBlockEvent {
    $1_block_NewBlockEvent($hash#$1_block_NewBlockEvent(s), $epoch#$1_block_NewBlockEvent(s), $round#$1_block_NewBlockEvent(s), x, $previous_block_votes_bitvec#$1_block_NewBlockEvent(s), $proposer#$1_block_NewBlockEvent(s), $failed_proposer_indices#$1_block_NewBlockEvent(s), $time_microseconds#$1_block_NewBlockEvent(s))
}
function {:inline} $Update'$1_block_NewBlockEvent'_previous_block_votes_bitvec(s: $1_block_NewBlockEvent, x: Vec (int)): $1_block_NewBlockEvent {
    $1_block_NewBlockEvent($hash#$1_block_NewBlockEvent(s), $epoch#$1_block_NewBlockEvent(s), $round#$1_block_NewBlockEvent(s), $height#$1_block_NewBlockEvent(s), x, $proposer#$1_block_NewBlockEvent(s), $failed_proposer_indices#$1_block_NewBlockEvent(s), $time_microseconds#$1_block_NewBlockEvent(s))
}
function {:inline} $Update'$1_block_NewBlockEvent'_proposer(s: $1_block_NewBlockEvent, x: int): $1_block_NewBlockEvent {
    $1_block_NewBlockEvent($hash#$1_block_NewBlockEvent(s), $epoch#$1_block_NewBlockEvent(s), $round#$1_block_NewBlockEvent(s), $height#$1_block_NewBlockEvent(s), $previous_block_votes_bitvec#$1_block_NewBlockEvent(s), x, $failed_proposer_indices#$1_block_NewBlockEvent(s), $time_microseconds#$1_block_NewBlockEvent(s))
}
function {:inline} $Update'$1_block_NewBlockEvent'_failed_proposer_indices(s: $1_block_NewBlockEvent, x: Vec (int)): $1_block_NewBlockEvent {
    $1_block_NewBlockEvent($hash#$1_block_NewBlockEvent(s), $epoch#$1_block_NewBlockEvent(s), $round#$1_block_NewBlockEvent(s), $height#$1_block_NewBlockEvent(s), $previous_block_votes_bitvec#$1_block_NewBlockEvent(s), $proposer#$1_block_NewBlockEvent(s), x, $time_microseconds#$1_block_NewBlockEvent(s))
}
function {:inline} $Update'$1_block_NewBlockEvent'_time_microseconds(s: $1_block_NewBlockEvent, x: int): $1_block_NewBlockEvent {
    $1_block_NewBlockEvent($hash#$1_block_NewBlockEvent(s), $epoch#$1_block_NewBlockEvent(s), $round#$1_block_NewBlockEvent(s), $height#$1_block_NewBlockEvent(s), $previous_block_votes_bitvec#$1_block_NewBlockEvent(s), $proposer#$1_block_NewBlockEvent(s), $failed_proposer_indices#$1_block_NewBlockEvent(s), x)
}
function $IsValid'$1_block_NewBlockEvent'(s: $1_block_NewBlockEvent): bool {
    $IsValid'address'($hash#$1_block_NewBlockEvent(s))
      && $IsValid'u64'($epoch#$1_block_NewBlockEvent(s))
      && $IsValid'u64'($round#$1_block_NewBlockEvent(s))
      && $IsValid'u64'($height#$1_block_NewBlockEvent(s))
      && $IsValid'vec'u8''($previous_block_votes_bitvec#$1_block_NewBlockEvent(s))
      && $IsValid'address'($proposer#$1_block_NewBlockEvent(s))
      && $IsValid'vec'u64''($failed_proposer_indices#$1_block_NewBlockEvent(s))
      && $IsValid'u64'($time_microseconds#$1_block_NewBlockEvent(s))
}
function {:inline} $IsEqual'$1_block_NewBlockEvent'(s1: $1_block_NewBlockEvent, s2: $1_block_NewBlockEvent): bool {
    $IsEqual'address'($hash#$1_block_NewBlockEvent(s1), $hash#$1_block_NewBlockEvent(s2))
    && $IsEqual'u64'($epoch#$1_block_NewBlockEvent(s1), $epoch#$1_block_NewBlockEvent(s2))
    && $IsEqual'u64'($round#$1_block_NewBlockEvent(s1), $round#$1_block_NewBlockEvent(s2))
    && $IsEqual'u64'($height#$1_block_NewBlockEvent(s1), $height#$1_block_NewBlockEvent(s2))
    && $IsEqual'vec'u8''($previous_block_votes_bitvec#$1_block_NewBlockEvent(s1), $previous_block_votes_bitvec#$1_block_NewBlockEvent(s2))
    && $IsEqual'address'($proposer#$1_block_NewBlockEvent(s1), $proposer#$1_block_NewBlockEvent(s2))
    && $IsEqual'vec'u64''($failed_proposer_indices#$1_block_NewBlockEvent(s1), $failed_proposer_indices#$1_block_NewBlockEvent(s2))
    && $IsEqual'u64'($time_microseconds#$1_block_NewBlockEvent(s1), $time_microseconds#$1_block_NewBlockEvent(s2))}

// struct block::UpdateEpochIntervalEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/block.move:46:5+121
type {:datatype} $1_block_UpdateEpochIntervalEvent;
function {:constructor} $1_block_UpdateEpochIntervalEvent($old_epoch_interval: int, $new_epoch_interval: int): $1_block_UpdateEpochIntervalEvent;
function {:inline} $Update'$1_block_UpdateEpochIntervalEvent'_old_epoch_interval(s: $1_block_UpdateEpochIntervalEvent, x: int): $1_block_UpdateEpochIntervalEvent {
    $1_block_UpdateEpochIntervalEvent(x, $new_epoch_interval#$1_block_UpdateEpochIntervalEvent(s))
}
function {:inline} $Update'$1_block_UpdateEpochIntervalEvent'_new_epoch_interval(s: $1_block_UpdateEpochIntervalEvent, x: int): $1_block_UpdateEpochIntervalEvent {
    $1_block_UpdateEpochIntervalEvent($old_epoch_interval#$1_block_UpdateEpochIntervalEvent(s), x)
}
function $IsValid'$1_block_UpdateEpochIntervalEvent'(s: $1_block_UpdateEpochIntervalEvent): bool {
    $IsValid'u64'($old_epoch_interval#$1_block_UpdateEpochIntervalEvent(s))
      && $IsValid'u64'($new_epoch_interval#$1_block_UpdateEpochIntervalEvent(s))
}
function {:inline} $IsEqual'$1_block_UpdateEpochIntervalEvent'(s1: $1_block_UpdateEpochIntervalEvent, s2: $1_block_UpdateEpochIntervalEvent): bool {
    s1 == s2
}
